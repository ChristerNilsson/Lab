'use strict';

// Generated by CoffeeScript 2.3.2
var cols, count, draw, gameOver, grid, images, loop2, make2DArray, mousePressed, preload, rows, setup, totalBees, w;

grid = null;

cols = null;

rows = null;

w = 20;

totalBees = 40;

images = {};

count = 0;

loop2 = function (f) {
  var i, j, k, len, ref, results;
  ref = range(cols);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    results.push(function () {
      var l, len1, ref1, results1;
      ref1 = range(rows);
      results1 = [];
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        j = ref1[l];
        results1.push(f(i, j));
      }
      return results1;
    }());
  }
  return results;
};

preload = function () {
  var file, k, len, ref, results;
  images = {};
  ref = '1 2 3 4 5 6 7 8 bomb flag tile tile_depressed'.split(' ');
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    file = ref[k];
    results.push(images[file] = loadImage(`graphics/${file}.png`));
  }
  return results;
};

setup = function () {
  var cell, n;
  createCanvas(410, 410);
  textAlign(CENTER, CENTER);
  textSize(w);
  rectMode(CENTER);
  cols = Math.floor(width / w);
  rows = Math.floor(height / w);
  grid = make2DArray(cols, rows, function (i, j) {
    return new Cell(i, j, w);
  });
  n = 0;
  while (n < totalBees) {
    cell = grid[int(random(cols))][int(random(rows))];
    if (!cell.bee) {
      cell.bee = true;
      n++;
    }
  }
  return loop2(function (i, j) {
    return grid[i][j].countBees();
  });
};

draw = function () {
  background(255);
  loop2(function (i, j) {
    return grid[i][j].show();
  });
  if (count === cols * rows) {
    return text('Game Over', width / 2, height / 2);
  }
};

make2DArray = function (cols, rows, f) {
  var arr, i, j, k, l, len, len1, ref, ref1;
  arr = new Array(cols);
  ref = range(arr.length);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    arr[i] = new Array(rows);
    ref1 = range(cols);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      j = ref1[l];
      arr[i][j] = f(i, j);
    }
  }
  return arr;
};

gameOver = function () {
  return loop2(function (i, j) {
    return grid[i][j].revealed = true;
  });
};

mousePressed = function () {
  return loop2(function (i, j) {
    if (grid[i][j].contains(mouseX, mouseY)) {
      if (mouseButton === LEFT) {
        grid[i][j].reveal();
        if (grid[i][j].bee) {
          return gameOver();
        }
      } else if (mouseButton === RIGHT) {
        return grid[i][j].toggle();
      }
    }
  });
};
//# sourceMappingURL=sketch.js.map
