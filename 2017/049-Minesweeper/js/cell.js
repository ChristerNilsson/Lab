// Generated by CoffeeScript 1.11.1
var Cell;

Cell = (function() {
  function Cell(i1, j1, w) {
    this.i = i1;
    this.j = j1;
    this.w = w;
    this.x = this.i * this.w + this.w / 2;
    this.y = this.j * this.w + this.w / 2;
    this.neighborCount = 0;
    this.bee = false;
    this.revealed = false;
  }

  Cell.prototype.show = function() {
    sc(0);
    fc();
    rect(this.x, this.y, this.w, this.w);
    if (this.revealed) {
      if (this.bee) {
        fc(0.5);
        return circle(this.x, this.y, this.w * 0.25);
      } else {
        fc(0.75);
        rect(this.x, this.y, this.w, this.w);
        if (this.neighborCount > 0) {
          fc(0);
          return text(this.neighborCount, this.x, this.y);
        }
      }
    }
  };

  Cell.prototype.countBees = function() {
    var i, j, k, l, len, len1, neighbor, ref, ref1, total, xoff, yoff;
    if (this.bee) {
      this.neighborCount = -1;
      return;
    }
    total = 0;
    ref = range(-1, 2);
    for (k = 0, len = ref.length; k < len; k++) {
      xoff = ref[k];
      ref1 = range(-1, 2);
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        yoff = ref1[l];
        i = this.i + xoff;
        j = this.j + yoff;
        if ((-1 < i && i < cols) && (-1 < j && j < rows)) {
          neighbor = grid[i][j];
          if (neighbor.bee) {
            total++;
          }
        }
      }
    }
    return this.neighborCount = total;
  };

  Cell.prototype.contains = function(x, y) {
    return (this.x < x && x < this.x + this.w) && (this.y < y && y < this.y + this.w);
  };

  Cell.prototype.reveal = function() {
    this.revealed = true;
    if (this.neighborCount === 0) {
      return this.floodFill();
    }
  };

  Cell.prototype.floodFill = function() {
    var i, j, k, len, neighbor, ref, results, xoff, yoff;
    ref = range(-1, 2);
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      xoff = ref[k];
      results.push((function() {
        var l, len1, ref1, results1;
        ref1 = range(-1, 2);
        results1 = [];
        for (l = 0, len1 = ref1.length; l < len1; l++) {
          yoff = ref1[l];
          i = this.i + xoff;
          j = this.j + yoff;
          if ((-1 < i && i < cols) && (-1 < j && j < rows)) {
            neighbor = grid[i][j];
            if (!(neighbor.bee || neighbor.revealed)) {
              results1.push(neighbor.reveal());
            } else {
              results1.push(void 0);
            }
          } else {
            results1.push(void 0);
          }
        }
        return results1;
      }).call(this));
    }
    return results;
  };

  return Cell;

})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxjZWxsLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQTs7QUFBTTtFQUNTLGNBQUMsRUFBRCxFQUFLLEVBQUwsRUFBUyxDQUFUO0lBQUMsSUFBQyxDQUFBLElBQUQ7SUFBSSxJQUFDLENBQUEsSUFBRDtJQUFJLElBQUMsQ0FBQSxJQUFEO0lBQ3RCLElBQUMsQ0FBQSxDQUFELEdBQUssSUFBQyxDQUFBLENBQUQsR0FBSyxJQUFDLENBQUEsQ0FBTixHQUFVLElBQUMsQ0FBQSxDQUFELEdBQUc7SUFDbEIsSUFBQyxDQUFBLENBQUQsR0FBSyxJQUFDLENBQUEsQ0FBRCxHQUFLLElBQUMsQ0FBQSxDQUFOLEdBQVUsSUFBQyxDQUFBLENBQUQsR0FBRztJQUNsQixJQUFDLENBQUEsYUFBRCxHQUFpQjtJQUNqQixJQUFDLENBQUEsR0FBRCxHQUFPO0lBQ1AsSUFBQyxDQUFBLFFBQUQsR0FBWTtFQUxDOztpQkFPZCxJQUFBLEdBQU8sU0FBQTtJQUNOLEVBQUEsQ0FBRyxDQUFIO0lBQ0EsRUFBQSxDQUFBO0lBQ0EsSUFBQSxDQUFLLElBQUMsQ0FBQSxDQUFOLEVBQVMsSUFBQyxDQUFBLENBQVYsRUFBYSxJQUFDLENBQUEsQ0FBZCxFQUFpQixJQUFDLENBQUEsQ0FBbEI7SUFDQSxJQUFHLElBQUMsQ0FBQSxRQUFKO01BQ0MsSUFBRyxJQUFDLENBQUEsR0FBSjtRQUNDLEVBQUEsQ0FBRyxHQUFIO2VBQ0EsTUFBQSxDQUFPLElBQUMsQ0FBQSxDQUFSLEVBQVcsSUFBQyxDQUFBLENBQVosRUFBZ0IsSUFBQyxDQUFBLENBQUQsR0FBSyxJQUFyQixFQUZEO09BQUEsTUFBQTtRQUlDLEVBQUEsQ0FBRyxJQUFIO1FBQ0EsSUFBQSxDQUFLLElBQUMsQ0FBQSxDQUFOLEVBQVMsSUFBQyxDQUFBLENBQVYsRUFBYSxJQUFDLENBQUEsQ0FBZCxFQUFpQixJQUFDLENBQUEsQ0FBbEI7UUFDQSxJQUFHLElBQUMsQ0FBQSxhQUFELEdBQWlCLENBQXBCO1VBQ0MsRUFBQSxDQUFHLENBQUg7aUJBRUEsSUFBQSxDQUFLLElBQUMsQ0FBQSxhQUFOLEVBQXFCLElBQUMsQ0FBQSxDQUF0QixFQUF5QixJQUFDLENBQUEsQ0FBMUIsRUFIRDtTQU5EO09BREQ7O0VBSk07O2lCQWdCUCxTQUFBLEdBQVksU0FBQTtBQUNYLFFBQUE7SUFBQSxJQUFHLElBQUMsQ0FBQSxHQUFKO01BQ0MsSUFBQyxDQUFBLGFBQUQsR0FBaUIsQ0FBQztBQUNsQixhQUZEOztJQUlBLEtBQUEsR0FBUTtBQUNSO0FBQUEsU0FBQSxxQ0FBQTs7QUFDQztBQUFBLFdBQUEsd0NBQUE7O1FBQ0MsQ0FBQSxHQUFJLElBQUMsQ0FBQSxDQUFELEdBQUs7UUFDVCxDQUFBLEdBQUksSUFBQyxDQUFBLENBQUQsR0FBSztRQUNULElBQUcsQ0FBQSxDQUFDLENBQUQsR0FBSyxDQUFMLElBQUssQ0FBTCxHQUFTLElBQVQsQ0FBQSxJQUFrQixDQUFBLENBQUMsQ0FBRCxHQUFLLENBQUwsSUFBSyxDQUFMLEdBQVMsSUFBVCxDQUFyQjtVQUNDLFFBQUEsR0FBVyxJQUFLLENBQUEsQ0FBQSxDQUFHLENBQUEsQ0FBQTtVQUNuQixJQUFHLFFBQVEsQ0FBQyxHQUFaO1lBQXFCLEtBQUEsR0FBckI7V0FGRDs7QUFIRDtBQUREO1dBT0EsSUFBQyxDQUFBLGFBQUQsR0FBaUI7RUFiTjs7aUJBZVosUUFBQSxHQUFXLFNBQUMsQ0FBRCxFQUFJLENBQUo7V0FBVSxDQUFBLElBQUMsQ0FBQSxDQUFELEdBQUssQ0FBTCxJQUFLLENBQUwsR0FBUyxJQUFDLENBQUEsQ0FBRCxHQUFLLElBQUMsQ0FBQSxDQUFmLENBQUEsSUFBcUIsQ0FBQSxJQUFDLENBQUEsQ0FBRCxHQUFLLENBQUwsSUFBSyxDQUFMLEdBQVMsSUFBQyxDQUFBLENBQUQsR0FBSyxJQUFDLENBQUEsQ0FBZjtFQUEvQjs7aUJBRVgsTUFBQSxHQUFTLFNBQUE7SUFDUixJQUFDLENBQUEsUUFBRCxHQUFZO0lBQ1osSUFBRyxJQUFDLENBQUEsYUFBRCxLQUFrQixDQUFyQjthQUE0QixJQUFDLENBQUEsU0FBRCxDQUFBLEVBQTVCOztFQUZROztpQkFJVCxTQUFBLEdBQVksU0FBQTtBQUNYLFFBQUE7QUFBQTtBQUFBO1NBQUEscUNBQUE7Ozs7QUFDQztBQUFBO2FBQUEsd0NBQUE7O1VBQ0MsQ0FBQSxHQUFJLElBQUMsQ0FBQSxDQUFELEdBQUs7VUFDVCxDQUFBLEdBQUksSUFBQyxDQUFBLENBQUQsR0FBSztVQUNULElBQUcsQ0FBQSxDQUFDLENBQUQsR0FBSyxDQUFMLElBQUssQ0FBTCxHQUFTLElBQVQsQ0FBQSxJQUFrQixDQUFBLENBQUMsQ0FBRCxHQUFLLENBQUwsSUFBSyxDQUFMLEdBQVMsSUFBVCxDQUFyQjtZQUNDLFFBQUEsR0FBVyxJQUFLLENBQUEsQ0FBQSxDQUFHLENBQUEsQ0FBQTtZQUNuQixJQUFHLENBQUksQ0FBQyxRQUFRLENBQUMsR0FBVCxJQUFnQixRQUFRLENBQUMsUUFBMUIsQ0FBUDs0QkFBZ0QsUUFBUSxDQUFDLE1BQVQsQ0FBQSxHQUFoRDthQUFBLE1BQUE7b0NBQUE7YUFGRDtXQUFBLE1BQUE7a0NBQUE7O0FBSEQ7OztBQUREOztFQURXIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQ2VsbFxuXHRjb25zdHJ1Y3RvciA6IChAaSwgQGosIEB3KSAtPlxuXHRcdEB4ID0gQGkgKiBAdyArIEB3LzJcblx0XHRAeSA9IEBqICogQHcgKyBAdy8yXG5cdFx0QG5laWdoYm9yQ291bnQgPSAwXG5cdFx0QGJlZSA9IGZhbHNlXG5cdFx0QHJldmVhbGVkID0gZmFsc2VcblxuXHRzaG93IDogLT5cblx0XHRzYyAwXG5cdFx0ZmMoKVxuXHRcdHJlY3QgQHgsIEB5LCBAdywgQHdcblx0XHRpZiBAcmV2ZWFsZWRcblx0XHRcdGlmIEBiZWVcblx0XHRcdFx0ZmMgMC41XG5cdFx0XHRcdGNpcmNsZSBAeCwgQHkgLCBAdyAqIDAuMjVcblx0XHRcdGVsc2Vcblx0XHRcdFx0ZmMgMC43NVxuXHRcdFx0XHRyZWN0IEB4LCBAeSwgQHcsIEB3XG5cdFx0XHRcdGlmIEBuZWlnaGJvckNvdW50ID4gMFxuXHRcdFx0XHRcdGZjIDBcblx0XHRcdFx0XHQjZmlsbCBjYyBAbmVpZ2hib3JDb3VudFxuXHRcdFx0XHRcdHRleHQgQG5laWdoYm9yQ291bnQsIEB4LCBAeVxuXG5cdGNvdW50QmVlcyA6IC0+XG5cdFx0aWYgQGJlZVxuXHRcdFx0QG5laWdoYm9yQ291bnQgPSAtMVxuXHRcdFx0cmV0dXJuXG5cblx0XHR0b3RhbCA9IDBcblx0XHRmb3IgeG9mZiBpbiByYW5nZSAtMSwyXG5cdFx0XHRmb3IgeW9mZiBpbiByYW5nZSAtMSwyXG5cdFx0XHRcdGkgPSBAaSArIHhvZmZcblx0XHRcdFx0aiA9IEBqICsgeW9mZlxuXHRcdFx0XHRpZiAtMSA8IGkgPCBjb2xzIGFuZCAtMSA8IGogPCByb3dzXG5cdFx0XHRcdFx0bmVpZ2hib3IgPSBncmlkW2ldW2pdXG5cdFx0XHRcdFx0aWYgbmVpZ2hib3IuYmVlIHRoZW4gdG90YWwrK1xuXHRcdEBuZWlnaGJvckNvdW50ID0gdG90YWxcblxuXHRjb250YWlucyA6ICh4LCB5KSAtPiBAeCA8IHggPCBAeCArIEB3IGFuZCBAeSA8IHkgPCBAeSArIEB3XG5cblx0cmV2ZWFsIDogLT5cblx0XHRAcmV2ZWFsZWQgPSB0cnVlXG5cdFx0aWYgQG5laWdoYm9yQ291bnQgPT0gMCB0aGVuXHRAZmxvb2RGaWxsKClcblxuXHRmbG9vZEZpbGwgOiAoKSAtPlxuXHRcdGZvciB4b2ZmIGluIHJhbmdlIC0xLDJcblx0XHRcdGZvciB5b2ZmIGluIHJhbmdlIC0xLDJcblx0XHRcdFx0aSA9IEBpICsgeG9mZlxuXHRcdFx0XHRqID0gQGogKyB5b2ZmXG5cdFx0XHRcdGlmIC0xIDwgaSA8IGNvbHMgYW5kIC0xIDwgaiA8IHJvd3Ncblx0XHRcdFx0XHRuZWlnaGJvciA9IGdyaWRbaV1bal1cblx0XHRcdFx0XHRpZiBub3QgKG5laWdoYm9yLmJlZSBvciBuZWlnaGJvci5yZXZlYWxlZCkgdGhlbiBuZWlnaGJvci5yZXZlYWwoKSJdfQ==
//# sourceURL=C:\Lab\2017\049-Minesweeper\coffee\cell.coffee