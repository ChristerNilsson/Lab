// Generated by CoffeeScript 1.12.7
var A, ABCDE, B, C, D, E, PROBLEMS, block_event, buffer, counter, cursor_activity, dump, editor, iProblem, input_read, key_handled, my_copy, nCommands, nextProblem, setup, target, update,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

counter = 0;

nCommands = 0;

A = 'for i in range 10\n';

B = '\tfor j in range 10\n';

C = '\t\tx = lerp 10,30,i\n';

D = '\t\ty = lerp 10,30,j\n';

E = '\t\trect x,y,10,10\n';

ABCDE = A + B + C + D + E;

iProblem = 0;

buffer = '';

target = null;

editor = null;

PROBLEMS = [[1, 2, 8, ABCDE, "" + A + B + "\t\tx = lezrp 10,30,i\n" + D + E], [1, 2, 8, ABCDE, "" + A + B + "\t\tx = lrp 10,30,i\n" + D + E], [1, 2, 8, ABCDE, "" + A + B + "\t\tx = lep 10,30,i\n" + D + E], [1, 2, 8, ABCDE, "" + A + B + D + E], [1, 2, 8, ABCDE, "" + A + B + C + C + D + E], [1, 2, 8, ABCDE, "" + A + B + C + "\t\t\n" + D + E], [1, 2, 8, ABCDE, "" + A + B + "\t\t\n" + C + D + E], [1, 2, 8, ABCDE, "" + A + C + B + D + E], [1, 2, 8, ABCDE, "" + A + B + D + C + E], [1, 2, 8, ABCDE, "" + A + B + "\t\tx = le\n" + D + E], [1, 2, 8, ABCDE, "" + A + B + "\tx = lerp 10,30,i\n" + D + E], [2, 2, 8, ABCDE, "" + A + B + "\t" + C + D + E], [2, 2, 8, ABCDE, "z" + A + B + C + D + E], [2, 2, 8, ABCDE, "" + A + B + "\t\tx = le 10,30,i\n" + D + E], [2, 2, 8, ABCDE, "" + A + B + C + D + E + "z"], [2, 2, 8, ABCDE, "" + A + B + "\t\tx = lerp 10,30,iz\n" + D + E], [2, 2, 8, ABCDE, ""], [2, 2, 8, ABCDE, 'for i in range 10\nfor j in range 10\n\tx = lerp 10,30,i\n\ty = lerp 10,30,j\n\trect x,y,10,10\n'], [2, 2, 8, ABCDE, "\t" + A + "\t" + B + "\t" + C + "\t" + D + "\t" + E], [2, 2, 8, ABCDE, "" + A + B + "\t\tx =  10,30,i\n" + D + E], [3, 2, 8, ABCDE, "" + A + B + C + "\t\ty = lerp 10,30,jz\n" + E], [3, 2, 8, ABCDE, "for i in range 10z\n" + B + C + D + E], [3, 2, 8, ABCDE, "" + A + B + "z" + C + D + E], [4, 2, 8, ABCDE, "" + A + B + "\t\tx = rple 10,30,i\n" + D + E], [5, 2, 8, ABCDE, "" + A + B + "\t\tx = lerplerplerp 10,30,i\n" + D + E], [5, 2, 8, ABCDE, 'for i in range 10 for j in range 10 x = lerp 10,30,i y = lerp 10,30,j rect x,y,10,10\n'], [5, 2, 8, ABCDE, "" + A + B + C + D + C + D + E], [12, 2, 8, ABCDE, A + "\tx = lerp 10,30,i\n\trect x,0,10,10\n"], [15, 2, 8, "# " + A + "# " + B + "# " + C + "# " + D + "# " + E, ABCDE], [19, 2, 8, ABCDE, "# " + A + "# " + B + "# " + C + "# " + D + "# " + E], [23, 2, 8, ABCDE, "" + A + B + "\t\trect 10+20*i,10+20*j,10,10\n"], [21, 0, 0, '', "oxoxoxox\nxoxoxoxo\noxoxoxox\nxoxoxoxo\noxoxoxox\nxoxoxoxo\noxoxoxox\nxoxoxoxo"]];

update = function() {
  var diff;
  diff = nCommands - counter;
  operations.innerHTML = diff;
  problem.innerHTML = iProblem;
  problem.style.color = 'white';
  return operations.style.color = target.getValue() === editor.getValue() ? 'green' : 'red';
};

dump = function(ch) {
  buffer += ch;
  if (buffer.length > 3 || indexOf.call('AA FA AFA BA D'.split(' '), buffer) >= 0) {
    buffer = '';
    counter++;
  }
  return update();
};

cursor_activity = function() {
  return dump('A');
};

key_handled = function() {
  return dump('B');
};

my_copy = function() {
  return dump('D');
};

input_read = function() {
  return dump('F');
};

block_event = function(obj, event) {
  editor.focus();
  return event.preventDefault();
};

setup = function() {
  var cursor, defaultValues;
  defaultValues = {
    lineNumbers: true,
    mode: "coffeescript",
    keyMap: "sublime",
    theme: "dracula",
    autoCloseBrackets: true,
    lineWiseCopyCut: true,
    tabSize: 2,
    indentWithTabs: true,
    matchBrackets: true
  };
  target = CodeMirror.fromTextArea(document.getElementById("target"), defaultValues);
  target.on("mousedown", block_event);
  target.on("touchstart", block_event);
  editor = CodeMirror.fromTextArea(document.getElementById("editor"), defaultValues);
  editor.on("mousedown", block_event);
  editor.on("touchstart", block_event);
  editor.on("inputRead", input_read);
  editor.on("keyHandled", key_handled);
  editor.on("cursorActivity", cursor_activity);
  editor.on("copy", my_copy);
  editor.focus();
  cursor = editor.getCursor();
  return nextProblem(0);
};

nextProblem = function(d) {
  var ch, line, ref, slut, start;
  iProblem += d;
  iProblem = constrain(iProblem, 0, PROBLEMS.length - 1);
  ref = PROBLEMS[iProblem], nCommands = ref[0], line = ref[1], ch = ref[2], start = ref[3], slut = ref[4];
  target.setValue(slut);
  target.setCursor(line, ch);
  editor.setValue(start);
  editor.setCursor(line, ch);
  counter = 0;
  buffer = '';
  update();
  return editor.focus();
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\132-EditorTrainer\coffee\sketch.coffee