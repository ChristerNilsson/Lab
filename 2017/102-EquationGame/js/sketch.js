// Generated by CoffeeScript 1.11.1
var Button, R, arrTargets, buttons, draw, dump, f, hist, level, makeProblem, matrix, mousePressed, n, newButton, newGame, randint, setup, start, targets, undo, undoButton;

buttons = [];

hist = [];

targets = [];

undoButton = null;

newButton = null;

n = 2;

level = 2;

start = [];

matrix = [];

arrTargets = [];

R = 25;

Button = (function() {
  function Button(i1, value1, x, y, r, f1) {
    this.i = i1;
    this.value = value1;
    this.x = x;
    this.y = y;
    this.r = r;
    this.f = f1;
  }

  Button.prototype.draw = function() {
    fc(1);
    circle(this.x, this.y, this.r);
    fc(0);
    return text(this.value, this.x, this.y);
  };

  Button.prototype.mousePressed = function() {
    if (dist(mouseX, mouseY, this.x, this.y) < this.r) {
      return this.f();
    }
  };

  return Button;

})();

f = function() {
  var button, cell, i, k, len, row, sum;
  hist.push((function() {
    var k, len, results;
    results = [];
    for (k = 0, len = buttons.length; k < len; k++) {
      button = buttons[k];
      results.push(button.value);
    }
    return results;
  })());
  undoButton.value = level - hist.length;
  row = matrix[this.i];
  sum = 0;
  for (i = k = 0, len = row.length; k < len; i = ++k) {
    cell = row[i];
    sum += cell * buttons[i].value;
  }
  return buttons[this.i].value = sum;
};

dump = function() {
  return print(level, hist.length, level - hist.length);
};

undo = function() {
  var i, item, k, len, value;
  if (hist.length > 0) {
    item = hist.pop();
    for (i = k = 0, len = item.length; k < len; i = ++k) {
      value = item[i];
      buttons[i].value = value;
    }
    return undoButton.value = level - hist.length;
  }
};

newGame = function() {
  return makeProblem();
};

randint = function(a, b) {
  return a + int(random(b - a));
};

makeProblem = function() {
  var a, b, i, j, k, l, len, len1, len2, len3, m, o, ref, ref1, ref2, ref3;
  start = [];
  matrix = [];
  arrTargets = [];
  hist = [];
  a = -n;
  b = n + 1;
  ref = range(n);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    start.push(randint(a, b));
    matrix.push((function() {
      var l, len1, ref1, results;
      ref1 = range(n);
      results = [];
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        j = ref1[l];
        results.push(randint(a, b));
      }
      return results;
    })());
    buttons[i].value = start[i];
  }
  ref1 = range(level);
  for (l = 0, len1 = ref1.length; l < len1; l++) {
    i = ref1[l];
    buttons[randint(0, n)].f();
  }
  ref2 = range(n);
  for (m = 0, len2 = ref2.length; m < len2; m++) {
    i = ref2[m];
    arrTargets.push(buttons[i].value);
  }
  ref3 = range(n);
  for (o = 0, len3 = ref3.length; o < len3; o++) {
    i = ref3[o];
    buttons[i].value = start[i];
  }
  hist = [];
  return undoButton.value = level - hist.length;
};

setup = function() {
  var i, k, len, ref;
  createCanvas(600, 400);
  rectMode(CENTER);
  textAlign(CENTER, CENTER);
  ref = range(n);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    buttons.push(new Button(i, 0, 2 * R * n + R, R + 2 * R * i, R, f));
  }
  undoButton = new Button(-1, 0, width - R, R, R, undo);
  newButton = new Button(-1, 'new', width - R, 3 * R, R, newGame);
  return makeProblem();
};

draw = function() {
  var button, i, j, k, l, len, len1, len2, len3, m, o, ref, ref1, ref2, ref3, results;
  bg(0.5);
  textSize(20);
  ref = buttons.concat([undoButton]);
  for (k = 0, len = ref.length; k < len; k++) {
    button = ref[k];
    button.draw();
  }
  if (undoButton.value === 0 && _.isEqual(arrTargets, (function() {
    var l, len1, results;
    results = [];
    for (l = 0, len1 = buttons.length; l < len1; l++) {
      button = buttons[l];
      results.push(button.value);
    }
    return results;
  })())) {
    newButton.draw();
  }
  ref1 = range(n);
  for (l = 0, len1 = ref1.length; l < len1; l++) {
    i = ref1[l];
    ref2 = range(n);
    for (m = 0, len2 = ref2.length; m < len2; m++) {
      j = ref2[m];
      text(matrix[i][j], R + 2 * R * j, R + 2 * R * i);
    }
  }
  fc(0, 1, 0);
  ref3 = range(n);
  results = [];
  for (o = 0, len3 = ref3.length; o < len3; o++) {
    i = ref3[o];
    results.push(text(arrTargets[i], 2 * R * (n + 1) + R, R + 2 * R * i));
  }
  return results;
};

mousePressed = function() {
  var button, k, len, ref, results;
  ref = buttons.concat([newButton, undoButton]);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    button = ref[k];
    results.push(button.mousePressed());
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\102-EquationGame\coffee\sketch.coffee