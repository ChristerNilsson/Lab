// Generated by CoffeeScript 1.11.1
var Matrix, a, b, c;

Matrix = (function() {
  function Matrix(rows, cols) {
    var i, j;
    this.rows = rows;
    this.cols = cols;
    this.matrix = (function() {
      var l, len, ref, results;
      ref = range(this.rows);
      results = [];
      for (l = 0, len = ref.length; l < len; l++) {
        i = ref[l];
        results.push((function() {
          var len1, m, ref1, results1;
          ref1 = range(this.cols);
          results1 = [];
          for (m = 0, len1 = ref1.length; m < len1; m++) {
            j = ref1[m];
            results1.push(0);
          }
          return results1;
        }).call(this));
      }
      return results;
    }).call(this);
  }

  Matrix.prototype.iterate = function(f) {
    var i, j, result;
    result = new Matrix(this.cols, this.rows);
    result.matrix = (function() {
      var l, len, ref, results;
      ref = range(this.rows);
      results = [];
      for (l = 0, len = ref.length; l < len; l++) {
        i = ref[l];
        results.push((function() {
          var len1, m, ref1, results1;
          ref1 = range(this.cols);
          results1 = [];
          for (m = 0, len1 = ref1.length; m < len1; m++) {
            j = ref1[m];
            results1.push(f(i, j));
          }
          return results1;
        }).call(this));
      }
      return results;
    }).call(this);
    return result;
  };

  Matrix.prototype.map = function(f) {
    return this.iterate((function(_this) {
      return function(i, j) {
        return f(_this.matrix[i][j]);
      };
    })(this));
  };

  Matrix.prototype.add = function(other) {
    if (other instanceof Matrix) {
      return this.iterate((function(_this) {
        return function(i, j) {
          return _this.matrix[i][j] + other.matrix[i][j];
        };
      })(this));
    } else {
      return this.iterate((function(_this) {
        return function(i, j) {
          return _this.matrix[i][j] + other;
        };
      })(this));
    }
  };

  Matrix.prototype.sub = function(other) {
    if (other instanceof Matrix) {
      return this.iterate((function(_this) {
        return function(i, j) {
          return _this.matrix[i][j] - other.matrix[i][j];
        };
      })(this));
    } else {
      return this.iterate((function(_this) {
        return function(i, j) {
          return _this.matrix[i][j] - other;
        };
      })(this));
    }
  };

  Matrix.prototype.mul = function(other) {
    if (other instanceof Matrix) {
      return this.iterate((function(_this) {
        return function(i, j) {
          return _this.matrix[i][j] * other.matrix[i][j];
        };
      })(this));
    } else {
      return this.iterate((function(_this) {
        return function(i, j) {
          return _this.matrix[i][j] * other;
        };
      })(this));
    }
  };

  Matrix.prototype.toArray = function() {
    return _.flatten(this.matrix);
  };

  Matrix.prototype.copy = function() {
    return this.iterate((function(_this) {
      return function(i, j) {
        return _this.matrix[i][j];
      };
    })(this));
  };

  Matrix.prototype.transpose = function() {
    return this.iterate((function(_this) {
      return function(i, j) {
        return _this.matrix[j][i];
      };
    })(this));
  };

  Matrix.prototype.randint = function(n) {
    if (n == null) {
      n = 10;
    }
    return this.iterate(function(i, j) {
      return Math.floor(n * Math.random());
    });
  };

  Matrix.prototype.dot = function(other) {
    return this.iterate((function(_this) {
      return function(i, j) {
        var k, l, len, ref, sum;
        sum = 0;
        ref = range(_this.cols);
        for (l = 0, len = ref.length; l < len; l++) {
          k = ref[l];
          sum += _this.matrix[i][k] * other.matrix[k][j];
        }
        return sum;
      };
    })(this));
  };

  return Matrix;

})();

a = new Matrix(2, 2);

b = new Matrix(2, 2);

assert(a.matrix, [[0, 0], [0, 0]]);

a.matrix = [[1, 2], [3, 4]];

b.matrix = [[5, 6], [7, 8]];

assert(a.add(b).matrix, [[6, 8], [10, 12]]);

assert(b.sub(a).matrix, [[4, 4], [4, 4]]);

assert(a.mul(b).matrix, [[5, 12], [21, 32]]);

assert(a.add(2).matrix, [[3, 4], [5, 6]]);

assert(a.sub(2).matrix, [[-1, 0], [1, 2]]);

assert(a.mul(2).matrix, [[2, 4], [6, 8]]);

assert(a.toArray(), [1, 2, 3, 4]);

assert(a.copy().matrix, [[1, 2], [3, 4]]);

assert(a.transpose().matrix, [[1, 3], [2, 4]]);

assert(a.dot(b).matrix, [[19, 22], [43, 50]]);

c = a.map(function(x) {
  return x * x;
});

assert([[1, 4], [9, 16]], c.matrix);

print(a.randint(20));

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\055-Matrix\coffee\sketch.coffee