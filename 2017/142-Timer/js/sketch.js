// Generated by CoffeeScript 1.12.7
var State, audio, button, div, draw, render, setup, state;

render = function(tag, attrs, children) {
  var attr, child, key, res;
  res = ((function() {
    var results;
    results = [];
    for (key in attrs) {
      attr = attrs[key];
      results.push(' ' + key + '="' + attr + '"');
    }
    return results;
  })()).join('');
  return "<" + tag + res + ">" + (((function() {
    var j, len, results;
    results = [];
    for (j = 0, len = children.length; j < len; j++) {
      child = children[j];
      results.push(child);
    }
    return results;
  })()).join('')) + "</" + tag + ">\n";
};

button = function(attrs, children) {
  if (children == null) {
    children = [];
  }
  return render('button', attrs, children);
};

div = function(attrs, children) {
  if (children == null) {
    children = [];
  }
  return render('div', attrs, children);
};

State = (function() {
  function State(time, flag, start, memory) {
    var d, i;
    this.time = time;
    this.flag = flag;
    this.start = start;
    this.memory = memory;
    this.update('body', div({
      style: "font-size:50px"
    }, [
      div({}, (function() {
        var j, len, ref, results;
        ref = 'd5 d4 d3 d2 d1 d0'.split(' ');
        results = [];
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          d = ref[i];
          results.push(button({
            style: "font-size:40px",
            id: d,
            onclick: "state.f(" + (5 - i) + "," + [3, 10, 6, 10, 6, 10][i] + ")"
          }, ["0"]));
        }
        return results;
      })()), div({}, [
        button({
          style: "font-size:40px; width:140px",
          id: 'brun',
          onclick: "state.run()"
        }, ["run"]), button({
          style: "font-size:40px; width:140px",
          id: 'bclear',
          onclick: "state.clear()"
        }, ["clear"])
      ])
    ]));
  }

  State.prototype.f = function(i, n) {
    this.time[i] = (this.time[i] + 1) % n;
    this.memory[i] = (this.memory[i] + 1) % n;
    return this.fix({});
  };

  State.prototype.run = function() {
    var i, j, len, ref, results;
    this.flag = !this.flag;
    if (this.flag) {
      this.enableMusic();
      this.start = int(millis() / 1000);
      this.secs = 0;
      ref = range(6);
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        results.push(this.secs += [1, 10, 60, 600, 3600, 36000][i] * this.time[i]);
      }
      return results;
    }
  };

  State.prototype.clear = function() {
    var i, j, k, len, len1, ref, ref1;
    this.stopMusic();
    if (!_.isEqual(this.time, this.memory)) {
      ref = range(6);
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        this.time[i] = this.memory[i];
      }
    } else {
      ref1 = range(6);
      for (k = 0, len1 = ref1.length; k < len1; k++) {
        i = ref1[k];
        this.time[i] = 0;
        this.memory[i] = 0;
      }
    }
    return this.fix({});
  };

  State.prototype.enableMusic = function() {
    return this.music = true;
  };

  State.prototype.playMusic = function() {
    if (this.music) {
      return audio.play();
    }
  };

  State.prototype.stopMusic = function() {
    this.music = false;
    return audio.pause();
  };

  State.prototype.fix = function(hash) {
    var d, i, j, key, len, ref, value;
    for (key in hash) {
      value = hash[key];
      this.update(key, value);
    }
    ref = 'd0 d1 d2 d3 d4 d5'.split(' ');
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      d = ref[i];
      this.update(d, this.time[i]);
      this.disable(d, this.flag);
    }
    if (!this.flag && _.isEqual(this.time, [0, 0, 0, 0, 0, 0])) {
      this.playMusic();
    }
    this.disable('brun', _.isEqual(this.time, [0, 0, 0, 0, 0, 0]));
    return this.disable('bclear', this.flag);
  };

  State.prototype.update = function(name, value) {
    var obj;
    this[name] = value;
    obj = document.getElementById(name);
    if (obj) {
      return obj.innerHTML = value;
    }
  };

  State.prototype.disable = function(name, value) {
    return document.getElementById(name).disabled = value;
  };

  State.prototype.draw = function() {
    var i, j, len, n, ref, s;
    if (this.flag) {
      s = this.secs - (int(millis() / 1000) - this.start);
      if (s === 0) {
        this.flag = false;
      }
      ref = range(6);
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        n = [36000, 3600, 600, 60, 10, 1][i];
        this.time[5 - i] = int(s / n);
        s %= n;
      }
      this.fix({
        secs: this.secs
      });
      return this.fix({
        brun: 'pause'
      });
    } else {
      return this.fix({
        brun: 'run'
      });
    }
  };

  return State;

})();

audio = new Audio('music.mp3');

audio.play();

state = null;

setup = function() {
  return state = new State([0, 0, 0, 0, 0, 0], false, 0, [0, 0, 0, 0, 0, 0]);
};

draw = function() {
  return state.draw();
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\142-Timer\coffee\sketch.coffee