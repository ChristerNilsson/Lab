// Generated by CoffeeScript 1.12.7
var State, audio, button, checkbox, div, draw, h3, input, li, render, setup, state, strong, table, td, tr;

render = function(node) {
  var _props, attr, child, key;
  if (Array.isArray(node)) {
    return ((function() {
      var j, len, results;
      results = [];
      for (j = 0, len = node.length; j < len; j++) {
        child = node[j];
        results.push(render(child));
      }
      return results;
    })()).join('');
  }
  if (typeof node !== 'object') {
    return node;
  }
  _props = ((function() {
    var ref, results;
    ref = node.props;
    results = [];
    for (key in ref) {
      attr = ref[key];
      results.push(' ' + key + '="' + attr + '"');
    }
    return results;
  })()).join('');
  return "<" + node.tag + _props + ">" + (render(node.children)) + "</" + node.tag + ">\n";
};

button = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'button'
  };
};

div = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'div'
  };
};

strong = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'strong'
  };
};

li = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'li'
  };
};

h3 = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'h3'
  };
};

input = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'input'
  };
};

table = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'table'
  };
};

tr = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'tr'
  };
};

td = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'td'
  };
};

checkbox = function(p, c) {
  if (c == null) {
    c = [];
  }
  return input(_.extend(p, {
    type: 'checkbox'
  }, p.value ? {
    checked: true
  } : {}), c);
};

State = (function() {
  function State() {
    var struktur;
    this.time = [0, 0, 0, 0, 0, 0];
    this.runState = 0;
    this.start = 0;
    this.memory = [0, 0, 0, 0, 0, 0];
    struktur = [
      table({}, [
        tr({
          style: "font-size:20px;"
        }, [
          td({
            style: "width:90px"
          }, [
            div({}, 'Hours'), button({
              id: 'd5',
              style: "font-size:30px; width:40px",
              onclick: "state.f(5,3)"
            }, 0), button({
              id: 'd4',
              style: "font-size:30px; width:40px",
              onclick: "state.f(4,10)"
            }, 0)
          ]), td({
            style: "width:90px"
          }, [
            div({}, 'Minutes'), button({
              id: 'd3',
              style: "font-size:30px; width:40px",
              onclick: "state.f(3,6)"
            }, 0), button({
              id: 'd2',
              style: "font-size:30px; width:40px",
              onclick: "state.f(2,10)"
            }, 0)
          ]), td({
            style: "width:90px"
          }, [
            div({}, 'Seconds'), button({
              id: 'd1',
              style: "font-size:30px; width:40px",
              onclick: "state.f(1,6)"
            }, 0), button({
              id: 'd0',
              style: "font-size:30px; width:40px",
              onclick: "state.f(0,10)"
            }, 0)
          ])
        ])
      ]), button({
        id: 'bdone',
        style: "font-size:30px; width:135px",
        onclick: "state.done()"
      }, "Done"), button({
        id: 'brun',
        style: "font-size:30px; width:135px",
        onclick: "state.run()"
      }, "Start")
    ];
    this.update('body', render(struktur));
  }

  State.prototype.f = function(i, n) {
    this.time[i] = (this.time[i] + 1) % n;
    this.memory[i] = (this.memory[i] + 1) % n;
    return this.fix({});
  };

  State.prototype.run = function() {
    var i, j, len, ref, results;
    this.runState = [1, 2, 1][this.runState];
    if (this.runState === 1) {
      this.enableMusic();
      this.start = int(millis() / 1000);
      this.secs = 0;
      ref = range(6);
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        results.push(this.secs += [1, 10, 60, 600, 3600, 36000][i] * this.time[i]);
      }
      return results;
    }
  };

  State.prototype.done = function() {
    var i, j, k, len, len1, ref, ref1;
    this.stopMusic();
    if (!_.isEqual(this.time, this.memory)) {
      ref = range(6);
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        this.time[i] = this.memory[i];
      }
    } else {
      ref1 = range(6);
      for (k = 0, len1 = ref1.length; k < len1; k++) {
        i = ref1[k];
        this.time[i] = 0;
        this.memory[i] = 0;
      }
    }
    this.runState = 0;
    return this.fix({});
  };

  State.prototype.enableMusic = function() {
    return this.music = true;
  };

  State.prototype.playMusic = function() {
    if (this.music) {
      return audio.play();
    }
  };

  State.prototype.stopMusic = function() {
    this.music = false;
    return audio.pause();
  };

  State.prototype.fix = function(hash) {
    var d, i, j, key, len, ref, value;
    for (key in hash) {
      value = hash[key];
      this.update(key, value);
    }
    ref = 'd0 d1 d2 d3 d4 d5'.split(' ');
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      d = ref[i];
      this.update(d, this.time[i]);
      this.disable(d, this.runState === 1);
    }
    if (this.runState === 2 && _.isEqual(this.time, [0, 0, 0, 0, 0, 0])) {
      this.runState = 0;
      this.playMusic();
    }
    this.disable('bdone', this.runState === 1);
    this.disable('brun', _.isEqual(this.time, [0, 0, 0, 0, 0, 0]));
    this.update('brun', ['Start', 'Pause', 'Resume'][this.runState]);
    return this.bg('brun', ['lightgreen', 'red', 'lightgreen'][this.runState]);
  };

  State.prototype.update = function(id, value) {
    var obj;
    this[id] = value;
    obj = document.getElementById(id);
    if (obj) {
      return obj.innerHTML = value;
    }
  };

  State.prototype.disable = function(id, value) {
    return document.getElementById(id).disabled = value;
  };

  State.prototype.bg = function(id, value) {
    return document.getElementById(id).style.backgroundColor = value;
  };

  State.prototype.draw = function() {
    var i, j, len, n, ref, s;
    if (this.runState === 1) {
      s = this.secs - (int(millis() / 1000) - this.start);
      if (s === 0) {
        this.runState = 2;
      }
      ref = range(6);
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        n = [36000, 3600, 600, 60, 10, 1][i];
        this.time[5 - i] = int(s / n);
        s %= n;
      }
      this.fix({
        secs: this.secs
      });
    }
    return this.fix({});
  };

  return State;

})();

audio = new Audio('music.mp3');

audio.play();

state = null;

setup = function() {
  return state = new State;
};

draw = function() {
  return state.draw();
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\142-Timer\coffee\sketch.coffee