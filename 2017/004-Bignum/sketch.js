// Generated by CoffeeScript 1.11.1
var Bignum, a, b, c, d, i, j, k, len, len1, ref, ref1, reversera;

reversera = function(arr) {
  return arr.slice().reverse();
};

Bignum = (function() {
  function Bignum(s) {
    var ch;
    this.list = (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = s.length; j < len; j++) {
        ch = s[j];
        results.push(parseInt(ch));
      }
      return results;
    })();
    this.list.reverse();
  }

  Bignum.prototype.add = function(other) {
    var carry, d, d1, j, len, pos, ref, res;
    if (this.list.length < other.list.length) {
      return other.add(this);
    }
    carry = 0;
    res = new Bignum("");
    ref = this.list;
    for (pos = j = 0, len = ref.length; j < len; pos = ++j) {
      d1 = ref[pos];
      d = d1 + (other.list[pos] || 0) + carry;
      res.list.push(d % 10);
      carry = Math.floor(d / 10);
    }
    if (carry) {
      res.list.push(1);
    }
    return res;
  };

  Bignum.prototype.mul = function(other) {
    var d, digit, i, j, k, len, len1, ref, ref1, res;
    res = new Bignum("");
    ref = other.list.slice().reverse();
    for (d = j = 0, len = ref.length; j < len; d = ++j) {
      digit = ref[d];
      ref1 = range(digit);
      for (k = 0, len1 = ref1.length; k < len1; k++) {
        i = ref1[k];
        res = res.add(this);
      }
      if (d < other.list.length - 1) {
        res.list.unshift(0);
      }
    }
    return res;
  };

  Bignum.prototype.to_s = function() {
    return this.list.slice().reverse().join("");
  };

  return Bignum;

})();

d = 12345678901234567890;

assert(d + 1, 12345678901234567000);

a = new Bignum("123");

b = new Bignum("8");

c = new Bignum("999");

d = new Bignum("456");

assert(a.to_s(), "123");

assert(a.add(b).to_s(), "131");

assert(b.add(a).to_s(), "131");

assert(a.add(c).to_s(), "1122");

assert(a.add(b).add(c).to_s(), "1130");

a = new Bignum("12345678901234567890");

b = new Bignum("1");

assert(a.add(b).to_s(), "12345678901234567891");

a = new Bignum("1");

ref = range(100);
for (j = 0, len = ref.length; j < len; j++) {
  i = ref[j];
  a = a.add(a);
}

assert(a.to_s(), "1267650600228229401496703205376");

a = new Bignum("123");

b = new Bignum("8");

c = new Bignum("999");

d = new Bignum("456");

assert(a.mul(b).to_s(), "984");

assert(a.mul(c).to_s(), "122877");

assert(a.mul(d).to_s(), "56088");

a = new Bignum("2");

ref1 = range(6);
for (k = 0, len1 = ref1.length; k < len1; k++) {
  i = ref1[k];
  a = a.mul(a);
}

assert(a.to_s(), "18446744073709551616");

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2tldGNoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBR0EsSUFBQTs7QUFBQSxTQUFBLEdBQVksU0FBQyxHQUFEO1NBQ1gsR0FBRyxDQUFDLEtBQUosQ0FBQSxDQUFXLENBQUMsT0FBWixDQUFBO0FBRFc7O0FBR047RUFDUyxnQkFBQyxDQUFEO0FBQ2IsUUFBQTtJQUFBLElBQUMsQ0FBQSxJQUFEOztBQUFTO1dBQUEsbUNBQUE7O3FCQUFBLFFBQUEsQ0FBUyxFQUFUO0FBQUE7OztJQUNULElBQUMsQ0FBQSxJQUFJLENBQUMsT0FBTixDQUFBO0VBRmE7O21CQUlkLEdBQUEsR0FBTSxTQUFDLEtBQUQ7QUFDTCxRQUFBO0lBQUEsSUFBRyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU4sR0FBZSxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQTdCO0FBQXlDLGFBQU8sS0FBSyxDQUFDLEdBQU4sQ0FBVSxJQUFWLEVBQWhEOztJQUNBLEtBQUEsR0FBUTtJQUNSLEdBQUEsR0FBVSxJQUFBLE1BQUEsQ0FBTyxFQUFQO0FBQ1Y7QUFBQSxTQUFBLGlEQUFBOztNQUNDLENBQUEsR0FBSSxFQUFBLEdBQUssQ0FBQyxLQUFLLENBQUMsSUFBSyxDQUFBLEdBQUEsQ0FBWCxJQUFtQixDQUFwQixDQUFMLEdBQThCO01BQ2xDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBVCxDQUFjLENBQUEsR0FBSSxFQUFsQjtNQUNBLEtBQUEsR0FBUSxJQUFJLENBQUMsS0FBTCxDQUFXLENBQUEsR0FBSSxFQUFmO0FBSFQ7SUFJQSxJQUFHLEtBQUg7TUFBYyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQVQsQ0FBYyxDQUFkLEVBQWQ7O1dBQ0E7RUFUSzs7bUJBV04sR0FBQSxHQUFNLFNBQUMsS0FBRDtBQUNMLFFBQUE7SUFBQSxHQUFBLEdBQVUsSUFBQSxNQUFBLENBQU8sRUFBUDtBQUNWO0FBQUEsU0FBQSw2Q0FBQTs7QUFD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YXRzLlxyXG4jIGNsb25hIGTDpHJmw7ZyIG1lZCBzbGljZSgpIGkgdCBleCB0b19zXHJcblxyXG5yZXZlcnNlcmEgPSAoYXJyKSAtPlxyXG5cdGFyci5zbGljZSgpLnJldmVyc2UoKSBcclxuXHJcbmNsYXNzIEJpZ251bVxyXG5cdGNvbnN0cnVjdG9yIDogKHMpIC0+XHJcblx0XHRAbGlzdCA9IChwYXJzZUludChjaCkgZm9yIGNoIGluIHMpXHJcblx0XHRAbGlzdC5yZXZlcnNlKClcclxuXHJcblx0YWRkIDogKG90aGVyKSAtPlxyXG5cdFx0aWYgQGxpc3QubGVuZ3RoIDwgb3RoZXIubGlzdC5sZW5ndGggdGhlbiByZXR1cm4gb3RoZXIuYWRkIEAgXHJcblx0XHRjYXJyeSA9IDBcclxuXHRcdHJlcyA9IG5ldyBCaWdudW0gXCJcIlxyXG5cdFx0Zm9yIGQxLCBwb3MgaW4gQGxpc3RcclxuXHRcdFx0ZCA9IGQxICsgKG90aGVyLmxpc3RbcG9zXSB8fCAwKSArIGNhcnJ5XHJcblx0XHRcdHJlcy5saXN0LnB1c2ggZCAlIDEwXHJcblx0XHRcdGNhcnJ5ID0gTWF0aC5mbG9vciBkIC8gMTBcclxuXHRcdGlmIGNhcnJ5IHRoZW4gcmVzLmxpc3QucHVzaCAxXHJcblx0XHRyZXNcclxuXHJcblx0bXVsIDogKG90aGVyKSAtPlxyXG5cdFx0cmVzID0gbmV3IEJpZ251bSBcIlwiXHJcblx0XHRmb3IgZGlnaXQsZCBpbiBvdGhlci5saXN0LnNsaWNlKCkucmV2ZXJzZSgpXHJcblx0XHRcdGZvciBpIGluIHJhbmdlIGRpZ2l0XHJcblx0XHRcdFx0cmVzID0gcmVzLmFkZCBAXHJcblx0XHRcdGlmIGQgPCBvdGhlci5saXN0Lmxlbmd0aC0xIHRoZW4gcmVzLmxpc3QudW5zaGlmdCAwXHJcblx0XHRyZXNcclxuXHRcclxuXHR0b19zIDogKCkgLT4gQGxpc3Quc2xpY2UoKS5yZXZlcnNlKCkuam9pbihcIlwiKVxyXG5cclxuIyBjbGFzcyBjb25zdHJ1Y3RvciBuZXcgcGFyc2VJbnQgcmV2ZXJzZSBsZW5ndGggcHVzaCBmbG9vciBzbGljZSB1bnNoaWZ0IGpvaW4gZm9yIGlmXHJcblxyXG5kID0gMTIzNDU2Nzg5MDEyMzQ1Njc4OTBcclxuYXNzZXJ0IGQrMSwgMTIzNDU2Nzg5MDEyMzQ1NjcwMDBcclxuXHJcbmEgPSBuZXcgQmlnbnVtIFwiMTIzXCJcclxuYiA9IG5ldyBCaWdudW0gXCI4XCJcclxuYyA9IG5ldyBCaWdudW0gXCI5OTlcIlxyXG5kID0gbmV3IEJpZ251bSBcIjQ1NlwiXHJcblxyXG5hc3NlcnQgYS50b19zKCksIFwiMTIzXCJcclxuYXNzZXJ0IGEuYWRkKGIpLnRvX3MoKSwgXCIxMzFcIlxyXG5hc3NlcnQgYi5hZGQoYSkudG9fcygpLCBcIjEzMVwiXHJcbmFzc2VydCBhLmFkZChjKS50b19zKCksIFwiMTEyMlwiXHJcbmFzc2VydCBhLmFkZChiKS5hZGQoYykudG9fcygpLCBcIjExMzBcIlxyXG5cclxuYSA9IG5ldyBCaWdudW0gXCIxMjM0NTY3ODkwMTIzNDU2Nzg5MFwiXHJcbmIgPSBuZXcgQmlnbnVtIFwiMVwiXHJcbmFzc2VydCBhLmFkZChiKS50b19zKCksXCIxMjM0NTY3ODkwMTIzNDU2Nzg5MVwiIFxyXG5cclxuYSA9IG5ldyBCaWdudW0gXCIxXCJcclxuZm9yIGkgaW4gcmFuZ2UgMTAwXHJcblx0YSA9IGEuYWRkIGFcclxuYXNzZXJ0IGEudG9fcygpLCBcIjEyNjc2NTA2MDAyMjgyMjk0MDE0OTY3MDMyMDUzNzZcIlxyXG5cclxuYSA9IG5ldyBCaWdudW0gXCIxMjNcIlxyXG5iID0gbmV3IEJpZ251bSBcIjhcIlxyXG5jID0gbmV3IEJpZ251bSBcIjk5OVwiXHJcbmQgPSBuZXcgQmlnbnVtIFwiNDU2XCJcclxuXHJcbmFzc2VydCBhLm11bChiKS50b19zKCksIFwiOTg0XCJcclxuYXNzZXJ0IGEubXVsKGMpLnRvX3MoKSwgXCIxMjI4NzdcIlxyXG5hc3NlcnQgYS5tdWwoZCkudG9fcygpLCBcIjU2MDg4XCJcclxuXHJcbmEgPSBuZXcgQmlnbnVtIFwiMlwiXHJcbmZvciBpIGluIHJhbmdlIDZcclxuXHRhID0gYS5tdWwgYVxyXG5hc3NlcnQgYS50b19zKCksIFwiMTg0NDY3NDQwNzM3MDk1NTE2MTZcIiJdfQ==
//# sourceURL=C:\Lab\2017\004-Bignum\sketch.coffee