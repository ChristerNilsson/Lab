// Generated by CoffeeScript 1.12.7
var State, button, checkbox, div, h3, input, li, render, setup, state, strong, table, td, todo, todos, tr;

render = function(node) {
  var _props, attr, child, key;
  if (Array.isArray(node)) {
    return ((function() {
      var i, len, results;
      results = [];
      for (i = 0, len = node.length; i < len; i++) {
        child = node[i];
        results.push(render(child));
      }
      return results;
    })()).join('');
  }
  if (typeof node !== 'object') {
    return node;
  }
  _props = ((function() {
    var ref, results;
    ref = node.props;
    results = [];
    for (key in ref) {
      attr = ref[key];
      results.push(' ' + key + '="' + attr + '"');
    }
    return results;
  })()).join('');
  return "<" + node.tag + _props + ">" + (render(node.children)) + "</" + node.tag + ">\n";
};

button = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'button'
  };
};

div = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'div'
  };
};

strong = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'strong'
  };
};

li = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'li'
  };
};

h3 = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'h3'
  };
};

input = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'input'
  };
};

table = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'table'
  };
};

tr = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'tr'
  };
};

td = function(p, c) {
  if (c == null) {
    c = [];
  }
  return {
    props: p,
    children: c,
    tag: 'td'
  };
};

checkbox = function(p, c) {
  if (c == null) {
    c = [];
  }
  return input(_.extend(p, {
    type: 'checkbox'
  }, p.value ? {
    checked: true
  } : {}), c);
};

todos = function(props, children) {
  var item, lst;
  if (children == null) {
    children = [];
  }
  return [
    h3({}, "Todo List (" + children.length + ")"), lst = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = children.length; i < len; i++) {
        item = children[i];
        if (state.ok(item)) {
          results.push(todo(item));
        }
      }
      return results;
    })(), h3({}, lst.length)
  ];
};

todo = function(props, children) {
  if (children == null) {
    children = [];
  }
  return div({}, [
    checkbox({
      onchange: "state.toggle(" + props.id + ")",
      value: props.completed
    }), strong({}, props.title + " (" + props.userId + ")")
  ]);
};

State = (function() {
  function State(todos1) {
    this.todos = todos1;
    this.a = false;
    this.b = true;
    this.c = 0;
  }

  State.prototype.init = function() {
    var start, struktur;
    start = millis();
    struktur = [
      checkbox({
        onchange: "state.filter(!state.a,state.b,state.c)",
        value: this.a
      }, 'completed'), checkbox({
        onchange: "state.filter(state.a,!state.b,state.c)",
        value: this.b
      }, 'not completed'), button({
        onclick: "state.filter(state.a,state.b,state.c+1)"
      }, this.c), todos({}, this.todos)
    ];
    this.update('body', render(struktur));
    return print(millis() - start);
  };

  State.prototype.filter = function(a, b, c) {
    this.a = a;
    this.b = b;
    this.c = c % 11;
    return this.init();
  };

  State.prototype.ok = function(item) {
    var villkor1, villkor2;
    villkor1 = this.a && item.completed || this.b && !item.completed;
    villkor2 = this.c === 0 || this.c === item.userId;
    return villkor1 && villkor2;
  };

  State.prototype.toggle = function(id) {
    var i, item, len, ref;
    ref = this.todos;
    for (i = 0, len = ref.length; i < len; i++) {
      item = ref[i];
      if (item.id === id) {
        item.completed = !item.completed;
      }
    }
    return this.init();
  };

  State.prototype.fix = function(hash) {
    var key, results, value;
    results = [];
    for (key in hash) {
      value = hash[key];
      results.push(this.update(key, value));
    }
    return results;
  };

  State.prototype.update = function(name, value) {
    var obj;
    this[name] = value;
    obj = document.getElementById(name);
    if (obj) {
      return obj.innerHTML = value;
    }
  };

  return State;

})();

state = null;

setup = function() {
  state = new State(data);
  return state.init();
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\144-Todos\coffee\sketch.coffee