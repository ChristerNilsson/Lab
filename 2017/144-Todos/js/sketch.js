// Generated by CoffeeScript 2.0.3
// render = (node) ->
// 	if Array.isArray node then return (render child for child in node).join ''
// 	if typeof node != 'object' then return node
// 	_props = (' ' + key + '="' + attr + '"' for key,attr of node.props).join ''
// 	"<#{node.tag}#{_props}>#{render node.children}</#{node.tag}>\n"
var State, a, button, checkbox, code, div, fix, form, h1, h3, header, img, input, label, li, option, p, render, sel, setup, state, strong, table, td, todo, todos, tr;

render = function(node) {
  var _props, attr, child, key;
  if (Array.isArray(node)) {
    return ((function() {
      var i, len, results;
      results = [];
      for (i = 0, len = node.length; i < len; i++) {
        child = node[i];
        results.push(render(child));
      }
      return results;
    })()).join('');
  }
  if (typeof node !== 'object') {
    return node;
  }
  _props = ((function() {
    var ref, results;
    ref = node.props;
    results = [];
    for (key in ref) {
      attr = ref[key];
      results.push(' ' + key + '="' + attr + '"');
    }
    return results;
  })()).join('');
  return `<${node.tag}${_props}>${render(node.children)}</${node.tag}>\n`;
};

fix = function(tag, ...options) {
  var props;
  if (typeof options[0] === 'object') {
    props = options.shift();
  } else {
    props = {};
  }
  return {
    tag: tag,
    props: props,
    children: options.length === 0 ? [] : options
  };
};

a = function() {
  return fix('a', ...arguments);
};

button = function() {
  return fix('button', ...arguments);
};

code = function() {
  return fix('code', ...arguments);
};

div = function() {
  return fix('div', ...arguments);
};

form = function() {
  return fix('form', ...arguments);
};

header = function() {
  return fix('header', ...arguments);
};

h1 = function() {
  return fix('h1', ...arguments);
};

h3 = function() {
  return fix('h3', ...arguments);
};

img = function() {
  return fix('img', ...arguments);
};

input = function() {
  return fix('input', ...arguments);
};

label = function() {
  return fix('label', ...arguments);
};

li = function() {
  return fix('li', ...arguments);
};

option = function() {
  return fix('option', ...arguments);
};

p = function() {
  return fix('p', ...arguments);
};

sel = function() {
  return fix('select', ...arguments);
};

strong = function() {
  return fix('strong', ...arguments);
};

table = function() {
  return fix('table', ...arguments);
};

tr = function() {
  return fix('tr', ...arguments);
};

td = function() {
  return fix('td', ...arguments);
};

checkbox = function(p, ...options) {
  return input(_.extend(p, {
    type: 'checkbox'
  }, p.value ? {
    checked: true
  } : {}), ...options);
};

// checkbox är svår att avläsa. toggla och håll reda på tillståndet själv.

//##############################
todos = function(props, children = []) {
  var item, lst;
  return [
    h3(`Todo List (${children.length})`),
    lst = (function() {
      var i,
    len,
    results;
      results = [];
      for (i = 0, len = children.length; i < len; i++) {
        item = children[i];
        if (state.ok(item)) {
          results.push(todo(item));
        }
      }
      return results;
    })(),
    h3(lst.length)
  ];
};

todo = function(props, children = []) {
  return div({}, checkbox({
    onchange: `state.toggle(${props.id})`,
    value: props.completed
  }), strong(`${props.title} (${props.userId})`));
};

State = class State {
  constructor(todos1) {
    this.todos = todos1;
    this.a = false; // completed
    this.b = true; // not completed
    this.c = 0; // userId
  }

  init() {
    var start, struktur;
    start = millis();
    struktur = [
      checkbox({
        onchange: "state.filter(!state.a,state.b,state.c)",
        value: this.a
      },
      'completed'),
      checkbox({
        onchange: "state.filter(state.a,!state.b,state.c)",
        value: this.b
      },
      'not completed'),
      button({
        onclick: "state.filter(state.a,state.b,state.c+1)"
      },
      this.c),
      todos({},
      this.todos)
    ];
    //print struktur
    this.update('body', render(struktur));
    return print(millis() - start);
  }

  filter(a, b, c) {
    this.a = a;
    this.b = b;
    this.c = c % 11;
    return this.init();
  }

  ok(item) {
    var villkor1, villkor2;
    villkor1 = this.a && item.completed || this.b && !item.completed;
    villkor2 = this.c === 0 || this.c === item.userId;
    return villkor1 && villkor2;
  }

  toggle(id) {
    var i, item, len, ref;
    ref = this.todos;
    for (i = 0, len = ref.length; i < len; i++) {
      item = ref[i];
      if (item.id === id) {
        item.completed = !item.completed;
      }
    }
    return this.init();
  }

  fix(hash) {
    var key, results, value;
    results = [];
    for (key in hash) {
      value = hash[key];
      results.push(this.update(key, value));
    }
    return results;
  }

  update(name, value) {
    var obj;
    //print name,value 
    this[name] = value;
    obj = document.getElementById(name);
    if (obj) {
      return obj.innerHTML = value;
    }
  }

};

state = null;

setup = function() {
  state = new State(data);
  return state.init();
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\144-Todos\coffee\sketch.coffee