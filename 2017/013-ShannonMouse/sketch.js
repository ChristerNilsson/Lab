// Generated by CoffeeScript 1.11.1
var Mouse, N, dirs, horWalls, mouse, setup, verWalls, wall;

verWalls = [0, 2 + 8, 2 + 4 + 8, 1, 0];

horWalls = [2, 1 + 8, 1 + 2 + 8, 4 + 8, 1 + 8];

N = 5;

mouse = null;

dirs = [[-1, 0], [0, 1], [1, 0], [0, -1]];

wall = function(x1, y1, x2, y2) {
  if (y1 === y2) {
    return (verWalls[y1] & [1, 2, 4, 8][_.min([x1, x2])]) !== 0;
  } else {
    return (horWalls[x1] & [1, 2, 4, 8][_.min([y1, y2])]) !== 0;
  }
};

assert(Math.pow(2, 3), 8);

assert(_.min([3, 4]), 3);

assert(wall(0, 0, 1, 0), false);

assert(wall(0, 1, 1, 1), false);

assert(wall(1, 1, 2, 1), true);

assert(wall(0, 0, 0, 1), false);

assert(wall(0, 1, 0, 2), true);

setup = function() {
  createCanvas(windowWidth, windowHeight);
  mouse = new Mouse(4, 24);
  mouse.solve();
  print("ready");
  mouse.pos = 4;
  return mouse.solve();
};

Mouse = (function() {
  function Mouse(pos, stopp) {
    this.pos = pos;
    this.stopp = stopp;
    this.ai = [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9];
  }

  Mouse.prototype.free = function(d) {
    var dx, dy, ref, x, x1, y, y1;
    ref = dirs[d], dx = ref[0], dy = ref[1];
    x = this.pos % N;
    y = int(this.pos / N);
    x1 = x + dx;
    y1 = y + dy;
    if ((0 <= x1 && x1 < N) && (0 <= y1 && y1 < N)) {
      return !wall(x, y, x1, y1);
    }
    return false;
  };

  Mouse.prototype.move = function(d) {
    var dx, dy, ref, x, y;
    ref = dirs[d], dx = ref[0], dy = ref[1];
    x = this.pos % N;
    y = int(this.pos / N);
    x += dx;
    y += dy;
    this.ai[this.pos] = d;
    return this.pos = x + N * y;
  };

  Mouse.prototype.solve = function() {
    var d, i, j, lastd, len, ref;
    d = 0;
    while (this.pos !== this.stopp) {
      print("POS", this.pos);
      lastd = d;
      if (this.ai[this.pos] !== 9) {
        d = this.ai[this.pos];
      } else {
        d = [1, 2, 3, 0][d];
      }
      ref = range(4);
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        if (this.free(d) && abs(lastd - d) !== 2) {
          lastd = d;
          this.move(d);
          break;
        }
        d = [3, 0, 1, 2][d];
      }
    }
    return print(this.ai);
  };

  return Mouse;

})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2tldGNoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBb0JBLElBQUE7O0FBQUEsUUFBQSxHQUFXLENBQUMsQ0FBRCxFQUFHLENBQUEsR0FBRSxDQUFMLEVBQU8sQ0FBQSxHQUFFLENBQUYsR0FBSSxDQUFYLEVBQWEsQ0FBYixFQUFlLENBQWY7O0FBQ1gsUUFBQSxHQUFXLENBQUMsQ0FBRCxFQUFHLENBQUEsR0FBRSxDQUFMLEVBQU8sQ0FBQSxHQUFFLENBQUYsR0FBSSxDQUFYLEVBQWEsQ0FBQSxHQUFFLENBQWYsRUFBaUIsQ0FBQSxHQUFFLENBQW5COztBQUVYLENBQUEsR0FBSTs7QUFFSixLQUFBLEdBQVE7O0FBRVIsSUFBQSxHQUFPLENBQUMsQ0FBQyxDQUFDLENBQUYsRUFBSSxDQUFKLENBQUQsRUFBUSxDQUFDLENBQUQsRUFBRyxDQUFILENBQVIsRUFBYyxDQUFDLENBQUQsRUFBRyxDQUFILENBQWQsRUFBb0IsQ0FBQyxDQUFELEVBQUcsQ0FBQyxDQUFKLENBQXBCOztBQUVQLElBQUEsR0FBTyxTQUFDLEVBQUQsRUFBSSxFQUFKLEVBQU8sRUFBUCxFQUFVLEVBQVY7RUFDTixJQUFHLEVBQUEsS0FBSSxFQUFQO1dBQ0MsQ0FBQyxRQUFTLENBQUEsRUFBQSxDQUFULEdBQWUsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLENBQVUsQ0FBQSxDQUFDLENBQUMsR0FBRixDQUFNLENBQUMsRUFBRCxFQUFJLEVBQUosQ0FBTixDQUFBLENBQTFCLENBQUEsS0FBOEMsRUFEL0M7R0FBQSxNQUFBO1dBR0MsQ0FBQyxRQUFTLENBQUEsRUFBQSxDQUFULEdBQWUsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLENBQVUsQ0FBQSxDQUFDLENBQUMsR0FBRixDQUFNLENBQUMsRUFBRCxFQUFJLEVBQUosQ0FBTixDQUFBLENBQTFCLENBQUEs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UFQ7O2tCQVNQLEtBQUEsR0FBUSxTQUFBO0FBQ1AsUUFBQTtJQUFBLENBQUEsR0FBSTtBQUNKLFdBQU0sSUFBQyxDQUFBLEdBQUQsS0FBUSxJQUFDLENBQUEsS0FBZjtNQUNDLEtBQUEsQ0FBTSxLQUFOLEVBQWEsSUFBQyxDQUFBLEdBQWQ7TUFDQSxLQUFBLEdBQVE7TUFDUixJQUFHLElBQUMsQ0FBQSxFQUFHLENBQUEsSUFBQyxDQUFBLEdBQUQsQ0FBSixLQUFhLENBQWhCO1FBQ0MsQ0FBQSxHQUFJLElBQUMsQ0FBQSxFQUFHLENBQUEsSUFBQyxDQUFBLEdBQUQsRUFEVDtPQUFBLE1BQUE7UUFHQyxDQUFBLEdBQUksQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLENBQVUsQ0FBQSxDQUFBLEVBSGY7O0FBSUE7QUFBQSxXQUFBLHFDQUFBOztRQUNDLElBQUcsSUFBQyxDQUFBLElBQUQsQ0FBTSxDQUFOLENBQUEsSUFBYSxHQUFBLENBQUksS0FBQSxHQUFNLENBQVYsQ0FBQSxLQUFnQixDQUFoQztVQUNDLEtBQUEsR0FBUTtVQUNSLElBQUMsQ0FBQSxJQUFELENBQU0sQ0FBTjtBQUNBLGdCQUhEOztRQUlBLENBQUEsR0FBSSxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxFQUFPLENBQVAsQ0FBVSxDQUFBLENBQUE7QUFMZjtJQVBEO1dBYUEsS0FBQSxDQUFNLElBQUMsQ0FBQSxFQUFQO0VBZk8iLCJzb3VyY2VzQ29udGVudCI6WyIjIGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9dlBLa1hpYlFYR0FcclxuXHJcbiMgIDAgIDEgIDIgIDMgIDRcclxuIyAgNSAgNiAgNyAgOCAgOVxyXG4jIDEwIDExIDEyIDEzIDE0IFxyXG4jIDE1IDE2IDE3IDE4IDE5XHJcbiMgMjAgMjEgMjIgMjMgMjRcclxuXHJcbiMgVmVyV2FsbHM6IDYtNyA4LTkgMTEtMTItMTMtMTQgMTUtMTYgXHJcbiMgSG9yV2FsbHM6IDUtMTAgMS02IDE2LTIxIDItNy0xMiAxNy0yMiAxMy0xOC0yMyA0LTkgMTktMjRcclxuXHJcbiMgRsO2cmZseXR0bmluZyBtw7ZqbGlnIGJhcmEgb20gdsOkZ2cgc2FrbmFzLlxyXG4jIE9tIGFpIGZpbm5zIGbDtnJzw7ZrZXIgbXVzZW4gZmx5dHRhIHNpZyBkaXJla3QgbW90IHRhcmdldC5cclxuIyBPbSBhaSBzYWtuYXMsIHZyaWQgOTAgZ3JhZGVyIG1vdHVycyBlZnRlciBmbHl0dC5cclxuIyDDhHIgZmx5dHQgb23DtmpsaWcsIHZyaWQgbWVkdXJzIG9jaCB1cHByZXBhLlxyXG4jIFNwYXJhIHZlcmtsaWdhIGZseXR0cmlrdG5pbmdhciBpIGFpLXZla3Rvcm4uXHJcblxyXG4jIEFsZ29yaXRtZW4gaW5uZWLDpHIgYXR0IGkgdmlzc2EgbMOkZ2VuIHJvdGVyYXIgbXVzZW4gdHbDpSB2YXJ2LlxyXG4jIGFpLXZla3Rvcm4ga3LDpHZlciB0cmUgYml0YXIgcGVyIHJ1dGEuIFNoYW5ub24gYW52w6RuZGUgZW5iYXJ0IHR2w6UuXHJcblxyXG52ZXJXYWxscyA9IFswLDIrOCwyKzQrOCwxLDBdICMgeXR0cmUgdsOkZ2dhciBsYWdyYXMgZWouXHJcbmhvcldhbGxzID0gWzIsMSs4LDErMis4LDQrOCwxKzhdXHJcblxyXG5OID0gNSBcclxuXHJcbm1vdXNlID0gbnVsbFxyXG5cclxuZGlycyA9IFtbLTEsMF0sWzAsMV0sWzEsMF0sWzAsLTFdXSAjIFdTRU5cclxuXHJcbndhbGwgPSAoeDEseTEseDIseTIpIC0+ICMgZmlubnMgZW4gdsOkZ2cgbWVsbGFuIGRlIHR2w6UgcnV0b3JuYT9cclxuXHRpZiB5MT09eTJcclxuXHRcdCh2ZXJXYWxsc1t5MV0gJiBbMSwyLDQsOF1bXy5taW4oW3gxLHgyXSldKSAhPSAwXHJcblx0ZWxzZVxyXG5cdFx0KGhvcldhbGxzW3gxXSAmIFsxLDIsNCw4XVtfLm1pbihbeTEseTJdKV0pICE9IDBcclxuYXNzZXJ0IDIgKiogMywgOFxyXG5hc3NlcnQgXy5taW4oWzMsNF0pLCAzXHJcbmFzc2VydCB3YWxsKDAsMCwxLDApLCBmYWxzZVxyXG5hc3NlcnQgd2FsbCgwLDEsMSwxKSwgZmFsc2VcclxuYXNzZXJ0IHdhbGwoMSwxLDIsMSksIHRydWVcclxuYXNzZXJ0IHdhbGwoMCwwLDAsMSksIGZhbHNlXHJcbmFzc2VydCB3YWxsKDAsMSwwLDIpLCB0cnVlXHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIHdpbmRvd1dpZHRoLHdpbmRvd0hlaWdodFxyXG5cdG1vdXNlID0gbmV3IE1vdXNlIDQsIDI0XHJcblx0bW91c2Uuc29sdmUoKVxyXG5cdHByaW50IFwicmVhZHlcIlxyXG5cdG1vdXNlLnBvcyA9IDRcclxuXHRtb3VzZS5zb2x2ZSgpXHJcblxyXG5jbGFzcyBNb3VzZSBcclxuXHRjb25zdHJ1Y3RvciA6IChAcG9zLEBzdG9wcCkgLT4gQGFpID0gWzksOSw5LDksOSw5LDksOSw5LDksOSw5LDksOSw5LDksOSw5LDksOSw5LDksOSw5LDldXHJcblxyXG5cdGZyZWUgOiAoZCkgLT5cclxuXHRcdFtkeCxkeV0gPSBkaXJzW2RdXHJcblx0XHR4ID0gQHBvcyAlIE5cclxuXHRcdHkgPSBpbnQgQHBvcyAvIE5cclxuXHRcdHgxID0geCArIGR4XHJcblx0XHR5MSA9IHkgKyBkeVxyXG5cdFx0aWYgMCA8PSB4MSA8IE4gYW5kIDAgPD0geTEgPCBOIFxyXG5cdFx0XHRyZXR1cm4gbm90IHdhbGwgeCx5LHgxLHkxIFxyXG5cdFx0ZmFsc2UgXHJcblxyXG5cdG1vdmUgOiAoZCkgLT5cclxuXHRcdFtkeCxkeV0gPSBkaXJzW2RdXHJcblx0XHR4ID0gQHBvcyAlIE5cclxuXHRcdHkgPSBpbnQgQHBvcyAvIE5cclxuXHRcdHggKz0gZHhcclxuXHRcdHkgKz0gZHlcclxuXHRcdEBhaVtAcG9zXSA9IGRcclxuXHRcdEBwb3MgPSB4ICsgTiAqIHlcclxuXHJcblx0c29sdmUgOiAtPlx0XHJcblx0XHRkID0gMFxyXG5cdFx0d2hpbGUgQHBvcyAhPSBAc3RvcHBcclxuXHRcdFx0cHJpbnQgXCJQT1NcIiwgQHBvc1xyXG5cdFx0XHRsYXN0ZCA9IGRcclxuXHRcdFx0aWYgQGFpW0Bwb3NdICE9IDlcclxuXHRcdFx0XHRkID0gQGFpW0Bwb3NdICMgdGhlIGRpcmVjdGlvbiB0byB0aGUgdGFyZ2V0IGlzIGF2YWlsYWJsZVxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0ZCA9IFsxLDIsMywwXVtkXSAjIHRyeSBsZWZ0IHJlbGF0aXZlIGN1cnJlbnQgZGlyZWN0aW9uIGZpcnN0XHJcblx0XHRcdGZvciBpIGluIHJhbmdlIDRcclxuXHRcdFx0XHRpZiBAZnJlZShkKSBhbmQgYWJzKGxhc3RkLWQpICE9IDIgXHJcblx0XHRcdFx0XHRsYXN0ZCA9IGQgXHJcblx0XHRcdFx0XHRAbW92ZSBkXHJcblx0XHRcdFx0XHRicmVha1xyXG5cdFx0XHRcdGQgPSBbMywwLDEsMl1bZF0gIyB0cnkgcmlnaHQgbmV4dFxyXG5cdFx0cHJpbnQgQGFpICJdfQ==
//# sourceURL=C:\Lab\2017\013-ShannonMouse\sketch.coffee