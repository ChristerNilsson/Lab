// Generated by CoffeeScript 1.12.7
var MOVES, currentCol, currentPiece, currentRow, genDir, mousePressed, oneGeneration, setup, xdraw;

MOVES = {
  King: [false, [[-1, 0], [1, 0], [0, -1], [0, 1], [-1, -1], [1, 1], [1, -1], [-1, 1]]],
  Queen: [true, [[-1, 0], [1, 0], [0, -1], [0, 1], [-1, -1], [1, 1], [1, -1], [-1, 1]]],
  Rook: [true, [[-1, 0], [1, 0], [0, -1], [0, 1]]],
  Bishop: [true, [[-1, -1], [1, 1], [1, -1], [-1, 1]]],
  Knight: [false, [[-1, -2], [-1, 2], [1, -2], [1, 2], [-2, -1], [-2, 1], [2, -1], [2, 1]]]
};

currentPiece = 'King';

currentCol = 4;

currentRow = 0;

setup = function() {
  createCanvas(200, 200);
  return xdraw();
};

genDir = function(multi, sq, dxdy) {
  var col, dx, dy, i, k, len, maximum, ref, row, squares;
  dx = dxdy[0], dy = dxdy[1];
  squares = [];
  maximum = multi ? 7 : 1;
  col = sq[0], row = sq[1];
  ref = range(maximum);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    col += dx;
    row += dy;
    if ((0 <= col && col <= 7) && (0 <= row && row <= 7)) {
      squares.push([col, row]);
    }
  }
  return squares;
};

oneGeneration = function(piece, sq) {
  var drag, dxdy, k, len, multi, squares;
  multi = piece[0], drag = piece[1];
  squares = [];
  for (k = 0, len = drag.length; k < len; k++) {
    dxdy = drag[k];
    squares = squares.concat(genDir(multi, sq, dxdy));
  }
  return squares;
};

xdraw = function() {
  var i, j, k, l, len, len1, len2, len3, m, n, piece, ref, ref1, ref2, ref3, ref4, results, sq, x, y;
  bg(1);
  textAlign(RIGHT, CENTER);
  textSize(13);
  ref = range(8);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    ref1 = range(8);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      j = ref1[l];
      fc((i + j + 1) % 2);
      rect(20 * i, 20 * j, 20, 20);
    }
  }
  fc(0);
  ref2 = _.keys(MOVES);
  for (i = m = 0, len2 = ref2.length; m < len2; i = ++m) {
    piece = ref2[i];
    text(piece, 200, 10 + 20 * i);
  }
  sq = [currentCol, currentRow];
  x = sq[0], y = sq[1];
  fc(0, 1, 0);
  circle(10 + 20 * x, 10 + 20 * y, 5);
  fc(1, 0, 0);
  ref3 = oneGeneration(MOVES[currentPiece], sq);
  results = [];
  for (n = 0, len3 = ref3.length; n < len3; n++) {
    ref4 = ref3[n], x = ref4[0], y = ref4[1];
    results.push(circle(10 + 20 * x, 10 + 20 * y, 5));
  }
  return results;
};

assert([[5, 5]], genDir(false, [4, 4], [1, 1]));

assert([[3, 3], [2, 2], [1, 1], [0, 0]], genDir(true, [4, 4], [-1, -1]));

assert([[3, 4], [5, 4], [4, 3], [4, 5], [3, 3], [5, 5], [5, 3], [3, 5]], oneGeneration(MOVES['King'], [4, 4]));

assert([[3, 4], [2, 4], [1, 4], [0, 4], [5, 4], [6, 4], [7, 4], [4, 3], [4, 2], [4, 1], [4, 0], [4, 5], [4, 6], [4, 7]], oneGeneration(MOVES['Rook'], [4, 4]));

mousePressed = function() {
  if (mouseX < 160) {
    currentCol = int(mouseX / 20);
    currentRow = int(mouseY / 20);
  } else {
    currentPiece = _.keys(MOVES)[int(mouseY / 20)];
  }
  return xdraw();
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\107-Chess\coffee\sketch.coffee