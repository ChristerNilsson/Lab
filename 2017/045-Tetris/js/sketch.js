// Generated by CoffeeScript 1.11.1
var arena, arenaSweep, collide, createPiece, draw, drawMatrix, fcc, i, keyPressed, merge, player, playerDrop, playerMove, playerReset, playerRotate, rotera, setup, updateScore;

arena = (function() {
  var j, len, ref, results;
  ref = range(20);
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    results.push(new Array(12).fill(0));
  }
  return results;
})();

player = {
  pos: {
    x: 0,
    y: 0
  },
  matrix: null,
  score: 0
};

setup = function() {
  createCanvas(20 * 12, 20 * 20);
  frameRate(3);
  playerReset();
  return updateScore();
};

fcc = function(n) {
  if (n === 0) {
    return fc(1);
  } else if (n === 1) {
    return fc(1, 0, 0);
  } else if (n === 2) {
    return fc(0, 1, 0);
  } else if (n === 3) {
    return fc(0, 0, 1);
  } else if (n === 4) {
    return fc(1, 1, 0);
  } else if (n === 5) {
    return fc(0, 1, 1);
  } else if (n === 6) {
    return fc(1, 0, 1);
  } else if (n === 7) {
    return fc(0.5);
  }
};

arenaSweep = function() {
  var j, len, rad, ref, results, row, y;
  ref = range(arena.length);
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    y = 19 - i;
    rad = arena[y];
    if (!_.contains(rad, 0)) {
      row = arena.splice(y, 1)[0].fill(0);
      arena.unshift(row);
      results.push(player.score += 10);
    } else {
      results.push(void 0);
    }
  }
  return results;
};

collide = function(arena, player) {
  var j, k, len, len1, m, o, ref, ref1, x, y;
  m = player.matrix;
  o = player.pos;
  ref = range(m.length);
  for (j = 0, len = ref.length; j < len; j++) {
    y = ref[j];
    ref1 = range(m[y].length);
    for (k = 0, len1 = ref1.length; k < len1; k++) {
      x = ref1[k];
      if (m[y][x] !== 0 && (arena[y + o.y] && arena[y + o.y][x + o.x]) !== 0) {
        return true;
      }
    }
  }
  return false;
};

createPiece = function(type) {
  if (type === 'I') {
    return [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]];
  } else if (type === 'L') {
    return [[0, 2, 0], [0, 2, 0], [0, 2, 2]];
  } else if (type === 'J') {
    return [[0, 3, 0], [0, 3, 0], [3, 3, 0]];
  } else if (type === 'O') {
    return [[4, 4], [4, 4]];
  } else if (type === 'Z') {
    return [[5, 5, 0], [0, 5, 5], [0, 0, 0]];
  } else if (type === 'S') {
    return [[0, 6, 6], [6, 6, 0], [0, 0, 0]];
  } else if (type === 'T') {
    return [[0, 7, 0], [7, 7, 7], [0, 0, 0]];
  }
};

drawMatrix = function(matrix, offset) {
  var j, len, results, row, value, x, y;
  results = [];
  for (y = j = 0, len = matrix.length; j < len; y = ++j) {
    row = matrix[y];
    results.push((function() {
      var k, len1, results1;
      results1 = [];
      for (x = k = 0, len1 = row.length; k < len1; x = ++k) {
        value = row[x];
        if (value !== 0) {
          fcc(value);
          results1.push(rect(20 * (x + offset.x), 20 * (y + offset.y), 20, 20));
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    })());
  }
  return results;
};

draw = function() {
  bg(0);
  drawMatrix(arena, {
    x: 0,
    y: 0
  });
  drawMatrix(player.matrix, player.pos);
  return arenaSweep();
};

merge = function(arena, player) {
  var j, len, ref, results, row, value, x, y;
  ref = player.matrix;
  results = [];
  for (y = j = 0, len = ref.length; j < len; y = ++j) {
    row = ref[y];
    results.push((function() {
      var k, len1, results1;
      results1 = [];
      for (x = k = 0, len1 = row.length; k < len1; x = ++k) {
        value = row[x];
        if (value !== 0) {
          results1.push(arena[y + player.pos.y][x + player.pos.x] = value);
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    })());
  }
  return results;
};

rotera = function(matrix, dir) {
  var j, k, l, len, len1, len2, ref, ref1, ref2, results, row, x, y;
  ref = range(matrix.length);
  for (j = 0, len = ref.length; j < len; j++) {
    y = ref[j];
    ref1 = range(y);
    for (k = 0, len1 = ref1.length; k < len1; k++) {
      x = ref1[k];
      ref2 = [matrix[y][x], matrix[x][y]], matrix[x][y] = ref2[0], matrix[y][x] = ref2[1];
    }
  }
  if (dir > 0) {
    results = [];
    for (l = 0, len2 = matrix.length; l < len2; l++) {
      row = matrix[l];
      results.push(row.reverse());
    }
    return results;
  } else {
    return matrix.reverse();
  }
};

playerDrop = function() {
  var dropCounter;
  player.pos.y++;
  if (collide(arena, player)) {
    player.pos.y--;
    merge(arena, player);
    playerReset();
    arenaSweep();
    updateScore();
  }
  return dropCounter = 0;
};

playerMove = function(offset) {
  player.pos.x += offset;
  if (collide(arena, player)) {
    return player.pos.x -= offset;
  }
};

playerReset = function() {
  var j, len, pieces, row;
  pieces = 'TJLOSZI';
  player.matrix = createPiece(pieces[pieces.length * Math.random() | 0]);
  player.pos.y = 0;
  player.pos.x = (arena[0].length / 2 | 0) - (player.matrix[0].length / 2 | 0);
  if (collide(arena, player)) {
    for (j = 0, len = arena.length; j < len; j++) {
      row = arena[j];
      row.fill(0);
    }
    player.score = 0;
    return updateScore();
  }
};

playerRotate = function(dir) {
  var offset, pos, ref;
  pos = player.pos.x;
  offset = 1;
  rotera(player.matrix, dir);
  while (collide(arena, player)) {
    player.pos.x += offset;
    offset = -(offset + ((ref = offset > 0) != null ? ref : {
      1: -1
    }));
    if (offset > player.matrix[0].length) {
      rotera(player.matrix, -dir);
      player.pos.x = pos;
      return;
    }
  }
};

updateScore = function() {};

keyPressed = function() {
  if (keyCode === 37) {
    return playerMove(-1);
  } else if (keyCode === 39) {
    return playerMove(1);
  } else if (keyCode === 40) {
    return playerDrop();
  } else if (keyCode === 81) {
    return playerRotate(-1);
  } else if (keyCode === 87) {
    return playerRotate(1);
  } else if (keyCode === 32) {
    return playerDrop();
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\045-Tetris\coffee\sketch.coffee