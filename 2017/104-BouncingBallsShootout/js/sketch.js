// Generated by CoffeeScript 1.12.7
var N, XOFF, ai, balls, bullets, collisions, counter, draw, fCount, keyPressed, level, newLevel, pressLeft, pressRight, queue, setup, shot, simulate;

XOFF = 11;

N = 60;

ai = false;

level = 1;

balls = [];

bullets = [];

queue = 0;

counter = 0;

shot = [0, 0];

fCount = 0;

setup = function() {
  createCanvas(800, 830);
  textSize(600);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  return newLevel(1);
};

collisions = function(balls, bullets, shot) {
  var b1, b2, ball, bullet, di, j, k, l, len, len1, len2, len3, m;
  for (j = 0, len = bullets.length; j < len; j++) {
    bullet = bullets[j];
    for (k = 0, len1 = balls.length; k < len1; k++) {
      ball = balls[k];
      di = ball.distance(bullet);
      if (di < ball.radius + bullet.radius) {
        shot[ball.g] += 1;
        bullet.age = 999999;
        ball.age = 999999;
        return shot;
      }
    }
  }
  for (l = 0, len2 = bullets.length; l < len2; l++) {
    b1 = bullets[l];
    for (m = 0, len3 = bullets.length; m < len3; m++) {
      b2 = bullets[m];
      if (b1 !== b2 && b1.distance(b2) < 5) {
        b1.age = 999999;
        b2.age = 999999;
      }
    }
  }
  return shot;
};

newLevel = function(lvl) {
  level = lvl;
  if (level === 0) {
    level = 1;
  }
  balls = [];
  bullets = [];
  queue = 2 * level;
  counter = 0;
  shot = [0, 0];
  return fCount = frameCount;
};

simulate = function(balls, bullets, shot) {
  var ball, bullet, i, j, k, l, len, len1, len2, r, ref, ret, y;
  pressRight(bullets);
  ref = range(N);
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    for (k = 0, len1 = balls.length; k < len1; k++) {
      ball = balls[k];
      ball.update();
    }
    for (l = 0, len2 = bullets.length; l < len2; l++) {
      bullet = bullets[l];
      bullet.update();
    }
    r = shot[0], y = shot[1];
    ret = collisions(balls, bullets, shot);
    if (ret[0] === r + 1) {
      return false;
    }
    if (ret[1] === y + 1) {
      return true;
    }
    bullets = (function() {
      var len3, m, results;
      results = [];
      for (m = 0, len3 = bullets.length; m < len3; m++) {
        bullet = bullets[m];
        if (bullet.age < 215) {
          results.push(bullet);
        }
      }
      return results;
    })();
    balls = (function() {
      var len3, m, results;
      results = [];
      for (m = 0, len3 = balls.length; m < len3; m++) {
        ball = balls[m];
        if (ball.age < 1000000) {
          results.push(ball);
        }
      }
      return results;
    })();
  }
  return false;
};

draw = function() {
  var ball, bullet, j, k, len, len1;
  counter += 1;
  if (counter % 50 === 1 && queue > 0) {
    queue -= 1;
    balls.push(new Ball(queue % 2, width / 8 * Math.pow(0.95, level)));
  }
  bg(0.5);
  for (j = 0, len = balls.length; j < len; j++) {
    ball = balls[j];
    ball.draw();
    ball.update();
  }
  for (k = 0, len1 = bullets.length; k < len1; k++) {
    bullet = bullets[k];
    bullet.draw();
    bullet.update();
  }
  fc(1, 1, 1, 0.05);
  text(level, width / 2, height / 2);
  collisions(balls, bullets, shot);
  bullets = (function() {
    var l, len2, results;
    results = [];
    for (l = 0, len2 = bullets.length; l < len2; l++) {
      bullet = bullets[l];
      if (bullet.age < 215) {
        results.push(bullet);
      }
    }
    return results;
  })();
  balls = (function() {
    var l, len2, results;
    results = [];
    for (l = 0, len2 = balls.length; l < len2; l++) {
      ball = balls[l];
      if (ball.age < 1000000) {
        results.push(ball);
      }
    }
    return results;
  })();
  rect(XOFF, height - 5, 5, 5);
  rect(width - XOFF, height - 5, 5, 5);
  if (shot[1] === level) {
    newLevel(level + 1);
  }
  if (shot[0] === level) {
    newLevel(level - 1);
  }
  if (ai && frameCount > fCount + N / 2 && simulate(_.map(balls, _.clone), _.map(bullets, _.clone), _.map(shot, _.clone))) {
    pressRight(bullets);
    fCount = frameCount;
    return print(level, shot);
  }
};

pressLeft = function(bullets) {
  return bullets.push(new Bullet(XOFF, height - 2, 1.2 * 3.02, -1.2 * 12.6, 0.1 * 1.4));
};

pressRight = function(bullets) {
  return bullets.push(new Bullet(width - XOFF, height - 2, -1.2 * 3.02, -1.2 * 12.6, 0.1 * 1.4));
};

keyPressed = function() {
  if (keyCode === LEFT_ARROW) {
    pressLeft(bullets);
  }
  if (keyCode === RIGHT_ARROW) {
    pressRight(bullets);
  }
  if (keyCode === 65) {
    return ai = !ai;
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\104-BouncingBallsShootout\coffee\sketch.coffee