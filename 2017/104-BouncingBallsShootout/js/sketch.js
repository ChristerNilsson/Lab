// Generated by CoffeeScript 1.11.1
var N, XOFF, ai, balls, bullets, collisions, counter, draw, fCount, keyPressed, level, newLevel, pressLeft, pressRight, queue, setup, shot, simulate;

XOFF = 11;

N = 50;

ai = false;

level = 1;

balls = [];

bullets = [];

queue = 0;

counter = 0;

shot = [0, 0];

fCount = 0;

setup = function() {
  createCanvas(800, 830);
  textSize(600);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  return newLevel(1);
};

collisions = function(balls, bullets, shot) {
  var b1, b2, ball, bullet, di, j, k, l, len, len1, len2, len3, m;
  for (j = 0, len = bullets.length; j < len; j++) {
    bullet = bullets[j];
    for (k = 0, len1 = balls.length; k < len1; k++) {
      ball = balls[k];
      di = ball.distance(bullet);
      if (di < ball.radius + bullet.radius) {
        shot[ball.g] += 1;
        bullet.age = 999999;
        ball.age = 999999;
        return shot;
      }
    }
  }
  for (l = 0, len2 = bullets.length; l < len2; l++) {
    b1 = bullets[l];
    for (m = 0, len3 = bullets.length; m < len3; m++) {
      b2 = bullets[m];
      if (b1 !== b2 && b1.distance(b2) < 5) {
        b1.age = 999999;
        b2.age = 999999;
      }
    }
  }
  return shot;
};

newLevel = function(lvl) {
  level = lvl;
  if (level === 0) {
    level = 1;
  }
  balls = [];
  bullets = [];
  queue = 2 * level;
  counter = 0;
  shot = [0, 0];
  return fCount = frameCount;
};

simulate = function(balls, bullets, shot) {
  var ball, bullet, i, j, k, l, len, len1, len2, r, ref, ret, y;
  pressRight(bullets);
  ref = range(N);
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    for (k = 0, len1 = balls.length; k < len1; k++) {
      ball = balls[k];
      ball.update();
    }
    for (l = 0, len2 = bullets.length; l < len2; l++) {
      bullet = bullets[l];
      bullet.update();
    }
    r = shot[0], y = shot[1];
    ret = collisions(balls, bullets, shot);
    if (ret[0] === r + 1) {
      return false;
    }
    if (ret[1] === y + 1) {
      return true;
    }
    bullets = (function() {
      var len3, m, results;
      results = [];
      for (m = 0, len3 = bullets.length; m < len3; m++) {
        bullet = bullets[m];
        if (bullet.age < 215) {
          results.push(bullet);
        }
      }
      return results;
    })();
    balls = (function() {
      var len3, m, results;
      results = [];
      for (m = 0, len3 = balls.length; m < len3; m++) {
        ball = balls[m];
        if (ball.age < 1000000) {
          results.push(ball);
        }
      }
      return results;
    })();
  }
  return false;
};

draw = function() {
  var ball, bullet, j, k, len, len1;
  counter += 1;
  if (counter % 50 === 1 && queue > 0) {
    queue -= 1;
    balls.push(new Ball(queue % 2, width / 8 * Math.pow(0.95, level)));
  }
  bg(0.5);
  for (j = 0, len = balls.length; j < len; j++) {
    ball = balls[j];
    ball.draw();
    ball.update();
  }
  for (k = 0, len1 = bullets.length; k < len1; k++) {
    bullet = bullets[k];
    bullet.draw();
    bullet.update();
  }
  fc(1, 1, 1, 0.05);
  text(level, width / 2, height / 2);
  collisions(balls, bullets, shot);
  bullets = (function() {
    var l, len2, results;
    results = [];
    for (l = 0, len2 = bullets.length; l < len2; l++) {
      bullet = bullets[l];
      if (bullet.age < 215) {
        results.push(bullet);
      }
    }
    return results;
  })();
  balls = (function() {
    var l, len2, results;
    results = [];
    for (l = 0, len2 = balls.length; l < len2; l++) {
      ball = balls[l];
      if (ball.age < 1000000) {
        results.push(ball);
      }
    }
    return results;
  })();
  rect(XOFF, height - 5, 5, 5);
  rect(width - XOFF, height - 5, 5, 5);
  if (shot[1] === level) {
    newLevel(level + 1);
  }
  if (shot[0] === level) {
    newLevel(level - 1);
  }
  if (ai && frameCount > fCount + N / 2 && simulate(_.map(balls, _.clone), _.map(bullets, _.clone), _.map(shot, _.clone))) {
    pressRight(bullets);
    fCount = frameCount;
    return print(level, shot);
  }
};

pressLeft = function(bullets) {
  return bullets.push(new Bullet(XOFF, height - 2, 1.2 * 3.02, -1.2 * 12.6, 0.1 * 1.4));
};

pressRight = function(bullets) {
  return bullets.push(new Bullet(width - XOFF, height - 2, -1.2 * 3.02, -1.2 * 12.6, 0.1 * 1.4));
};

keyPressed = function() {
  print(keyCode);
  if (keyCode === LEFT_ARROW) {
    pressLeft(bullets);
  }
  if (keyCode === RIGHT_ARROW) {
    pressRight(bullets);
  }
  if (keyCode === 65) {
    return ai = !ai;
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQUEsSUFBQSxHQUFPOztBQUNQLENBQUEsR0FBSTs7QUFFSixFQUFBLEdBQUs7O0FBQ0wsS0FBQSxHQUFROztBQUNSLEtBQUEsR0FBUTs7QUFDUixPQUFBLEdBQVU7O0FBQ1YsS0FBQSxHQUFROztBQUNSLE9BQUEsR0FBVTs7QUFDVixJQUFBLEdBQU8sQ0FBQyxDQUFELEVBQUcsQ0FBSDs7QUFDUCxNQUFBLEdBQVM7O0FBRVQsS0FBQSxHQUFRLFNBQUE7RUFDUCxZQUFBLENBQWEsR0FBYixFQUFpQixHQUFqQjtFQUNBLFFBQUEsQ0FBUyxHQUFUO0VBQ0EsU0FBQSxDQUFVLE1BQVYsRUFBaUIsTUFBakI7RUFDQSxRQUFBLENBQVMsTUFBVDtTQUNBLFFBQUEsQ0FBUyxDQUFUO0FBTE87O0FBT1IsVUFBQSxHQUFhLFNBQUMsS0FBRCxFQUFRLE9BQVIsRUFBaUIsSUFBakI7QUFDWixNQUFBO0FBQUEsT0FBQSx5Q0FBQTs7QUFDQyxTQUFBLHlDQUFBOztNQUNDLEVBQUEsR0FBSyxJQUFJLENBQUMsUUFBTCxDQUFjLE1BQWQ7TUFDTCxJQUFHLEVBQUEsR0FBSyxJQUFJLENBQUMsTUFBTCxHQUFjLE1BQU0sQ0FBQyxNQUE3QjtRQUNDLElBQUssQ0FBQSxJQUFJLENBQUMsQ0FBTCxDQUFMLElBQWdCO1FBQ2hCLE1BQU0sQ0FBQyxHQUFQLEdBQWE7UUFDYixJQUFJLENBQUMsR0FBTCxHQUFXO0FBQ1gsZUFBTyxLQUpSOztBQUZEO0FBREQ7QUFTQSxPQUFBLDJDQUFBOztBQUNDLFNBQUEsMkNBQUE7O01BQ0MsSUFBRyxFQUFBLEtBQU0sRUFBTixJQUFhLEVBQUUsQ0FBQyxRQUFILENBQVksRUFBWixDQUFBLEdBQWtCLENBQWxDO1FBQ0MsRUFBRSxDQUFDLEdBQUgsR0FBUztRQUNULEVBQUUsQ0FB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bnRlbnQiOlsiWE9GRiA9IDExXHJcbk4gPSA1MFxyXG5cclxuYWkgPSBmYWxzZVxyXG5sZXZlbCA9IDFcclxuYmFsbHMgPSBbXVxyXG5idWxsZXRzID0gW11cclxucXVldWUgPSAwXHJcbmNvdW50ZXIgPSAwXHJcbnNob3QgPSBbMCwwXVxyXG5mQ291bnQgPSAwXHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIDgwMCw4MzBcclxuXHR0ZXh0U2l6ZSA2MDBcclxuXHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5cdHJlY3RNb2RlIENFTlRFUlxyXG5cdG5ld0xldmVsIDFcclxuXHJcbmNvbGxpc2lvbnMgPSAoYmFsbHMsIGJ1bGxldHMsIHNob3QpIC0+XHJcblx0Zm9yIGJ1bGxldCBpbiBidWxsZXRzXHJcblx0XHRmb3IgYmFsbCBpbiBiYWxsc1xyXG5cdFx0XHRkaSA9IGJhbGwuZGlzdGFuY2UgYnVsbGV0XHJcblx0XHRcdGlmIGRpIDwgYmFsbC5yYWRpdXMgKyBidWxsZXQucmFkaXVzXHJcblx0XHRcdFx0c2hvdFtiYWxsLmddICs9IDFcclxuXHRcdFx0XHRidWxsZXQuYWdlID0gOTk5OTk5XHJcblx0XHRcdFx0YmFsbC5hZ2UgPSA5OTk5OTlcclxuXHRcdFx0XHRyZXR1cm4gc2hvdFxyXG5cclxuXHRmb3IgYjEgaW4gYnVsbGV0c1xyXG5cdFx0Zm9yIGIyIGluIGJ1bGxldHNcclxuXHRcdFx0aWYgYjEgIT0gYjIgYW5kIGIxLmRpc3RhbmNlKGIyKSA8IDVcclxuXHRcdFx0XHRiMS5hZ2UgPSA5OTk5OTlcclxuXHRcdFx0XHRiMi5hZ2UgPSA5OTk5OTlcclxuXHRyZXR1cm4gc2hvdFxyXG5cclxubmV3TGV2ZWwgPSAobHZsKSAtPlxyXG5cdGxldmVsID0gbHZsXHJcblx0aWYgbGV2ZWwgPT0gMCB0aGVuIGxldmVsID0gMVxyXG5cdGJhbGxzID0gW11cclxuXHRidWxsZXRzID0gW11cclxuXHRxdWV1ZSA9IDIgKiBsZXZlbFxyXG5cdGNvdW50ZXIgPSAwXHJcblx0c2hvdCA9IFswLDBdXHJcblx0ZkNvdW50ID0gZnJhbWVDb3VudFxyXG5cclxuc2ltdWxhdGUgPSAoYmFsbHMsIGJ1bGxldHMsIHNob3QpIC0+XHJcblxyXG5cdCNwcmVzc0xlZnQgYnVsbGV0c1xyXG5cdHByZXNzUmlnaHQgYnVsbGV0c1xyXG5cclxuXHRmb3IgaSBpbiByYW5nZSBOXHJcblxyXG5cdFx0YmFsbC51cGRhdGUoKSBmb3IgYmFsbCBpbiBiYWxsc1xyXG5cdFx0YnVsbGV0LnVwZGF0ZSgpIGZvciBidWxsZXQgaW4gYnVsbGV0c1xyXG5cclxuXHRcdFtyLHldID0gc2hvdFxyXG5cdFx0cmV0ID0gY29sbGlzaW9ucyBiYWxscywgYnVsbGV0cywgc2hvdFxyXG5cdFx0aWYgcmV0WzBdID09IHIrMSB0aGVuIHJldHVybiBmYWxzZSAjIHNranV0IGludGVcclxuXHRcdGlmIHJldFsxXSA9PSB5KzEgdGhlbiByZXR1cm4gdHJ1ZSAgIyBza2p1dFxyXG5cclxuXHRcdGJ1bGxldHMgPSAoYnVsbGV0IGZvciBidWxsZXQgaW4gYnVsbGV0cyB3aGVuIGJ1bGxldC5hZ2UgPCAyMTUpXHJcblx0XHRiYWxscyA9IChiYWxsIGZvciBiYWxsIGluIGJhbGxzIHdoZW4gYmFsbC5hZ2UgPCAxMDAwMDAwKVxyXG5cdHJldHVybiBmYWxzZVxyXG5cclxuZHJhdyA9IC0+XHJcblxyXG5cdGNvdW50ZXIgKz0gMVxyXG5cdGlmIGNvdW50ZXIgJSA1MCA9PSAxIGFuZCBxdWV1ZSA+IDBcclxuXHRcdHF1ZXVlIC09IDFcclxuXHRcdGJhbGxzLnB1c2ggbmV3IEJhbGwgcXVldWUlMiwgd2lkdGgvOCAqIDAuOTUqKmxldmVsXHJcblxyXG5cdGJnIDAuNVxyXG5cdGZvciBiYWxsIGluIGJhbGxzXHJcblx0XHRiYWxsLmRyYXcoKVxyXG5cdFx0YmFsbC51cGRhdGUoKVxyXG5cclxuXHRmb3IgYnVsbGV0IGluIGJ1bGxldHNcclxuXHRcdGJ1bGxldC5kcmF3KClcclxuXHRcdGJ1bGxldC51cGRhdGUoKVxyXG5cclxuXHRmYyAxLDEsMSwwLjA1XHJcblx0dGV4dCBsZXZlbCx3aWR0aC8yLGhlaWdodC8yXHJcblx0Y29sbGlzaW9ucyBiYWxscywgYnVsbGV0cywgc2hvdFxyXG5cclxuXHRidWxsZXRzID0gKGJ1bGxldCBmb3IgYnVsbGV0IGluIGJ1bGxldHMgd2hlbiBidWxsZXQuYWdlIDwgMjE1KVxyXG5cdGJhbGxzID0gKGJhbGwgZm9yIGJhbGwgaW4gYmFsbHMgd2hlbiBiYWxsLmFnZSA8IDEwMDAwMDApXHJcblxyXG5cdHJlY3QgWE9GRiwgICAgICBoZWlnaHQtNSw1LDVcclxuXHRyZWN0IHdpZHRoLVhPRkYsaGVpZ2h0LTUsNSw1XHJcblxyXG5cdGlmIHNob3RbMV0gPT0gbGV2ZWwgdGhlbiBuZXdMZXZlbCBsZXZlbCsxXHJcblx0aWYgc2hvdFswXSA9PSBsZXZlbCB0aGVuIG5ld0xldmVsIGxldmVsLTFcclxuXHJcblx0aWYgYWkgYW5kIGZyYW1lQ291bnQgPiBmQ291bnQrTi8yIGFuZCBzaW11bGF0ZSBfLm1hcChiYWxscywgXy5jbG9uZSksIF8ubWFwKGJ1bGxldHMsIF8uY2xvbmUpLCBfLm1hcChzaG90LCBfLmNsb25lKVxyXG5cdFx0I3ByZXNzTGVmdCBidWxsZXRzXHJcblx0XHRwcmVzc1JpZ2h0IGJ1bGxldHNcclxuXHRcdGZDb3VudCA9IGZyYW1lQ291bnRcclxuXHRcdHByaW50IGxldmVsLHNob3RcclxuXHJcbnByZXNzTGVmdCAgPSAoYnVsbGV0cykgLT4gYnVsbGV0cy5wdXNoIG5ldyBCdWxsZXQgWE9GRiwgICAgICBoZWlnaHQtMiwgIDEuMiozLjAyLCAtMS4yKjEyLjYsIDAuMSoxLjRcclxucHJlc3NSaWdodCA9IChidWxsZXRzKSAtPiBidWxsZXRzLnB1c2ggbmV3IEJ1bGxldCB3aWR0aC1YT0ZGLGhlaWdodC0yLCAtMS4yKjMuMDIsIC0xLjIqMTIuNiwgMC4xKjEuNFxyXG5cclxua2V5UHJlc3NlZCA9IC0+XHJcblx0cHJpbnQga2V5Q29kZVxyXG5cdGlmIGtleUNvZGUgPT0gTEVGVF9BUlJPVyAgdGhlbiBwcmVzc0xlZnQgYnVsbGV0c1xyXG5cdGlmIGtleUNvZGUgPT0gUklHSFRfQVJST1cgdGhlbiBwcmVzc1JpZ2h0IGJ1bGxldHNcclxuXHRpZiBrZXlDb2RlID09IDY1IHRoZW4gYWkgPSBub3QgYWlcclxuIl19
//# sourceURL=C:\Lab\2017\104-BouncingBallsShootout\coffee\sketch.coffee