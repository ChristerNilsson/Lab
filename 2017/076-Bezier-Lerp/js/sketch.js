// Generated by CoffeeScript 1.11.1
var bez, bezierOriginal, bezierP, bezierPointOrig, bezierPt, bpp, draw, ff, keyPressed, level, lst, setup, t;

t = 0;

level = 0;

lst = [];

setup = function() {
  var a, b, c, d, len, len1, ref, ref1, start;
  createCanvas(500, 500);
  lst = [[50, 450], [50, 50], [450, 50], [450, 450]];
  a = lst[0], b = lst[1], c = lst[2], d = lst[3];

  start = millis();
  for (var i = 0; i < 1000000; i+=1) {} // 3.885
  print(millis() - start);

  start = millis();
  for (var k = 0; k < 1; k+=0.000001) {} // 1.425
  print(millis() - start);

  start = millis();
  for (var l = 0; l < 1; l+=0.000001) {bezierPointOrig(5.0, 4.50, 5.0, 5.0, l);} // 57.9
  print(millis() - start);

  start = millis();
  for (var m = 0; m < 1; m+=0.000001) {bezierPt(5.0, 4.50, 5.0, 5.0, m);} // 27.13
  print(millis() - start);

  start = millis();
  for (var n = 0; n < 1000000; n++) {bezierPointOrig(5.0, 4.50, 5.0, 5.0, n/1000000);}
  print(millis() - start);

  start = millis();
  for (var o = 0; o < 1000000; o++) {bezierPt(5.0, 4.50, 5.0, 5.0, o/1000000);}
  print(millis() - start);

};

ff = function(a, b, t, lvl) {
  var ref, ref1, x, x1, x2, y, y1, y2;
  ref = lst[a], x1 = ref[0], y1 = ref[1];
  ref1 = lst[b], x2 = ref1[0], y2 = ref1[1];
  x = lerp(x1, x2, t);
  y = lerp(y1, y2, t);
  lst.push([x, y]);
  if (lvl <= level) {
    line(x1, y1, x2, y2);
    return circle(x, y, 5);
  }
};

bezierPointOrig = function(a, b, c, d, t) {
  var adjustedT;
  adjustedT = 1 - t;
  return Math.pow(adjustedT, 3) * a + 3 * (Math.pow(adjustedT, 2)) * t * b + 3 * adjustedT * Math.pow(t, 2) * c + Math.pow(t, 3) * d;
};

bezierPt = function(a, b, c, d, t) {
  var x;
  x = 1 - t;
  return x * x * x * a + 3 * x * x * t * b + 3 * x * t * t * c + t * t * t * d;
};

bezierP = function(a, b, c, d, e, f, g, h, t) {
  var x, y;
  x = bezierPt(a, b, c, d, t);
  y = bezierPt(e, f, g, h, t);
  return [x, y];
};

bezierOriginal = function(a, b, c, d, e, f, g, h, t) {
  var x, y;
  x = bezierPoint(a, b, c, d, t);
  y = bezierPoint(e, f, g, h, t);
  return [x, y];
};

bpp = function(lst, t) {
  var a, b, c, d, x, y;
  a = lst[0], b = lst[1], c = lst[2], d = lst[3];
  x = bp5(a[0], b[0], c[0], d[0], t);
  y = bp5(a[1], b[1], c[1], d[1], t);
  return [x, y];
};

bez = function(lst, t) {
  var a, b, x1, x2, y1, y2;
  if (lst.length === 2) {
    a = lst[0], b = lst[1];
    x1 = a[0], y1 = a[1];
    x2 = b[0], y2 = b[1];
    return [lerp(x1, x2, t), lerp(y1, y2, t)];
  } else {
    a = bez(lst.slice(0, -1), t);
    b = bez(lst.slice(1), t);
    return bez([a, b], t);
  }
};

draw = function() {
  var i, len, ref, x, y;
  bg(0.5);
  fc();
  lst = [[50, 450], [50, 50], [450, 50], [450, 450]];
  fc(1);
  for (i = 0, len = lst.length; i < len; i++) {
    ref = lst[i], x = ref[0], y = ref[1];
    circle(x, y, 10);
  }
  if (keyIsDown(LEFT_ARROW)) {
    t -= 0.005;
  }
  if (keyIsDown(RIGHT_ARROW)) {
    t += 0.005;
  }
  t = constrain(t, 0, 1);
  fc();
  bezier(50, 450, 50, 50, 450, 50, 450, 450);
  fc(1);
  ff(0, 1, t, 1);
  ff(1, 2, t, 1);
  ff(2, 3, t, 1);
  fc(1, 0, 0);
  ff(4, 5, t, 2);
  ff(5, 6, t, 2);
  fc(1, 1, 0);
  return ff(7, 8, t, 3);
};

keyPressed = function() {
  if (keyCode === DOWN_ARROW) {
    level -= 1;
  }
  if (keyCode === UP_ARROW) {
    level += 1;
  }
  return level = constrain(level, 0, 3);
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\076-Bezier-Lerp\coffee\sketch.coffee