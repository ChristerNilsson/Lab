// Generated by CoffeeScript 1.11.1
var Ball, Bodies, Boundary, Engine, Events, Nail, World, cols, draw, engine, newBall, rows, setup, things, world;

Boundary = (function() {
  function Boundary(x, y, w, h) {
    this.w = w;
    this.h = h;
    World.add(world, this.body = Bodies.rectangle(x, y, this.w, this.h, {
      isStatic: true
    }));
  }

  Boundary.prototype.show = function() {
    return rect(this.body.position.x, this.body.position.y, this.w, this.h);
  };

  return Boundary;

})();

Engine = Matter.Engine;

World = Matter.World;

Events = Matter.Events;

Bodies = Matter.Bodies;

engine = null;

world = null;

things = [];

cols = 22;

rows = 12;

setup = function() {
  var i, j, k, l, len, len1, len2, m, ref, ref1, ref2, results, spacing, x, y;
  createCanvas(1200, 800);
  rectMode(CENTER);
  engine = Engine.create();
  world = engine.world;
  world.gravity.y = 0.1;
  newBall();
  spacing = width / cols;
  ref = range(rows);
  for (k = 0, len = ref.length; k < len; k++) {
    j = ref[k];
    y = (j + 1) * spacing;
    ref1 = range(cols + 1);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      i = ref1[l];
      x = j % 2 === 1 ? (i + 0.5) * spacing : i * spacing;
      things.push(new Nail(x, y, 2));
    }
  }
  things.push(new Boundary(0, height / 2, 10, height));
  things.push(new Boundary(width / 2, height + 50, width, 100));
  things.push(new Boundary(width, height / 2, 10, height));
  ref2 = range(4 * cols + 1);
  results = [];
  for (m = 0, len2 = ref2.length; m < len2; m++) {
    i = ref2[m];
    results.push(things.push(new Boundary(i * spacing / 4, height - 100 / 2, 2, 100)));
  }
  return results;
};

newBall = function() {
  return things.push(new Ball(width / 2, 0, 5));
};

draw = function() {
  var k, len, results, thing;
  background(0);
  if (frameCount % 20 === 0) {
    newBall();
  }
  Engine.update(engine, 1000 / 30);
  results = [];
  for (k = 0, len = things.length; k < len; k++) {
    thing = things[k];
    results.push(thing.show());
  }
  return results;
};

Ball = (function() {
  function Ball(x, y, r) {
    this.r = r;
    World.add(world, this.body = Bodies.circle(x + random(-1, 1), y, this.r, {
      restitution: 0.5,
      friction: 0,
      density: 1
    }));
  }

  Ball.prototype.show = function() {
    return circle(this.body.position.x, this.body.position.y, this.r);
  };

  return Ball;

})();

Nail = (function() {
  function Nail(x, y, r) {
    this.r = r;
    World.add(world, this.body = Bodies.circle(x, y, this.r, {
      restitution: 1,
      friction: 0,
      isStatic: true
    }));
  }

  Nail.prototype.show = function() {
    return circle(this.body.position.x, this.body.position.y, this.r);
  };

  return Nail;

})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvamVjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInByb2plY3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQU07RUFDUyxrQkFBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVyxDQUFYO0lBQU8sSUFBQyxDQUFBLElBQUQ7SUFBSSxJQUFDLENBQUEsSUFBRDtJQUFPLEtBQUssQ0FBQyxHQUFOLENBQVUsS0FBVixFQUFpQixJQUFDLENBQUEsSUFBRCxHQUFRLE1BQU0sQ0FBQyxTQUFQLENBQWlCLENBQWpCLEVBQW9CLENBQXBCLEVBQXVCLElBQUMsQ0FBQSxDQUF4QixFQUEyQixJQUFDLENBQUEsQ0FBNUIsRUFBK0I7TUFBQyxRQUFBLEVBQVUsSUFBWDtLQUEvQixDQUF6QjtFQUFsQjs7cUJBQ2QsSUFBQSxHQUFPLFNBQUE7V0FBRyxJQUFBLENBQUssSUFBQyxDQUFBLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBcEIsRUFBdUIsSUFBQyxDQUFBLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBdEMsRUFBeUMsSUFBQyxDQUFBLENBQTFDLEVBQTZDLElBQUMsQ0FBQSxDQUE5QztFQUFIOzs7Ozs7QUFDUixNQUFBLEdBQVMsTUFBTSxDQUFDOztBQUNoQixLQUFBLEdBQVEsTUFBTSxDQUFDOztBQUNmLE1BQUEsR0FBUyxNQUFNLENBQUM7O0FBQ2hCLE1BQUEsR0FBUyxNQUFNLENBQUM7O0FBRWhCLE1BQUEsR0FBUzs7QUFDVCxLQUFBLEdBQVE7O0FBQ1IsTUFBQSxHQUFTOztBQUNULElBQUEsR0FBTzs7QUFDUCxJQUFBLEdBQU87O0FBRVAsS0FBQSxHQUFRLFNBQUE7QUFDUCxNQUFBO0VBQUEsWUFBQSxDQUFhLElBQWIsRUFBbUIsR0FBbkI7RUFDQSxRQUFBLENBQVMsTUFBVDtFQUNBLE1BQUEsR0FBUyxNQUFNLENBQUMsTUFBUCxDQUFBO0VBQ1QsS0FBQSxHQUFRLE1BQU0sQ0FBQztFQUNmLEtBQUssQ0FBQyxPQUFP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TUFBNEIsUUFBQSxFQUFVLElBQXRDO0tBQXhCLENBQXpCO0VBQWQ7O2lCQUNkLElBQUEsR0FBTyxTQUFBO1dBQUcsTUFBQSxDQUFPLElBQUMsQ0FBQSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQXRCLEVBQXlCLElBQUMsQ0FBQSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQXhDLEVBQTJDLElBQUksQ0FBQyxDQUFoRDtFQUFIIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQm91bmRhcnlcclxuXHRjb25zdHJ1Y3RvciA6ICh4LCB5LCBAdywgQGgpIC0+IFdvcmxkLmFkZCB3b3JsZCwgQGJvZHkgPSBCb2RpZXMucmVjdGFuZ2xlIHgsIHksIEB3LCBAaCwge2lzU3RhdGljOiB0cnVlfVxyXG5cdHNob3cgOiAtPiByZWN0IEBib2R5LnBvc2l0aW9uLngsIEBib2R5LnBvc2l0aW9uLnksIEB3LCBAaFxuRW5naW5lID0gTWF0dGVyLkVuZ2luZVxyXG5Xb3JsZCA9IE1hdHRlci5Xb3JsZFxyXG5FdmVudHMgPSBNYXR0ZXIuRXZlbnRzXHJcbkJvZGllcyA9IE1hdHRlci5Cb2RpZXNcclxuXHJcbmVuZ2luZSA9IG51bGxcclxud29ybGQgPSBudWxsXHJcbnRoaW5ncyA9IFtdXHJcbmNvbHMgPSAyMlxyXG5yb3dzID0gMTJcclxuXHJcbnNldHVwID0gLT5cclxuXHRjcmVhdGVDYW52YXMgMTIwMCwgODAwXHJcblx0cmVjdE1vZGUgQ0VOVEVSXHJcblx0ZW5naW5lID0gRW5naW5lLmNyZWF0ZSgpXHJcblx0d29ybGQgPSBlbmdpbmUud29ybGRcclxuXHR3b3JsZC5ncmF2aXR5LnkgPSAwLjFcclxuXHRuZXdCYWxsKClcclxuXHRzcGFjaW5nID0gd2lkdGggLyBjb2xzXHJcblx0Zm9yIGogaW4gcmFuZ2Ugcm93c1xyXG5cdFx0eSA9IChqKzEpICogc3BhY2luZ1xyXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgY29scysxXHJcblx0XHRcdHggPSBpZiBqICUgMiA9PSAxIHRoZW4gKGkrMC41KSAqIHNwYWNpbmcgZWxzZSBpICogc3BhY2luZ1xyXG5cdFx0XHR0aGluZ3MucHVzaCBuZXcgTmFpbCB4LCB5LCAyXHJcblxyXG5cdHRoaW5ncy5wdXNoIG5ldyBCb3VuZGFyeSAwLCAgICAgICAgIGhlaWdodC8yLCAgICAgICAxMCwgaGVpZ2h0XHJcblx0dGhpbmdzLnB1c2ggbmV3IEJvdW5kYXJ5IHdpZHRoIC8gMiwgaGVpZ2h0KzUwLCAgICAgIHdpZHRoLCAxMDBcclxuXHR0aGluZ3MucHVzaCBuZXcgQm91bmRhcnkgd2lkdGgsICAgICBoZWlnaHQvMiwgICAgICAgMTAsIGhlaWdodFxyXG5cclxuXHRmb3IgaSBpbiByYW5nZSA0KmNvbHMrMVxyXG5cdFx0dGhpbmdzLnB1c2ggbmV3IEJvdW5kYXJ5IGkgKiBzcGFjaW5nLzQsIGhlaWdodCAtIDEwMCAvIDIsIDIsIDEwMFxyXG5cclxubmV3QmFsbCA9IC0+IHRoaW5ncy5wdXNoIG5ldyBCYWxsIHdpZHRoLzIsIDAsIDVcclxuXHJcbmRyYXcgPSAtPlxyXG5cdGJhY2tncm91bmQgMFxyXG5cdGlmIGZyYW1lQ291bnQgJSAyMCA9PSAwIHRoZW4gbmV3QmFsbCgpXHJcblx0RW5naW5lLnVwZGF0ZSBlbmdpbmUsIDEwMDAgLyAzMFxyXG5cdHRoaW5nLnNob3coKSBmb3IgdGhpbmcgaW4gdGhpbmdzXG5jbGFzcyBCYWxsXHJcblx0Y29uc3RydWN0b3IgOiAoeCwgeSwgQHIpIC0+IFdvcmxkLmFkZCB3b3JsZCwgQGJvZHkgPSBCb2RpZXMuY2lyY2xlIHgrcmFuZG9tKC0xLDEpLCB5LCBAciwge3Jlc3RpdHV0aW9uOiAwLjUsIGZyaWN0aW9uOiAwLCBkZW5zaXR5OiAxfVxyXG5cdHNob3cgOiAtPiBjaXJjbGUgQGJvZHkucG9zaXRpb24ueCwgQGJvZHkucG9zaXRpb24ueSwgQHIgXG5jbGFzcyBOYWlsXHJcblx0Y29uc3RydWN0b3IgOiAoeCwgeSwgQHIpIC0+IFdvcmxkLmFkZCB3b3JsZCwgQGJvZHkgPSBCb2RpZXMuY2lyY2xlIHgsIHksIEByLCB7cmVzdGl0dXRpb246IDEsZnJpY3Rpb246IDAsaXNTdGF0aWM6IHRydWV9XHJcblx0c2hvdyA6IC0+IGNpcmNsZSBAYm9keS5wb3NpdGlvbi54LCBAYm9keS5wb3NpdGlvbi55LCB0aGlzLnIgIl19
//# sourceURL=C:\Lab\2017\028-Plinko\project.js