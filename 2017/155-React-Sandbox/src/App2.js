// Generated by CoffeeScript 2.0.3
  /*
  eslint-disable import/first
  */
var App, SwapButton, TakeButton,
  indexOf = [].indexOf;

import React, {
  Component
} from 'react';

TakeButton = class TakeButton extends Component {
  render() {
    var father, index, value;
    father = this.props.father;
    index = parseInt(this.props.index);
    value = father.state.board[index];
    return <button disabled={value === 0 || indexOf.call(father.state.enabled, index) < 0} onClick={() => {
        return father.handleClick(index);
      }}>{father.state.board[index]}</button>;
  }

};

SwapButton = class SwapButton extends Component {
  render() {
    var father;
    father = this.props.father;
    return <button disabled={father.state.enabled.length !== 1} onClick={() => {
        return father.handleSwap();
      }}>swap</button>;
  }

};

export default App = class App extends Component {
  constructor() {
    var i;
    super();
    this.state = {
      board: (function() {
        var j, results;
        results = [];
        for (i = j = 0; j <= 2; i = ++j) {
          results.push(Math.ceil(10 * Math.random()));
        }
        return results;
      })(),
      player: 0,
      enabled: [0, 1, 2],
      msg: ''
    };
  }

  handleClick(i) {
    var board;
    board = this.state.board;
    if (board[i] > 0) {
      board[i]--;
      return this.setState({
        board: board,
        enabled: [i],
        msg: board[0] + board[1] + board[2] === 0 ? `Player ${this.state.player} wins!` : ''
      });
    }
  }

  handleSwap() {
    var i;
    return this.setState({
      player: 1 - this.state.player,
      enabled: (function() {
        var j, results;
        results = [];
        for (i = j = 0; j <= 2; i = ++j) {
          if (this.state.board[i] > 0) {
            results.push(i);
          }
        }
        return results;
      }).call(this)
    });
  }

  render() {
    return <div>
			<TakeButton father={this} index='0' />
			<TakeButton father={this} index='1' />
			<TakeButton father={this} index='2' />
			<SwapButton father={this} />
			<p>Player: {this.state.player}</p>
			<p>{this.state.msg}</p>
		</div>;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwMi5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxBcHAyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztBQUFBLElBQUEsR0FBQSxFQUFBLFVBQUEsRUFBQSxVQUFBO0VBQUE7O0FBTUEsT0FBTyxLQUFQLEVBQUE7RUFBZ0IsU0FBaEI7Q0FBQSxNQUFBOztBQUVNLGFBQU4sTUFBQSxXQUFBLFFBQXlCLFVBQXpCO0VBQ0MsTUFBUyxDQUFBLENBQUE7QUFDUixRQUFBLE1BQUEsRUFBQSxLQUFBLEVBQUE7SUFBQSxNQUFBLEdBQVMsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNoQixLQUFBLEdBQVEsUUFBQSxDQUFTLElBQUMsQ0FBQSxLQUFLLENBQUMsS0FBaEI7SUFDUixLQUFBLEdBQVEsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFNLENBQUEsS0FBQTtXQUMxQixDQUFBLE9BQU8sUUFBQSxDQUFTLENBQUMsS0FBQSxLQUFPLENBQVAsSUFBWSxhQUFhLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBMUIsRUFBQSxLQUFBLEtBQWIsRUFBZ0QsT0FBQSxDQUFRLENBQUMsQ0FBQSxDQUFBLEdBQUE7ZUFBTSxNQUFNLENBQUMsV0FBUCxDQUFtQixLQUFuQjtNQUFOLENBQUQsQ0FBeEUsQ0FBd0csQ0FBRSxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQU0sQ0FBQSxLQUFBLENBQXJCLENBQXhHLEVBQUEsTUFBQTtFQUpPOztBQURWOztBQU9NLGFBQU4sTUFBQSxXQUFBLFFBQXlCLFVBQXpCO0VBQ0MsTUFBUyxDQUFBLENBQUE7QUFDUixRQUFBO0lBQUEsTUFBQSxHQUFTLElBQUMsQ0FBQSxLQUFLLENBQUM7V0FDZixDQUFBLE9BQU8sUUFBQSxDQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBckIsS0FBNkIsQ0FBOUIsRUFBaUMsT0FBQSxDQUFRLENBQUMsQ0FBQSxDQUFBLEdBQUE7ZUFBTSxNQUFNLENBQUMsVUFBUCxDQUFBO01BQU4sQ0FBRCxDQUF6RCxDQUFvRixJQUFwRixFQUFBLE1BQUE7RUFGTzs7QUFEVjs7QUFLQSxPQUFBLFFBQXFCLE1BQU4sTUFBQSxJQUFBLFFBQWtCLFVBQWxCO0VBQ2QsV0FBYyxDQUFBLENBQUE7QUFDYixRQUFBO1NBQUEsQ0FBQTtJQUNBLElBQUMsQ0FBQSxLQUFELEdBQ0M7TUFBQSxLQUFBOztBQUFPO1FBQUEsS0FBb0MsMEJBQXBDO3VCQUFBLElBQUksQ0FBQyxJQUFMLENBQVUsRUFBQSxHQUFHLElBQUksQ0FBQyxNQUFMLENBQUEsQ0FBYjtRQUFBLENBQUE7O1VBQVA7TUFDQSxNQUFBLEVBQU8sQ0FEUDtNQUVBLE9BQUEsRUFBVSxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxDQUZWO01BR0EsR0FBQSxFQUFJO0lBSEo7RUFIWTs7RUFRZCxXQUFjLENBQUMsQ0FBRCxDQUFBO0FBQ2IsUUFBQTtJQUFBLEtBQUEsR0FBUSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ2YsSUFBRyxLQUFNLENBQUEsQ0FBQSxDQUFOLEdBQVcsQ0FBZDtNQUNDLEtBQU0sQ0FBQSxDQUFBLENBQU47YUFDQSxJQUFDLENBQUEsUUFBRCxDQUNDO1FBQUEsS0FBQSxFQUFPLEtBQVA7UUFDQSxPQUFBLEVBQVMsQ0FBQyxDQUFELENBRFQ7UUFFQSxHQUFBLEVBQVEsS0FBTSxDQUFBLENBQUEsQ0FBTixHQUFTLEtBQU0sQ0FBQSxDQUFBLENBQWYsR0FBa0IsS0FBTSxDQUFBLENBQUEsQ0FBeEIsS0FBNEIsQ0FBL0IsR0FBc0MsQ0FBQSxPQUFBLENBQUEsQ0FBVSxJQUFDLENBQUEsS0FBSyxDQUFDLE1BQWpCLENBQXdCLE1BQXhCLENBQXRDLEdBQTJFO01BRmhGLENBREQsRUFGRDs7RUFGYTs7RUFTZCxVQUFhLENBQUEsQ0FBQTtBQUNaLFFBQUE7V0FBQSxJQUFDLENBQUEsUUFBRCxDQUNDO01BQUEsTUFBQSxFQUFTLENBQUEsR0FBSSxJQUFDLENBQUEsS0FBSyxDQUFDLE1BQXBCO01BQ0EsT0FBQTs7QUFBVztRQUFBLEtBQVcsMEJBQVg7Y0FBdUIsSUFBQyxDQUFBLEtBQUssQ0FBQyxLQUFNLENBQUEsQ0FBQSxDQUFiLEdBQWdCO3lCQUF2Qzs7UUFBQSxDQUFBOzs7SUFEWCxDQUREO0VBRFk7O0VBS2IsTUFBUyxDQUFBLENBQUE7V0FDUCxDQUFBLEdBQUE7R0FDQyxDQUFBLFdBQVcsTUFBQSxDQUFPLENBQUMsSUFBRCxFQUFJLEtBQUEsQ0FBTSxHQUE1QjtHQUNBLENBQUEsV0FBVyxNQUFBLENBQU8sQ0FBQyxJQUFELEVBQUksS0FBQSxDQUFNLEdBQTVCO0dBQ0EsQ0FBQSxXQUFXLE1BQUEsQ0FBTyxDQUFDLElBQUQsRUFBSSxLQUFBLENBQU0sR0FBNUI7R0FDQSxDQUFBLFdBQVcsTUFBQSxDQUFPLENBQUMsSUFBRCxDQUFsQjtHQUNBLENBQUEsQ0FBQSxDQUFDLFFBQUEsQ0FBVSxJQUFDLENBQUEsS0FBSyxDQUFDLE1BQWpCLENBQUQsRUFBQSxDQUFBO0dBQ0EsQ0FBQSxDQUFBLENBQUMsQ0FBRSxJQUFDLENBQUEsS0FBSyxDQUFDLEdBQVQsQ0FBRCxFQUFBLENBQUE7RUFORCxFQUFBLEdBQUE7RUFETzs7QUF2QksiLCJzb3VyY2VzQ29udGVudCI6WyIjIyNcclxuZXNsaW50LWRpc2FibGUgaW1wb3J0L2ZpcnN0XHJcbiMjI1xyXG5cclxuIyBOSU1cclxuXHJcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcclxuXHJcbmNsYXNzIFRha2VCdXR0b24gZXh0ZW5kcyBDb21wb25lbnQgXHJcblx0cmVuZGVyIDogLT5cclxuXHRcdGZhdGhlciA9IEBwcm9wcy5mYXRoZXJcclxuXHRcdGluZGV4ID0gcGFyc2VJbnQgQHByb3BzLmluZGV4XHJcblx0XHR2YWx1ZSA9IGZhdGhlci5zdGF0ZS5ib2FyZFtpbmRleF1cclxuXHRcdDxidXR0b24gZGlzYWJsZWQ9e3ZhbHVlPT0wIG9yIGluZGV4IG5vdCBpbiBmYXRoZXIuc3RhdGUuZW5hYmxlZH0gb25DbGljaz17KCkgPT4gZmF0aGVyLmhhbmRsZUNsaWNrIGluZGV4fT57ZmF0aGVyLnN0YXRlLmJvYXJkW2luZGV4XX08L2J1dHRvbj5cclxuXHJcbmNsYXNzIFN3YXBCdXR0b24gZXh0ZW5kcyBDb21wb25lbnQgXHJcblx0cmVuZGVyIDogLT5cclxuXHRcdGZhdGhlciA9IEBwcm9wcy5mYXRoZXJcclxuXHRcdDxidXR0b24gZGlzYWJsZWQ9e2ZhdGhlci5zdGF0ZS5lbmFibGVkLmxlbmd0aCE9MX0gb25DbGljaz17KCkgPT4gZmF0aGVyLmhhbmRsZVN3YXAoKX0+c3dhcDwvYnV0dG9uPlxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IFxyXG5cdGNvbnN0cnVjdG9yIDogLT5cclxuXHRcdHN1cGVyKClcclxuXHRcdEBzdGF0ZSA9IFxyXG5cdFx0XHRib2FyZDogTWF0aC5jZWlsIDEwKk1hdGgucmFuZG9tKCkgZm9yIGkgaW4gWzAuLjJdXHJcblx0XHRcdHBsYXllcjowXHJcblx0XHRcdGVuYWJsZWQgOiBbMCwxLDJdXHJcblx0XHRcdG1zZzonJ1xyXG5cclxuXHRoYW5kbGVDbGljayA6IChpKSAtPlxyXG5cdFx0Ym9hcmQgPSBAc3RhdGUuYm9hcmRcclxuXHRcdGlmIGJvYXJkW2ldID4gMCBcclxuXHRcdFx0Ym9hcmRbaV0tLVxyXG5cdFx0XHRAc2V0U3RhdGVcclxuXHRcdFx0XHRib2FyZDogYm9hcmQgXHJcblx0XHRcdFx0ZW5hYmxlZDogW2ldXHJcblx0XHRcdFx0bXNnOiBpZiBib2FyZFswXStib2FyZFsxXStib2FyZFsyXT09MCB0aGVuIFwiUGxheWVyICN7QHN0YXRlLnBsYXllcn0gd2lucyFcIiBlbHNlICcnXHJcbiBcclxuXHRoYW5kbGVTd2FwIDogLT5cclxuXHRcdEBzZXRTdGF0ZSBcclxuXHRcdFx0cGxheWVyIDogMSAtIEBzdGF0ZS5wbGF5ZXJcclxuXHRcdFx0ZW5hYmxlZCA6IChpIGZvciBpIGluIFswLi4yXSB3aGVuIEBzdGF0ZS5ib2FyZFtpXT4wKVxyXG5cdFxyXG5cdHJlbmRlciA6IC0+XHJcblx0XHQ8ZGl2PlxyXG5cdFx0XHQ8VGFrZUJ1dHRvbiBmYXRoZXI9e0B9IGluZGV4PScwJy8+XHJcblx0XHRcdDxUYWtlQnV0dG9uIGZhdGhlcj17QH0gaW5kZXg9JzEnLz5cclxuXHRcdFx0PFRha2VCdXR0b24gZmF0aGVyPXtAfSBpbmRleD0nMicvPlxyXG5cdFx0XHQ8U3dhcEJ1dHRvbiBmYXRoZXI9e0B9Lz5cclxuXHRcdFx0PHA+UGxheWVyOiB7QHN0YXRlLnBsYXllcn08L3A+XHJcblx0XHRcdDxwPntAc3RhdGUubXNnfTwvcD5cclxuXHRcdDwvZGl2PiJdfQ==
//# sourceURL=C:\Lab\2017\155-React-Sandbox\coffee\App2.coffee