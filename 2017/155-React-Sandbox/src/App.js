// Generated by CoffeeScript 2.0.3
/*
eslint-disable 
*/
var App, CheckBox, M, N, assert, dist, matrix, print, range, xor;

import React, {
  Component
} from 'react';

import _ from 'lodash';

M = 90;

N = 44;

assert = console.assert;

print = console.log;

range = _.range;

dist = function(dx, dy) {
  return dx * dx + dy * dy;
};

xor = function(a, b) {
  return (a ^ b) === 1;
};

assert(false === xor(false, false));

assert(true === xor(false, true));

assert(true === xor(true, false));

assert(false === xor(true, true));

matrix = function(m, n) {
  return Array.from({
    length: m
  }, () => {
    return new Array(n).fill(false);
  });
};

CheckBox = class CheckBox extends Component {
  render() {
    return <input type="checkbox" checked={this.props.value} />;
  }

};

export default App = class App extends Component {
  constructor() {
    var mat;
    super();
    mat = matrix(M, N);
    this.state = {
      mat: mat,
      x: M / 2,
      y: N / 2,
      vx: 1,
      vy: 2,
      r: 6
    };
  }

  next() {
    var i, j, k, l, len, len1, mat, r, ref, ref1, vx, vy, x, y;
    ({mat, x, y, r, vx, vy} = this.state);
    if (!((r <= x && x <= M - r))) {
      vx = -vx;
    }
    if (!((r <= y && y <= N - r))) {
      vy = -vy;
    }
    x += vx;
    y += vy;
    ref = range(M);
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      ref1 = range(N);
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        j = ref1[l];
        mat[i][j] = dist(x - i, y - j) < r * r;
      }
    }
    return this.setState({mat, x, y, vx, vy});
  }

  render() {
    return <div> {range(N).map((j) => {
      return <div> {range(M).map((i) => {
        return <CheckBox value={this.state.mat[i][j]} />;
      })}
			</div>;
    })}
			<button onClick={() => {
        return this.next();
      }}>click</button>
		</div>;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWU0XFxBcHAuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O0FBQUEsSUFBQSxHQUFBLEVBQUEsUUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsTUFBQSxFQUFBLElBQUEsRUFBQSxNQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQTs7QUFRQSxPQUFPLEtBQVAsRUFBQTtFQUFnQixTQUFoQjtDQUFBLE1BQUE7O0FBQ0EsT0FBTyxDQUFQLE1BQUE7O0FBRUEsQ0FBQSxHQUFJOztBQUNKLENBQUEsR0FBSTs7QUFFSixNQUFBLEdBQVMsT0FBTyxDQUFDOztBQUNqQixLQUFBLEdBQVEsT0FBTyxDQUFDOztBQUNoQixLQUFBLEdBQVEsQ0FBQyxDQUFDOztBQUVWLElBQUEsR0FBTyxRQUFBLENBQUMsRUFBRCxFQUFJLEVBQUosQ0FBQTtTQUFXLEVBQUEsR0FBRyxFQUFILEdBQU0sRUFBQSxHQUFHO0FBQXBCOztBQUNQLEdBQUEsR0FBTSxRQUFBLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQTtTQUFTLENBQUMsQ0FBQSxHQUFJLENBQUwsQ0FBQSxLQUFXO0FBQXBCOztBQUNOLE1BQUEsQ0FBTyxLQUFBLEtBQVMsR0FBQSxDQUFJLEtBQUosRUFBVSxLQUFWLENBQWhCOztBQUNBLE1BQUEsQ0FBTyxJQUFBLEtBQVMsR0FBQSxDQUFJLEtBQUosRUFBVSxJQUFWLENBQWhCOztBQUNBLE1BQUEsQ0FBTyxJQUFBLEtBQVMsR0FBQSxDQUFJLElBQUosRUFBUyxLQUFULENBQWhCOztBQUNBLE1BQUEsQ0FBTyxLQUFBLEtBQVMsR0FBQSxDQUFJLElBQUosRUFBUyxJQUFULENBQWhCOztBQUVBLE1BQUEsR0FBUyxRQUFBLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBQTtTQUFVLEtBQUssQ0FBQyxJQUFOLENBQVc7SUFBQyxNQUFBLEVBQVE7RUFBVCxDQUFYLEVBQXdCLENBQUEsQ0FBQSxHQUFBO1dBQU0sSUFBSSxLQUFKLENBQVUsQ0FBVixDQUFZLENBQUMsSUFBYixDQUFrQixLQUFsQjtFQUFOLENBQXhCO0FBQVY7O0FBRUgsV0FBTixNQUFBLFNBQUEsUUFBdUIsVUFBdkI7RUFDQyxNQUFTLENBQUEsQ0FBQTtXQUFJLENBQUEsTUFBTSxJQUFBLENBQU8sV0FBVyxPQUFBLENBQVUsQ0FBQyxJQUFDLENBQUEsS0FBSyxDQUFDLEtBQVIsQ0FBbEM7RUFBSjs7QUFEVjs7QUFHQSxPQUFBLFFBQXFCLE1BQU4sTUFBQSxJQUFBLFFBQWtCLFVBQWxCO0VBQ2QsV0FBYyxDQUFBLENBQUE7QUFDYixRQUFBO1NBQUEsQ0FBQTtJQUNBLEdBQUEsR0FBTSxNQUFBLENBQU8sQ0FBUCxFQUFTLENBQVQ7SUFDTixJQUFDLENBQUEsS0FBRCxHQUNDO01BQUEsR0FBQSxFQUFNLEdBQU47TUFDQSxDQUFBLEVBQUksQ0FBQSxHQUFFLENBRE47TUFFQSxDQUFBLEVBQUksQ0FBQSxHQUFFLENBRk47TUFHQSxFQUFBLEVBQUssQ0FITDtNQUlBLEVBQUEsRUFBSyxDQUpMO01BS0EsQ0FBQSxFQUFJO0lBTEo7RUFKWTs7RUFXZCxJQUFPLENBQUEsQ0FBQTtBQUNOLFFBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsQ0FBQSxFQUFBO0lBQUEsQ0FBQSxDQUFDLEdBQUQsRUFBSyxDQUFMLEVBQU8sQ0FBUCxFQUFTLENBQVQsRUFBVyxFQUFYLEVBQWMsRUFBZCxDQUFBLEdBQW9CLElBQUMsQ0FBQSxLQUFyQjtJQUNBLElBQUcsQ0FBSSxDQUFDLENBQUEsQ0FBQSxJQUFLLENBQUwsSUFBSyxDQUFMLElBQVUsQ0FBQSxHQUFFLENBQVosQ0FBRCxDQUFQO01BQTRCLEVBQUEsR0FBSyxDQUFDLEdBQWxDOztJQUNBLElBQUcsQ0FBSSxDQUFDLENBQUEsQ0FBQSxJQUFLLENBQUwsSUFBSyxDQUFMLElBQVUsQ0FBQSxHQUFFLENBQVosQ0FBRCxDQUFQO01BQTRCLEVBQUEsR0FBSyxDQUFDLEdBQWxDOztJQUNBLENBQUEsSUFBSztJQUNMLENBQUEsSUFBSztBQUNMO0lBQUEsS0FBQSxxQ0FBQTs7QUFDQztNQUFBLEtBQUEsd0NBQUE7O1FBQ0MsR0FBSSxDQUFBLENBQUEsQ0FBRyxDQUFBLENBQUEsQ0FBUCxHQUFZLElBQUEsQ0FBSyxDQUFBLEdBQUUsQ0FBUCxFQUFTLENBQUEsR0FBRSxDQUFYLENBQUEsR0FBZ0IsQ0FBQSxHQUFFO01BRC9CO0lBREQ7V0FHQSxJQUFDLENBQUEsUUFBRCxDQUFVLENBQUMsR0FBRCxFQUFLLENBQUwsRUFBTyxDQUFQLEVBQVMsRUFBVCxFQUFZLEVBQVosQ0FBVjtFQVRNOztFQVdQLE1BQVMsQ0FBQSxDQUFBO1dBQ1AsQ0FBQSxHQUFBLEVBQUcsQ0FBSSxLQUFBLENBQU0sQ0FBTixDQUFRLENBQUMsR0FBVCxDQUFhLENBQUMsQ0FBRCxDQUFBLEdBQUE7YUFDbkIsQ0FBQSxHQUFBLEVBQUcsQ0FBSSxLQUFBLENBQU0sQ0FBTixDQUFRLENBQUMsR0FBVCxDQUFhLENBQUMsQ0FBRCxDQUFBLEdBQUE7ZUFDbkIsQ0FBQSxTQUFTLEtBQUEsQ0FBTSxDQUFDLElBQUMsQ0FBQSxLQUFLLENBQUMsR0FBSSxDQUFBLENBQUEsQ0FBRyxDQUFBLENBQUEsQ0FBZixDQUFmO01BRG1CLENBQWIsQ0FBSjtHQUFILEVBQUEsR0FBQTtJQURtQixDQUFiLENBQUo7R0FNRixDQUFBLE9BQU8sT0FBQSxDQUFVLENBQUMsQ0FBQSxDQUFBLEdBQUE7ZUFBTSxJQUFDLENBQUEsSUFBRCxDQUFBO01BQU4sQ0FBRCxDQUFqQixDQUFnQyxLQUFoQyxFQUFBLE1BQUE7RUFORCxFQUFBLEdBQUE7RUFETzs7QUF2QksiLCJzb3VyY2VzQ29udGVudCI6WyIjIyNcclxuZXNsaW50LWRpc2FibGUgXHJcbiMjI1xyXG5cclxuIyBDaGVja0JveCBNYXRyaXhcclxuXHJcbiMgVHl2w6RyciByaXRhcyBhbGxhIGNoZWNrYm94YXIgb20uIERldCB2YXIgaW50ZSBtZW5pbmdlbi5cclxuXHJcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcclxuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xyXG5cclxuTSA9IDkwXHJcbk4gPSA0NFxyXG5cclxuYXNzZXJ0ID0gY29uc29sZS5hc3NlcnRcclxucHJpbnQgPSBjb25zb2xlLmxvZ1xyXG5yYW5nZSA9IF8ucmFuZ2VcclxuXHJcbmRpc3QgPSAoZHgsZHkpIC0+IGR4KmR4K2R5KmR5XHJcbnhvciA9IChhLGIpIC0+IChhIF4gYikgPT0gMVxyXG5hc3NlcnQgZmFsc2UgPT0geG9yIGZhbHNlLGZhbHNlXHJcbmFzc2VydCB0cnVlICA9PSB4b3IgZmFsc2UsdHJ1ZVxyXG5hc3NlcnQgdHJ1ZSAgPT0geG9yIHRydWUsZmFsc2VcclxuYXNzZXJ0IGZhbHNlID09IHhvciB0cnVlLHRydWVcclxuXHJcbm1hdHJpeCA9IChtLCBuKSAtPiBBcnJheS5mcm9tIHtsZW5ndGg6IG19LCAoKSA9PiBuZXcgQXJyYXkobikuZmlsbCBmYWxzZVxyXG5cclxuY2xhc3MgQ2hlY2tCb3ggZXh0ZW5kcyBDb21wb25lbnQgXHJcblx0cmVuZGVyIDogLT4gPGlucHV0IHR5cGUgPSBcImNoZWNrYm94XCIgY2hlY2tlZCA9IHtAcHJvcHMudmFsdWV9IC8+XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcHAgZXh0ZW5kcyBDb21wb25lbnQgXHJcblx0Y29uc3RydWN0b3IgOiAtPlxyXG5cdFx0c3VwZXIoKVxyXG5cdFx0bWF0ID0gbWF0cml4IE0sTlxyXG5cdFx0QHN0YXRlID0gXHJcblx0XHRcdG1hdCA6IG1hdFxyXG5cdFx0XHR4IDogTS8yXHJcblx0XHRcdHkgOiBOLzJcclxuXHRcdFx0dnggOiAxXHJcblx0XHRcdHZ5IDogMlxyXG5cdFx0XHRyIDogNlxyXG5cclxuXHRuZXh0IDogLT5cclxuXHRcdHttYXQseCx5LHIsdngsdnl9ID0gQHN0YXRlXHJcblx0XHRpZiBub3QgKHIgPD0geCA8PSBNLXIpIHRoZW4gdnggPSAtdnggXHJcblx0XHRpZiBub3QgKHIgPD0geSA8PSBOLXIpIHRoZW4gdnkgPSAtdnlcclxuXHRcdHggKz0gdnhcclxuXHRcdHkgKz0gdnlcclxuXHRcdGZvciBpIGluIHJhbmdlIE0gXHJcblx0XHRcdGZvciBqIGluIHJhbmdlIE4gXHJcblx0XHRcdFx0bWF0W2ldW2pdID0gZGlzdCh4LWkseS1qKSA8IHIqciBcclxuXHRcdEBzZXRTdGF0ZSB7bWF0LHgseSx2eCx2eX1cclxuXHJcblx0cmVuZGVyIDogLT5cclxuXHRcdDxkaXY+IHsgcmFuZ2UoTikubWFwIChqKSA9PiAgXHJcblx0XHRcdDxkaXY+IHsgcmFuZ2UoTSkubWFwIChpKSA9PiBcclxuXHRcdFx0XHQ8Q2hlY2tCb3ggdmFsdWU9e0BzdGF0ZS5tYXRbaV1bal19Lz5cclxuXHRcdFx0XHR9XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHR9XHJcblx0XHRcdDxidXR0b24gb25DbGljayA9IHsoKSA9PiBAbmV4dCgpfT5jbGljazwvYnV0dG9uPlxyXG5cdFx0PC9kaXY+XHJcbiJdfQ==
//# sourceURL=C:\Lab\2017\155-React-Sandbox\coffee4\App.coffee