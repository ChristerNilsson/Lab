// Generated by CoffeeScript 2.0.3
  /*
  eslint-disable 
  */
var App, SwapButton, TakeButton,
  indexOf = [].indexOf;

import React, {
  Component
} from 'react';

TakeButton = class TakeButton extends Component {
  render() {
    var father, index, value;
    father = this.props.father;
    index = parseInt(this.props.index);
    value = father.state.board[index];
    return <button disabled={value === 0 || indexOf.call(father.state.enabled, index) < 0} onClick={() => {
        return father.handleClick(index);
      }}>{father.state.board[index]}</button>;
  }

};

SwapButton = class SwapButton extends Component {
  render() {
    var father;
    father = this.props.father;
    return <button disabled={father.state.enabled.length !== 1} onClick={() => {
        return father.handleSwap();
      }}>swap</button>;
  }

};

export default App = class App extends Component {
  constructor() {
    var i;
    super();
    this.state = {
      board: (function() {
        var j, results;
        results = [];
        for (i = j = 0; j <= 2; i = ++j) {
          results.push(Math.ceil(10 * Math.random()));
        }
        return results;
      })(),
      player: 0,
      enabled: [0, 1, 2],
      msg: ''
    };
  }

  handleClick(i) {
    var board;
    board = this.state.board;
    if (board[i] > 0) {
      board[i]--;
      return this.setState({
        board: board,
        enabled: [i],
        msg: board[0] + board[1] + board[2] === 0 ? `Player ${this.state.player} wins!` : ''
      });
    }
  }

  handleSwap() {
    var i;
    return this.setState({
      player: 1 - this.state.player,
      enabled: (function() {
        var j, results;
        results = [];
        for (i = j = 0; j <= 2; i = ++j) {
          if (this.state.board[i] > 0) {
            results.push(i);
          }
        }
        return results;
      }).call(this)
    });
  }

  render() {
    return <div>
			<TakeButton father={this} index='0' />
			<TakeButton father={this} index='1' />
			<TakeButton father={this} index='2' />
			<SwapButton father={this} />
			<p>Player: {this.state.player}</p>
			<p>{this.state.msg}</p>
		</div>;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWUyXFxBcHAuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O0FBQUEsSUFBQSxHQUFBLEVBQUEsVUFBQSxFQUFBLFVBQUE7RUFBQTs7QUFNQSxPQUFPLEtBQVAsRUFBQTtFQUFnQixTQUFoQjtDQUFBLE1BQUE7O0FBRU0sYUFBTixNQUFBLFdBQUEsUUFBeUIsVUFBekI7RUFDQyxNQUFTLENBQUEsQ0FBQTtBQUNSLFFBQUEsTUFBQSxFQUFBLEtBQUEsRUFBQTtJQUFBLE1BQUEsR0FBUyxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ2hCLEtBQUEsR0FBUSxRQUFBLENBQVMsSUFBQyxDQUFBLEtBQUssQ0FBQyxLQUFoQjtJQUNSLEtBQUEsR0FBUSxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQU0sQ0FBQSxLQUFBO1dBQzFCLENBQUEsT0FBTyxRQUFBLENBQVMsQ0FBQyxLQUFBLEtBQU8sQ0FBUCxJQUFZLGFBQWEsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUExQixFQUFBLEtBQUEsS0FBYixFQUFnRCxPQUFBLENBQVEsQ0FBQyxDQUFBLENBQUEsR0FBQTtlQUFNLE1BQU0sQ0FBQyxXQUFQLENBQW1CLEtBQW5CO01BQU4sQ0FBRCxDQUF4RSxDQUF3RyxDQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBTSxDQUFBLEtBQUEsQ0FBckIsQ0FBeEcsRUFBQSxNQUFBO0VBSk87O0FBRFY7O0FBT00sYUFBTixNQUFBLFdBQUEsUUFBeUIsVUFBekI7RUFDQyxNQUFTLENBQUEsQ0FBQTtBQUNSLFFBQUE7SUFBQSxNQUFBLEdBQVMsSUFBQyxDQUFBLEtBQUssQ0FBQztXQUNmLENBQUEsT0FBTyxRQUFBLENBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFyQixLQUE2QixDQUE5QixFQUFpQyxPQUFBLENBQVEsQ0FBQyxDQUFBLENBQUEsR0FBQTtlQUFNLE1BQU0sQ0FBQyxVQUFQLENBQUE7TUFBTixDQUFELENBQXpELENBQW9GLElBQXBGLEVBQUEsTUFBQTtFQUZPOztBQURWOztBQUtBLE9BQUEsUUFBcUIsTUFBTixNQUFBLElBQUEsUUFBa0IsVUFBbEI7RUFDZCxXQUFjLENBQUEsQ0FBQTtBQUNiLFFBQUE7U0FBQSxDQUFBO0lBQ0EsSUFBQyxDQUFBLEtBQUQsR0FDQztNQUFBLEtBQUE7O0FBQU87UUFBQSxLQUFvQywwQkFBcEM7dUJBQUEsSUFBSSxDQUFDLElBQUwsQ0FBVSxFQUFBLEdBQUcsSUFBSSxDQUFDLE1BQUwsQ0FBQSxDQUFiO1FBQUEsQ0FBQTs7VUFBUDtNQUNBLE1BQUEsRUFBTyxDQURQO01BRUEsT0FBQSxFQUFVLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLENBRlY7TUFHQSxHQUFBLEVBQUk7SUFISjtFQUhZOztFQVFkLFdBQWMsQ0FBQyxDQUFELENBQUE7QUFDYixRQUFBO0lBQUEsS0FBQSxHQUFRLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDZixJQUFHLEtBQU0sQ0FBQSxDQUFBLENBQU4sR0FBVyxDQUFkO01BQ0MsS0FBTSxDQUFBLENBQUEsQ0FBTjthQUNBLElBQUMsQ0FBQSxRQUFELENBQ0M7UUFBQSxLQUFBLEVBQU8sS0FBUDtRQUNBLE9BQUEsRUFBUyxDQUFDLENBQUQsQ0FEVDtRQUVBLEdBQUEsRUFBUSxLQUFNLENBQUEsQ0FBQSxDQUFOLEdBQVMsS0FBTSxDQUFBLENBQUEsQ0FBZixHQUFrQixLQUFNLENBQUEsQ0FBQSxDQUF4QixLQUE0QixDQUEvQixHQUFzQyxDQUFBLE9BQUEsQ0FBQSxDQUFVLElBQUMsQ0FBQSxLQUFLLENBQUMsTUFBakIsQ0FBd0IsTUFBeEIsQ0FBdEMsR0FBMkU7TUFGaEYsQ0FERCxFQUZEOztFQUZhOztFQVNkLFVBQWEsQ0FBQSxDQUFBO0FBQ1osUUFBQTtXQUFBLElBQUMsQ0FBQSxRQUFELENBQ0M7TUFBQSxNQUFBLEVBQVMsQ0FBQSxHQUFJLElBQUMsQ0FBQSxLQUFLLENBQUMsTUFBcEI7TUFDQSxPQUFBOztBQUFXO1FBQUEsS0FBVywwQkFBWDtjQUF1QixJQUFDLENBQUEsS0FBSyxDQUFDLEtBQU0sQ0FBQSxDQUFBLENBQWIsR0FBZ0I7eUJBQXZDOztRQUFBLENBQUE7OztJQURYLENBREQ7RUFEWTs7RUFLYixNQUFTLENBQUEsQ0FBQTtXQUNQLENBQUEsR0FBQTtHQUNDLENBQUEsV0FBVyxNQUFBLENBQU8sQ0FBQyxJQUFELEVBQUksS0FBQSxDQUFNLEdBQTVCO0dBQ0EsQ0FBQSxXQUFXLE1BQUEsQ0FBTyxDQUFDLElBQUQsRUFBSSxLQUFBLENBQU0sR0FBNUI7R0FDQSxDQUFBLFdBQVcsTUFBQSxDQUFPLENBQUMsSUFBRCxFQUFJLEtBQUEsQ0FBTSxHQUE1QjtHQUNBLENBQUEsV0FBVyxNQUFBLENBQU8sQ0FBQyxJQUFELENBQWxCO0dBQ0EsQ0FBQSxDQUFBLENBQUMsUUFBQSxDQUFVLElBQUMsQ0FBQSxLQUFLLENBQUMsTUFBakIsQ0FBRCxFQUFBLENBQUE7R0FDQSxDQUFBLENBQUEsQ0FBQyxDQUFFLElBQUMsQ0FBQSxLQUFLLENBQUMsR0FBVCxDQUFELEVBQUEsQ0FBQTtFQU5ELEVBQUEsR0FBQTtFQURPOztBQXZCSyIsInNvdXJjZXNDb250ZW50IjpbIiMjI1xyXG5lc2xpbnQtZGlzYWJsZSBcclxuIyMjXHJcblxyXG4jIE5JTVxyXG5cclxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xyXG5cclxuY2xhc3MgVGFrZUJ1dHRvbiBleHRlbmRzIENvbXBvbmVudCBcclxuXHRyZW5kZXIgOiAtPlxyXG5cdFx0ZmF0aGVyID0gQHByb3BzLmZhdGhlclxyXG5cdFx0aW5kZXggPSBwYXJzZUludCBAcHJvcHMuaW5kZXhcclxuXHRcdHZhbHVlID0gZmF0aGVyLnN0YXRlLmJvYXJkW2luZGV4XVxyXG5cdFx0PGJ1dHRvbiBkaXNhYmxlZD17dmFsdWU9PTAgb3IgaW5kZXggbm90IGluIGZhdGhlci5zdGF0ZS5lbmFibGVkfSBvbkNsaWNrPXsoKSA9PiBmYXRoZXIuaGFuZGxlQ2xpY2sgaW5kZXh9PntmYXRoZXIuc3RhdGUuYm9hcmRbaW5kZXhdfTwvYnV0dG9uPlxyXG5cclxuY2xhc3MgU3dhcEJ1dHRvbiBleHRlbmRzIENvbXBvbmVudCBcclxuXHRyZW5kZXIgOiAtPlxyXG5cdFx0ZmF0aGVyID0gQHByb3BzLmZhdGhlclxyXG5cdFx0PGJ1dHRvbiBkaXNhYmxlZD17ZmF0aGVyLnN0YXRlLmVuYWJsZWQubGVuZ3RoIT0xfSBvbkNsaWNrPXsoKSA9PiBmYXRoZXIuaGFuZGxlU3dhcCgpfT5zd2FwPC9idXR0b24+XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcHAgZXh0ZW5kcyBDb21wb25lbnQgXHJcblx0Y29uc3RydWN0b3IgOiAtPlxyXG5cdFx0c3VwZXIoKVxyXG5cdFx0QHN0YXRlID0gXHJcblx0XHRcdGJvYXJkOiBNYXRoLmNlaWwgMTAqTWF0aC5yYW5kb20oKSBmb3IgaSBpbiBbMC4uMl1cclxuXHRcdFx0cGxheWVyOjBcclxuXHRcdFx0ZW5hYmxlZCA6IFswLDEsMl1cclxuXHRcdFx0bXNnOicnXHJcblxyXG5cdGhhbmRsZUNsaWNrIDogKGkpIC0+XHJcblx0XHRib2FyZCA9IEBzdGF0ZS5ib2FyZFxyXG5cdFx0aWYgYm9hcmRbaV0gPiAwIFxyXG5cdFx0XHRib2FyZFtpXS0tXHJcblx0XHRcdEBzZXRTdGF0ZVxyXG5cdFx0XHRcdGJvYXJkOiBib2FyZCBcclxuXHRcdFx0XHRlbmFibGVkOiBbaV1cclxuXHRcdFx0XHRtc2c6IGlmIGJvYXJkWzBdK2JvYXJkWzFdK2JvYXJkWzJdPT0wIHRoZW4gXCJQbGF5ZXIgI3tAc3RhdGUucGxheWVyfSB3aW5zIVwiIGVsc2UgJydcclxuIFxyXG5cdGhhbmRsZVN3YXAgOiAtPlxyXG5cdFx0QHNldFN0YXRlIFxyXG5cdFx0XHRwbGF5ZXIgOiAxIC0gQHN0YXRlLnBsYXllclxyXG5cdFx0XHRlbmFibGVkIDogKGkgZm9yIGkgaW4gWzAuLjJdIHdoZW4gQHN0YXRlLmJvYXJkW2ldPjApXHJcblx0XHJcblx0cmVuZGVyIDogLT5cclxuXHRcdDxkaXY+XHJcblx0XHRcdDxUYWtlQnV0dG9uIGZhdGhlcj17QH0gaW5kZXg9JzAnLz5cclxuXHRcdFx0PFRha2VCdXR0b24gZmF0aGVyPXtAfSBpbmRleD0nMScvPlxyXG5cdFx0XHQ8VGFrZUJ1dHRvbiBmYXRoZXI9e0B9IGluZGV4PScyJy8+XHJcblx0XHRcdDxTd2FwQnV0dG9uIGZhdGhlcj17QH0vPlxyXG5cdFx0XHQ8cD5QbGF5ZXI6IHtAc3RhdGUucGxheWVyfTwvcD5cclxuXHRcdFx0PHA+e0BzdGF0ZS5tc2d9PC9wPlxyXG5cdFx0PC9kaXY+Il19
//# sourceURL=C:\Lab\2017\155-React-Sandbox\coffee2\App.coffee