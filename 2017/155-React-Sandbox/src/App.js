// Generated by CoffeeScript 2.0.3
  /*
  eslint-disable 
  */
var App, TakeButton,
  indexOf = [].indexOf;

import React, {
  Component
} from 'react';

import _ from 'lodash';

TakeButton = class TakeButton extends Component {
  render() {
    var father, index;
    father = this.props.father;
    index = parseInt(this.props.index);
    return <button disabled={indexOf.call(father.state.enabled, index) < 0} onClick={() => {
        return father.handleClick(index);
      }}>{father.state.board[index]}</button>;
  }

};

export default App = class App extends Component {
  constructor() {
    var board, i;
    super();
    board = (function() {
      var j, results;
      results = [];
      for (i = j = 0; j <= 2; i = ++j) {
        results.push(Math.ceil(10 * Math.random()));
      }
      return results;
    })();
    this.state = {
      board,
      player: 0,
      enabled: [0, 1, 2],
      msg: ''
    };
  }

  handleClick(i) {
    var board, msg;
    board = this.state.board;
    if (board[i] > 0) {
      board[i]--;
      msg = _.isEqual(board, [0, 0, 0]) ? `Player ${this.state.player} wins!` : '';
      return this.setState({
        board,
        enabled: [i],
        msg
      });
    }
  }

  handleSwap() {
    var enabled, i;
    enabled = (function() {
      var j, results;
      results = [];
      for (i = j = 0; j <= 2; i = ++j) {
        if (this.state.board[i] > 0) {
          results.push(i);
        }
      }
      return results;
    }).call(this);
    return this.setState({
      player: 1 - this.state.player,
      enabled
    });
  }

  render() {
    return <div>
			<TakeButton index='0' father={this}></TakeButton>		
			<TakeButton index='1' father={this}></TakeButton>		
			<TakeButton index='2' father={this}></TakeButton>		
			<button disabled={this.state.enabled.length !== 1} onClick={() => {
        return this.handleSwap();
      }}>swap</button>
			<p>Player: {this.state.player}</p>
			<p>{this.state.msg}</p>
		</div>;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWUyXFxBcHAuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O0FBQUEsSUFBQSxHQUFBLEVBQUEsVUFBQTtFQUFBOztBQU1BLE9BQU8sS0FBUCxFQUFBO0VBQWdCLFNBQWhCO0NBQUEsTUFBQTs7QUFDQSxPQUFPLENBQVAsTUFBQTs7QUFFTSxhQUFOLE1BQUEsV0FBQSxRQUF5QixVQUF6QjtFQUNDLE1BQVMsQ0FBQSxDQUFBO0FBQ1IsUUFBQSxNQUFBLEVBQUE7SUFBQSxNQUFBLEdBQVMsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNoQixLQUFBLEdBQVEsUUFBQSxDQUFTLElBQUMsQ0FBQSxLQUFLLENBQUMsS0FBaEI7V0FDUCxDQUFBLE9BQU8sUUFBQSxDQUFTLENBQUMsYUFBYSxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQTFCLEVBQUEsS0FBQSxLQUFELEVBQW9DLE9BQUEsQ0FBUSxDQUFDLENBQUEsQ0FBQSxHQUFBO2VBQU0sTUFBTSxDQUFDLFdBQVAsQ0FBbUIsS0FBbkI7TUFBTixDQUFELENBQTVELENBQTRGLENBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFNLENBQUEsS0FBQSxDQUFyQixDQUE1RixFQUFBLE1BQUE7RUFITzs7QUFEVjs7QUFNQSxPQUFBLFFBQXFCLE1BQU4sTUFBQSxJQUFBLFFBQWtCLFVBQWxCO0VBQ2QsV0FBYyxDQUFBLENBQUE7QUFDYixRQUFBLEtBQUEsRUFBQTtTQUFBLENBQUE7SUFDQSxLQUFBOztBQUFTO01BQUEsS0FBb0MsMEJBQXBDO3FCQUFBLElBQUksQ0FBQyxJQUFMLENBQVUsRUFBQSxHQUFHLElBQUksQ0FBQyxNQUFMLENBQUEsQ0FBYjtNQUFBLENBQUE7OztJQUNULElBQUMsQ0FBQSxLQUFELEdBQVM7TUFBQyxLQUFEO01BQVEsTUFBQSxFQUFPLENBQWY7TUFBa0IsT0FBQSxFQUFVLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLENBQTVCO01BQXFDLEdBQUEsRUFBSTtJQUF6QztFQUhJOztFQUtkLFdBQWMsQ0FBQyxDQUFELENBQUE7QUFDYixRQUFBLEtBQUEsRUFBQTtJQUFBLEtBQUEsR0FBUSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ2YsSUFBRyxLQUFNLENBQUEsQ0FBQSxDQUFOLEdBQVcsQ0FBZDtNQUNDLEtBQU0sQ0FBQSxDQUFBLENBQU47TUFDQSxHQUFBLEdBQVMsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxLQUFWLEVBQWlCLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLENBQWpCLENBQUgsR0FBaUMsQ0FBQSxPQUFBLENBQUEsQ0FBVSxJQUFDLENBQUEsS0FBSyxDQUFDLE1BQWpCLENBQXdCLE1BQXhCLENBQWpDLEdBQXNFO2FBQzVFLElBQUMsQ0FBQSxRQUFELENBQVU7UUFBQyxLQUFEO1FBQVEsT0FBQSxFQUFRLENBQUMsQ0FBRCxDQUFoQjtRQUFxQjtNQUFyQixDQUFWLEVBSEQ7O0VBRmE7O0VBT2QsVUFBYSxDQUFBLENBQUE7QUFDWixRQUFBLE9BQUEsRUFBQTtJQUFBLE9BQUE7O0FBQVc7TUFBQSxLQUFXLDBCQUFYO1lBQXVCLElBQUMsQ0FBQSxLQUFLLENBQUMsS0FBTSxDQUFBLENBQUEsQ0FBYixHQUFnQjt1QkFBdkM7O01BQUEsQ0FBQTs7O1dBQ1gsSUFBQyxDQUFBLFFBQUQsQ0FBVTtNQUFDLE1BQUEsRUFBUyxDQUFBLEdBQUksSUFBQyxDQUFBLEtBQUssQ0FBQyxNQUFyQjtNQUE2QjtJQUE3QixDQUFWO0VBRlk7O0VBSWIsTUFBUyxDQUFBLENBQUE7V0FDUCxDQUFBLEdBQUE7R0FDQyxDQUFBLFdBQVcsS0FBQSxDQUFNLElBQUksTUFBQSxDQUFPLENBQUMsSUFBRCxDQUE1QixDQUFBLEVBQUEsVUFBQTtHQUNBLENBQUEsV0FBVyxLQUFBLENBQU0sSUFBSSxNQUFBLENBQU8sQ0FBQyxJQUFELENBQTVCLENBQUEsRUFBQSxVQUFBO0dBQ0EsQ0FBQSxXQUFXLEtBQUEsQ0FBTSxJQUFJLE1BQUEsQ0FBTyxDQUFDLElBQUQsQ0FBNUIsQ0FBQSxFQUFBLFVBQUE7R0FDQSxDQUFBLE9BQU8sUUFBQSxDQUFTLENBQUMsSUFBQyxDQUFBLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBZixLQUF1QixDQUF4QixFQUEyQixPQUFBLENBQVEsQ0FBQyxDQUFBLENBQUEsR0FBQTtlQUFNLElBQUMsQ0FBQSxVQUFELENBQUE7TUFBTixDQUFELENBQW5ELENBQXdFLElBQXhFLEVBQUEsTUFBQTtHQUNBLENBQUEsQ0FBQSxDQUFDLFFBQUEsQ0FBVSxJQUFDLENBQUEsS0FBSyxDQUFDLE1BQWpCLENBQUQsRUFBQSxDQUFBO0dBQ0EsQ0FBQSxDQUFBLENBQUMsQ0FBRSxJQUFDLENBQUEsS0FBSyxDQUFDLEdBQVQsQ0FBRCxFQUFBLENBQUE7RUFORCxFQUFBLEdBQUE7RUFETzs7QUFqQksiLCJzb3VyY2VzQ29udGVudCI6WyIjIyNcbmVzbGludC1kaXNhYmxlIFxuIyMjXG5cbiMgTklNXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCcgXG5cbmNsYXNzIFRha2VCdXR0b24gZXh0ZW5kcyBDb21wb25lbnQgXG5cdHJlbmRlciA6IC0+XG5cdFx0ZmF0aGVyID0gQHByb3BzLmZhdGhlclxuXHRcdGluZGV4ID0gcGFyc2VJbnQgQHByb3BzLmluZGV4XG5cdFx0PGJ1dHRvbiBkaXNhYmxlZD17aW5kZXggbm90IGluIGZhdGhlci5zdGF0ZS5lbmFibGVkfSBvbkNsaWNrPXsoKSA9PiBmYXRoZXIuaGFuZGxlQ2xpY2sgaW5kZXh9PntmYXRoZXIuc3RhdGUuYm9hcmRbaW5kZXhdfTwvYnV0dG9uPlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcHAgZXh0ZW5kcyBDb21wb25lbnQgXG5cdGNvbnN0cnVjdG9yIDogLT5cblx0XHRzdXBlcigpXG5cdFx0Ym9hcmQgPSAoTWF0aC5jZWlsIDEwKk1hdGgucmFuZG9tKCkgZm9yIGkgaW4gWzAuLjJdKVxuXHRcdEBzdGF0ZSA9IHtib2FyZCwgcGxheWVyOjAsIGVuYWJsZWQgOiBbMCwxLDJdLCBtc2c6Jyd9XG5cblx0aGFuZGxlQ2xpY2sgOiAoaSkgLT5cblx0XHRib2FyZCA9IEBzdGF0ZS5ib2FyZFxuXHRcdGlmIGJvYXJkW2ldID4gMCBcblx0XHRcdGJvYXJkW2ldLS1cblx0XHRcdG1zZyA9IGlmIF8uaXNFcXVhbCBib2FyZCwgWzAsMCwwXSB0aGVuIFwiUGxheWVyICN7QHN0YXRlLnBsYXllcn0gd2lucyFcIiBlbHNlICcnXG5cdFx0XHRAc2V0U3RhdGUge2JvYXJkLCBlbmFibGVkOltpXSwgbXNnfVxuIFxuXHRoYW5kbGVTd2FwIDogLT5cblx0XHRlbmFibGVkID0gKGkgZm9yIGkgaW4gWzAuLjJdIHdoZW4gQHN0YXRlLmJvYXJkW2ldPjApXG5cdFx0QHNldFN0YXRlIHtwbGF5ZXIgOiAxIC0gQHN0YXRlLnBsYXllciwgZW5hYmxlZH1cblx0XG5cdHJlbmRlciA6IC0+XG5cdFx0PGRpdj5cblx0XHRcdDxUYWtlQnV0dG9uIGluZGV4PScwJyBmYXRoZXI9e0B9PjwvVGFrZUJ1dHRvbj5cdFx0XG5cdFx0XHQ8VGFrZUJ1dHRvbiBpbmRleD0nMScgZmF0aGVyPXtAfT48L1Rha2VCdXR0b24+XHRcdFxuXHRcdFx0PFRha2VCdXR0b24gaW5kZXg9JzInIGZhdGhlcj17QH0+PC9UYWtlQnV0dG9uPlx0XHRcblx0XHRcdDxidXR0b24gZGlzYWJsZWQ9e0BzdGF0ZS5lbmFibGVkLmxlbmd0aCE9MX0gb25DbGljaz17KCkgPT4gQGhhbmRsZVN3YXAoKX0+c3dhcDwvYnV0dG9uPlxuXHRcdFx0PHA+UGxheWVyOiB7QHN0YXRlLnBsYXllcn08L3A+XG5cdFx0XHQ8cD57QHN0YXRlLm1zZ308L3A+XG5cdFx0PC9kaXY+Il19
//# sourceURL=C:\Lab\2017\155-React-Sandbox\coffee2\App.coffee