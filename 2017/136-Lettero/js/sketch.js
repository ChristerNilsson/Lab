// Generated by CoffeeScript 1.12.7
var angle, direction, draw, findWords, handleMousePressed, level, listCircular, mousePressed, newGame, possibleWords, radius1, radius2, reverseString, setup, size, solution, touchStarted, word, words,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

words = null;

word = '';

level = -1;

angle = 0;

direction = 1;

size = null;

radius1 = null;

radius2 = null;

possibleWords = [];

solution = "";

setup = function() {
  createCanvas(windowWidth, windowHeight);
  size = min(windowWidth, windowHeight);
  radius2 = size / 10;
  radius1 = size / 2 - radius2;
  words = ordlista.split(' ');
  textAlign(CENTER, CENTER);
  return newGame(1);
};

newGame = function(dLevel) {
  var extra;
  solution = possibleWords.join(' ');
  direction = dLevel;
  extra = int(level / 10);
  if (dLevel < 0 && extra !== 0) {
    dLevel *= extra;
  }
  level += dLevel;
  if (level < 0) {
    level = 0;
  }
  word = _.sample(words);
  possibleWords = findWords(word);
  if (0.5 < random()) {
    word = reverseString(word);
  }
  word = word.toUpperCase();
  angle = 360 * random();
  return false;
};

draw = function() {
  var ch, dAngle, i, j, len, n;
  bg(0.5);
  textSize(size / 12);
  text(solution, width / 2, height - size / 10);
  textSize(size / 4);
  if (direction === 1) {
    fc(0, 1, 0);
  } else {
    fc(1, 0, 0);
  }
  text(level, width / 2, height / 2);
  fc(0);
  translate(width / 2, height / 2);
  n = word.length;
  dAngle = 360 / n;
  rd(angle);
  textSize(size / 10);
  for (i = j = 0, len = word.length; j < len; i = ++j) {
    ch = word[i];
    push();
    translate(radius1, 0);
    rd(90);
    fc(1, 1, 0);
    circle(0, 0, radius2);
    fc(0);
    text(ch, 0, 0);
    pop();
    rd(dAngle);
  }
  return angle += 0.5;
};

handleMousePressed = function() {
  var ch, dword, i, j, len, n, rw, w, x, y;
  n = word.length;
  dword = (word + word).toLowerCase();
  for (i = j = 0, len = word.length; j < len; i = ++j) {
    ch = word[i];
    x = width / 2 + radius1 * cos(radians(angle + i / n * 360));
    y = height / 2 + radius1 * sin(radians(angle + i / n * 360));
    if (radius2 > dist(mouseX, mouseY, x, y)) {
      w = dword.slice(i, i + n);
      rw = reverseString(dword).slice(n - i - 1, n - i + n - 1);
      if (indexOf.call(possibleWords, w) >= 0 || indexOf.call(possibleWords, rw) >= 0) {
        return newGame(1);
      } else {
        return newGame(-1);
      }
    }
  }
  return false;
};

reverseString = function(str) {
  return str.split("").reverse().join("");
};

mousePressed = function() {
  return handleMousePressed();
};

touchStarted = function() {
  return handleMousePressed();
};

findWords = function(word) {
  var ch, dword, i, j, len, n, res, rw, w;
  n = word.length;
  dword = (word + word).toLowerCase();
  res = [];
  for (i = j = 0, len = word.length; j < len; i = ++j) {
    ch = word[i];
    w = dword.slice(i, i + n);
    rw = reverseString(dword).slice(n - i - 1, n - i + n - 1);
    if (indexOf.call(words, w) >= 0) {
      res.push(w);
    }
    if (indexOf.call(words, rw) >= 0) {
      res.push(rw);
    }
  }
  return _.uniq(res);
};

listCircular = function() {
  var antal, j, len, res;
  print(words.length);
  antal = 0;
  for (j = 0, len = words.length; j < len; j++) {
    word = words[j];
    res = findWords(word);
    if (res.length === 2) {
      print(res.join(' '));
      antal++;
    }
  }
  return print(antal);
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2017\136-Lettero\coffee\sketch.coffee