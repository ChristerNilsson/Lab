{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# ordlista: sorterad sträng \r\nwordList = null # sorterad array, alla ord\r\nwords = null # osorterad array med word.length <= maxWord\r\nindex = 0\r\nword = ''\r\nlevel = 0\r\nangle = 0\r\ndirection = 1\r\nsize = null\r\n\r\nradius1 = null # avstånd till gul cirkels mittpunkt\r\nradius2 = null # gul cirkels radie\r\nradius3 = null # avstånd till siffra\r\nradius4 = null # gräns mellan siffror och bokstäver\r\nradius5 = null # siffrans radie\r\n\r\npossibleWords = []\r\nsolution = \"\"\r\ndt = 0 \r\nmaxWord = 4 # 4..15\r\nlanguages = 'dan eng fra ger isl ita nor rus spa swe'.split ' '\r\nlanguage = 9\r\ncurrentLanguage = language\r\nreleased = true \r\nbuttons = []\r\n\r\nclass Button\r\n\tconstructor : (@txt,@r1,@degrees,@r2,@f) ->\r\n\t\t@x = @r1 * cos radians @degrees\r\n\t\t@y = @r1 * sin radians @degrees\r\n\r\n\tdraw : ->\r\n\t\tfc 0.45\r\n\t\tcircle @x,@y,@r2\r\n\t\tfc 0\r\n\t\ttext @txt,@x,@y\r\n\r\n\tmousePressed : (mx,my) -> if @r2 > dist(mx,my,width/2+@x,height/2+@y) then @f()\r\n\r\nfetchFromLocalStorage = ->\r\n\tlang = languages[language]\r\n\ts = localStorage[\"lettero-#{lang}\"]\r\n\tif s \r\n\t\tarr = s.split ' '\r\n\t\tmaxWord = parseInt arr[0]\r\n\t\tlevel = parseInt arr[1]\r\n\telse\r\n\t\tmaxWord = 4\r\n\t\tlevel = 0\r\n\r\nsaveToLocalStorage = -> \r\n\tlang = languages[language]\r\n\tlocalStorage[\"lettero-#{lang}\"] = \"#{maxWord} #{level}\"\r\n\r\nsetup = ->\r\n\r\n\tlanguage = languages.indexOf document.title.toLowerCase().split(' ')[1] \r\n\tcurrentLanguage = language\r\n\r\n\tfetchFromLocalStorage()\r\n\r\n\tcreateCanvas windowWidth,windowHeight\r\n\tsize = min width,height\r\n\tradius2 = size/12\r\n\tradius1 = 0.5*size-radius2 \r\n\tradius3 = 0.6*radius1\r\n\tradius4 = radius1 - radius2\r\n\tradius5 = 0.05*size\r\n\tradius6 = 0.59*size \r\n\r\n\twordList = ordlista.split ' '\r\n\twords = selectWords()\r\n\r\n\ttextAlign CENTER,CENTER\r\n\tbuttons.push new Button '15',  radius6, 45,     radius2, () => maxWordSize 1 \r\n\tbuttons.push new Button '4',   radius6, 45+90,  radius2, () => maxWordSize -1\r\n\tbuttons.push new Button 'spa', radius6, 45+270, radius2, () => selLanguage 1\r\n\tbuttons.push new Button 'dan', radius6, 45+180, radius2, () => selLanguage -1\r\n\tnewGame 0\r\n\r\nmaxWordSize = (d) ->\r\n\tmaxWord = 4 + (maxWord-4+d) %% (15-4+1) \r\n\tsaveToLocalStorage()\r\n\twords = selectWords()\r\n\r\nselLanguage = (d) ->\r\n\tn = languages.length\r\n\tlanguage = (language+d) %% n \r\n\r\nnewGame = (dLevel) ->\r\n\tif language != currentLanguage \r\n\t\t# go to another html file\r\n\t\twindow.location.href = \"#{languages[language]}.html\"\r\n\r\n\tsolution = possibleWords.join ' '\r\n\tdirection = dLevel\r\n\textra = int level/10 # straffa med 10% av level.\r\n\tif dLevel < 0 and extra != 0 then dLevel *= extra\r\n\tlevel += dLevel\r\n\tif level < 0 then level = 0\r\n\tword = words[index]\r\n\tindex++\r\n\tindex %= words.length\r\n\tpossibleWords = findWords word\r\n\tif 0.5 < random() then word = reverseString word\r\n\tword = word.toUpperCase()\r\n\tangle = 360 * random()\r\n\r\n\tsaveToLocalStorage()\r\n\r\n\tfalse # to prevent double click on Android\r\n\r\nwrap = (first,last,value) -> first + (value-first) %% (last-first+1)\r\n\r\ndraw = ->\r\n\tbg 0.5\r\n\r\n\tpush()\r\n\ttranslate width/2,height/2\r\n\r\n\tbuttons[0].txt = wrap(4,15,maxWord+1)\r\n\tbuttons[1].txt = wrap(4,15,maxWord-1)\r\n\tn = languages.length\r\n\tbuttons[2].txt = languages[(language+1)%%n]\r\n\tbuttons[3].txt = languages[(language-1)%%n]\t\r\n\r\n\ttextSize 0.09 * size \r\n\tfor button in buttons\r\n\t\tbutton.draw()\r\n\t\t\r\n\ttextSize 0.11 * size \r\n\ttext \"#{languages[language]}-#{maxWord}\",0,-0.2*size \r\n\ttextSize 0.06 * size \r\n\ttext solution, 0, 0.18*size\r\n\r\n\tpop()\r\n\r\n\t#text solution + '|' + possibleWords.join(' '), width/2,height-size/10\r\n\r\n\ttextSize size/4\r\n\tif direction == 1 then fc 0,1,0 else fc 1,0,0\r\n\ttext level,width/2,height/2 \r\n\tfc 0\r\n\ttranslate width/2,height/2\r\n\tn = word.length\r\n\tdAngle = 360/n\r\n\trd angle\r\n\ttextSize size/10\r\n\tfor ch,i in word\r\n\t\tpush()\r\n\t\ttranslate radius1,0\r\n\t\trd 90\r\n\t\tfc 1,1,0\r\n\t\tcircle 0,0,radius2\r\n\t\tfc 0\r\n\t\ttext ch,0,0\r\n\t\tpop()\r\n\t\trd dAngle\r\n\tangle += (millis()-dt)/50\r\n\tdt = millis()\r\n\r\nselectWords = -> \r\n\tindex = 0\r\n\t_.shuffle (w for w in wordList when w.length <= maxWord)\r\n\r\nshowWordInfo = -> \r\n\tarr = solution.split ' '\r\n\tif arr.length == 0 then return \r\n\treleased = true \r\n\turl = ''\r\n\tlan = languages[language] \r\n\tif lan == 'swe' then url = \"https://svenska.se/tre/?sok=#{arr[0]}\"\r\n\t#if lan == 'eng' then url = \"https://en.oxforddictionaries.com/definition/#{arr[0]}\"\r\n\tif url != '' then window.open url, '_blank' \r\n\r\nhandleMousePressed = ->\r\n\tif released then released = false else return # to make Android work \r\n\tif dist(mouseX,mouseY,width/2,height/2) < radius2 \r\n\t\tshowWordInfo()\r\n\telse if dist(mouseX,mouseY,width/2,height/2) > radius1+radius2 \r\n\t\tfor button in buttons\r\n\t\t\tbutton.mousePressed mouseX,mouseY\r\n\telse\r\n\t\t# letter\t\r\n\t\tn = word.length\r\n\t\tdword = (word+word).toLowerCase()\r\n\t\tfor ch,i in word\r\n\t\t\tx = width/2  + radius1 * cos radians angle + i/n * 360\r\n\t\t\ty = height/2 + radius1 * sin radians angle + i/n * 360\r\n\t\t\tif radius2 > dist mouseX,mouseY,x,y \r\n\t\t\t\tw = dword.slice i,i+n\r\n\t\t\t\trw = reverseString(dword).slice n-i-1,n-i+n-1\r\n\t\t\t\tif w in possibleWords or rw in possibleWords\r\n\t\t\t\t\treturn newGame 1\r\n\t\t\t\telse\r\n\t\t\t\t\treturn newGame -1\r\n\r\nreverseString = (str) -> str.split(\"\").reverse().join \"\"\r\n\r\nmousePressed = ->\r\n\thandleMousePressed()\r\n\tfalse # to prevent double click on Android\r\n\r\ntouchStarted = ->\r\n\thandleMousePressed()\r\n\tfalse # to prevent double click on Android\r\n\r\nmouseReleased = ->\r\n\treleased = true \r\n\tfalse # to prevent double click on Android\r\n\r\ntouchEnded = ->\r\n\treleased = true \r\n\tfalse # to prevent double click on Android\r\n\r\nfindWords = (word) ->\r\n\tn = word.length\r\n\tdword = (word+word).toLowerCase()\r\n\tres = []\r\n\tfor ch,i in word\r\n\t\tw = dword.slice i,i+n\r\n\t\trw = reverseString(dword).slice n-i-1,n-i+n-1\r\n\t\tif wordList.binaryIndexOf(w) != -1 then res.push w\r\n\t\tif wordList.binaryIndexOf(rw)!= -1 then res.push rw\r\n\t_.uniq res\r\n\r\nArray.prototype.binaryIndexOf = (item) ->\r\n\t'use strict'\r\n\tminIndex = 0\r\n\tmaxIndex = @length - 1\r\n\twhile minIndex <= maxIndex\r\n\t\tcurrIndex = (minIndex + maxIndex) / 2 | 0\r\n\t\tcurrItem = @[currIndex]\r\n\t\tif currItem < item then minIndex = currIndex + 1\r\n\t\telse if currItem > item then maxIndex = currIndex - 1\r\n\t\telse return currIndex\r\n\t-1\r\n"
  ]
}