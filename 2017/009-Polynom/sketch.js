// Generated by CoffeeScript 1.11.1
var Polynom, p1, p2, p3;

Polynom = (function() {
  function Polynom(lst1) {
    this.lst = lst1;
  }

  Polynom.prototype.add = function(other) {
    var i, k, len, lst, ref;
    lst = [];
    ref = range(Math.max(this.lst.length, other.lst.length));
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      lst.push((this.lst[i] || 0) + (other.lst[i] || 0));
    }
    return new Polynom(lst);
  };

  Polynom.prototype.mul = function(other) {
    var a, b, i, j, k, l, len, len1, lst, ref, ref1;
    lst = (function() {
      var k, ref, results;
      results = [];
      for (k = 1, ref = this.lst.length + other.lst.length; 1 <= ref ? k <= ref : k >= ref; 1 <= ref ? k++ : k--) {
        results.push(0);
      }
      return results;
    }).call(this);
    ref = this.lst;
    for (i = k = 0, len = ref.length; k < len; i = ++k) {
      a = ref[i];
      ref1 = other.lst;
      for (j = l = 0, len1 = ref1.length; l < len1; j = ++l) {
        b = ref1[j];
        lst[i + j] += a * b;
      }
    }
    return new Polynom(lst);
  };

  Polynom.prototype.value = function(x) {
    var a, i, k, len, ref, res;
    res = 0;
    ref = this.lst;
    for (i = k = 0, len = ref.length; k < len; i = ++k) {
      a = ref[i];
      res += a * Math.pow(x, i);
    }
    return res;
  };

  Polynom.prototype.diff = function() {
    var a, i, k, len, lst, ref;
    lst = [];
    ref = this.lst;
    for (i = k = 0, len = ref.length; k < len; i = ++k) {
      a = ref[i];
      if (i > 0) {
        lst.push(i * a);
      }
    }
    return new Polynom(lst);
  };

  Polynom.prototype.integ = function() {
    var a, i, k, len, lst, ref;
    lst = [0];
    ref = this.lst;
    for (i = k = 0, len = ref.length; k < len; i = ++k) {
      a = ref[i];
      lst.push(a / (i + 1));
    }
    return new Polynom(lst);
  };

  Polynom.prototype.to_s = function() {
    var arr, i, item, k, len, ref;
    arr = [];
    ref = this.lst;
    for (i = k = 0, len = ref.length; k < len; i = ++k) {
      item = ref[i];
      if (item === 0) {
        continue;
      }
      if (item === 1) {
        if (i === 0) {
          arr.push("1");
        } else if (i === 1) {
          arr.push("x");
        } else {
          arr.push("x^" + i);
        }
      } else {
        if (i === 0) {
          arr.push("" + item);
        } else if (i === 1) {
          arr.push(item + "*x");
        } else {
          arr.push(item + "*x^" + i);
        }
      }
    }
    arr.reverse();
    return arr.join("+");
  };

  return Polynom;

})();

p1 = new Polynom([5, 4, 3]);

p2 = new Polynom([4, 3]);

p3 = new Polynom([0, 0, 1]);

assert(p1.to_s(), "3*x^2+4*x+5");

assert(p1.add(p2).to_s(), "3*x^2+7*x+9");

assert(p1.mul(p2).to_s(), "9*x^3+24*x^2+31*x+20");

assert(p1.value(2), 25);

assert(p1.diff().lst, [4, 6]);

assert(p1.integ().lst, [0, 5, 2, 1]);

assert(p3.to_s(), "x^2");

assert(p3.integ().to_s(), "0.3333333333333333*x^3");

assert(p3.integ().value(3), 9);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2tldGNoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsSUFBQTs7QUFBTTtFQUNTLGlCQUFDLElBQUQ7SUFBQyxJQUFDLENBQUEsTUFBRDtFQUFEOztvQkFFZCxHQUFBLEdBQU0sU0FBQyxLQUFEO0FBQ0wsUUFBQTtJQUFBLEdBQUEsR0FBTTtBQUNOO0FBQUEsU0FBQSxxQ0FBQTs7TUFDQyxHQUFHLENBQUMsSUFBSixDQUFTLENBQUMsSUFBQyxDQUFBLEdBQUksQ0FBQSxDQUFBLENBQUwsSUFBVyxDQUFaLENBQUEsR0FBaUIsQ0FBQyxLQUFLLENBQUMsR0FBSSxDQUFBLENBQUEsQ0FBVixJQUFnQixDQUFqQixDQUExQjtBQUREO1dBRUksSUFBQSxPQUFBLENBQVEsR0FBUjtFQUpDOztvQkFNTixHQUFBLEdBQU0sU0FBQyxLQUFEO0FBQ0wsUUFBQTtJQUFBLEdBQUE7O0FBQU87V0FBTSxxR0FBTjtxQkFBQTtBQUFBOzs7QUFDUDtBQUFBLFNBQUEsNkNBQUE7O0FBQ0M7QUFBQSxXQUFBLGdEQUFBOztRQUNDLEdBQUksQ0FBQSxDQUFBLEdBQUUsQ0FBRixDQUFKLElBQVksQ0FBQSxHQUFFO0FBRGY7QUFERDtXQUdJLElBQUEsT0FBQSxDQUFRLEdBQVI7RUFMQzs7b0JBT04sS0FBQSxHQUFRLFNBQUMsQ0FBRDtBQUNQLFFBQUE7SUFBQSxHQUFBLEdBQU07QUFDTjtBQUFBLFNBQUEsNkNBQUE7O01BQ0MsR0FBQSxJQUFPLENBQUEsWUFBSSxHQUFLO0FBRGpCO1dBRUE7RUFKTzs7b0JBTVIsSUFBQSxHQUFPLFNBQUE7QUFDTixRQUFBO0lBQUEsR0FBQSxHQUFNO0FBQ047QUFBQSxTQUFBLDZDQUFBOztNQUNDLElBQUcsQ0FBQSxHQUFJLENBQVA7UUFBYyxHQUFHLENBQUMsSUFBSixDQUFTLENBQUEsR0FBRSxDQUFYLEVBQWQ7O0FBREQ7V0FFSSxJQUFBLE9BQUEsQ0FBUSxHQUFSO0VBSkU7O29CQU1QLEtBQUEsR0FBUSxTQUFBO0FBQ1AsUUFBQTtJQUFBLEdBQUEsR0FBTSxDQUFDLENBQUQ7QUFDTjtBQUFBLFNBQUEsNkNBQUE7O01BQ0MsR0FBRyxDQUFDLElBQUosQ0FBUyxDQUFBLEdBQUUsQ0FBQyxDQUFBLEdBQUUsQ0FBSCxDQUFYO0FBREQ7V0FFSSxJQUFBLE9BQUEsQ0FBUSxHQUFSO0VBSkc7O29CQU1SLElBQUEsR0FBTyxTQUFBO0FBQ04sUUFBQTtJQUFBLEdBQUEsR0FBTTtBQUNOO0FBQUEsU0FBQSw2Q0FBQTs7TUFDQyxJQUFHLElBQUEsS0FBUSxDQUFYO0FBQWtCLGlCQUFsQjs7TUFDQSxJQUFHLElBQUEsS0FBUSxDQUFYO1FBQ0MsSUFBRyxDQUFBLEtBQUcsQ0FBTjtVQUFhLEdBQUcsQ0FBQyxJQUFKLENBQVMsR0FBVCxFQUFiO1NBQUEsTUFDSyxJQUFHLENBQUEsS0FBRyxDQUFOO1VBQWEsR0FBRyxDQUFDLElBQUosQ0FBUyxHQUFULEVBQWI7U0FBQSxNQUFBO1VBQ0EsR0FBRyxDQUFDLElBQUosQ0FBUyxJQUFBLEdBQUssQ0FBZCxFQURBO1NBRk47T0FBQSxNQUFBO1FBS0MsSUFBRyxDQUFBLEtBQUcsQ0FBTjtVQUFhLEdBQUcsQ0FBQyxJQUFKLENBQVMsRUFBQSxHQUFHLElBQVosRUFBYjtTQUFBLE1BQ0ssSUFBRyxDQUFBLEtBQUcsQ0FBTjtVQUFhLEdBQUcsQ0FBQyxJQUFKLENBQVksSUFBRCxHQUFNLElBQWpCLEVBQWI7U0FBQSxNQUFBO1VBQ0EsR0FBRyxDQUFDLElBQUosQ0FBWSxJQUFELEdBQU0sS0FBTixHQUFXLENBQXRCLEVBREE7U0FOTjs7QUFGRDtJQVVBLEdBQUcsQ0FBQyxPQUFKLENBQUE7V0FDQSxHQUFHLENBQUMsSUFBSixDQUFTLEdBQVQ7RUFiTTs7Ozs7O0FBZVIsRUFBQSxHQUFTLElBQUEsT0FBQSxDQUFRLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLENBQVI7O0FBQ1QsRUFBQSxHQUFTLElBQUEsT0FBQSxDQUFRLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBUjs7QUFDVCxFQUFBLEdBQVMsSUFBQSxPQUFBLENBQVEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsQ0FBUjs7QUFDVCxNQUFBLENBQU8sRUFBRSxDQUFDLElBQUgsQ0FBQSxDQUFQLEVBQWtCLGFBQWxCOztBQUNBLE1BQUEsQ0FBTyxFQUFFLENBQUMsR0FBSCxDQUFPLEVBQVAsQ0FBVSxDQUFDLElBQVgsQ0FBQSxDQUFQLEVBQTBCLGFBQTFCOztBQUNBLE1BQUEsQ0FBTyxFQUFFLENBQUMsR0FBSCxDQUFPLEVBQVAsQ0FBVSxDQUFDLElBQVgsQ0FBQSxDQUFQLEVBQTBCLHNCQUExQjs7QUFDQSxNQUFBLENBQU8sRUFBRSxDQUFDLEtBQUgsQ0FBUyxDQUFULENBQVAsRUFBb0IsRUFBcEI7O0FBQ0EsTUFBQSxDQUFPLEVBQUUsQ0FBQyxJQUFILENBQUEsQ0FBUyxDQUFDLEdBQWpCLEVBQXNCLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBdEI7O0FBQ0EsTUFBQSxDQUFPLEVBQUUsQ0FBQyxLQUFILENBQUEsQ0FBVSxDQUFDLEdBQWxCLEVBQXVCLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLEVBQU8sQ0FBUCxDQUF2Qjs7QUFDQSxNQUFBLENBQU8sRUFBRSxDQUFDLElBQUgsQ0FBQSxDQUFQLEVBQWtCLEtBQWxCOztBQUNBLE1BQUEsQ0FBTyxFQUFFLENBQUMsS0FBSCxDQUFBLENBQVUsQ0FBQyxJQUFYLENBQUEsQ0FBUCxFQUEwQix3QkFBMUI7O0FBQ0EsTUFBQSxDQUFPLEVBQUUsQ0FBQyxLQUFILENBQUEsQ0FBVSxDQUFDLEtBQVgsQ0FBaUIsQ0FBakIsQ0FBUCxFQUE0QixDQUE1QiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jbGFzcyBQb2x5bm9tXHJcblx0Y29uc3RydWN0b3IgOiAoQGxzdCkgLT5cclxuXHJcblx0YWRkIDogKG90aGVyKSAtPlxyXG5cdFx0bHN0ID0gW11cclxuXHRcdGZvciBpIGluIHJhbmdlIE1hdGgubWF4IEBsc3QubGVuZ3RoLCBvdGhlci5sc3QubGVuZ3RoXHJcblx0XHRcdGxzdC5wdXNoIChAbHN0W2ldIG9yIDApICsgKG90aGVyLmxzdFtpXSBvciAwKVxyXG5cdFx0bmV3IFBvbHlub20gbHN0XHJcblxyXG5cdG11bCA6IChvdGhlcikgLT5cclxuXHRcdGxzdCA9ICgwIGZvciBbMS4uQGxzdC5sZW5ndGggKyBvdGhlci5sc3QubGVuZ3RoXSlcclxuXHRcdGZvciBhLGkgaW4gQGxzdFxyXG5cdFx0XHRmb3IgYixqIGluIG90aGVyLmxzdFxyXG5cdFx0XHRcdGxzdFtpK2pdICs9IGEqYlxyXG5cdFx0bmV3IFBvbHlub20gbHN0XHJcblxyXG5cdHZhbHVlIDogKHgpIC0+XHJcblx0XHRyZXMgPSAwXHJcblx0XHRmb3IgYSxpIGluIEBsc3RcclxuXHRcdFx0cmVzICs9IGEgKiB4ICoqIGlcclxuXHRcdHJlc1xyXG5cclxuXHRkaWZmIDogLT5cclxuXHRcdGxzdCA9IFtdXHJcblx0XHRmb3IgYSxpIGluIEBsc3RcclxuXHRcdFx0aWYgaSA+IDAgdGhlbiBsc3QucHVzaCBpKmFcclxuXHRcdG5ldyBQb2x5bm9tIGxzdFxyXG5cclxuXHRpbnRlZyA6IC0+XHJcblx0XHRsc3QgPSBbMF1cclxuXHRcdGZvciBhLGkgaW4gQGxzdFxyXG5cdFx0XHRsc3QucHVzaCBhLyhpKzEpXHJcblx0XHRuZXcgUG9seW5vbSBsc3RcclxuXHJcblx0dG9fcyA6IC0+XHJcblx0XHRhcnIgPSBbXVxyXG5cdFx0Zm9yIGl0ZW0saSBpbiBAbHN0XHJcblx0XHRcdGlmIGl0ZW0gPT0gMCB0aGVuIGNvbnRpbnVlXHJcblx0XHRcdGlmIGl0ZW0gPT0gMSBcclxuXHRcdFx0XHRpZiBpPT0wIHRoZW4gYXJyLnB1c2ggXCIxXCJcclxuXHRcdFx0XHRlbHNlIGlmIGk9PTEgdGhlbiBhcnIucHVzaCBcInhcIlxyXG5cdFx0XHRcdGVsc2UgYXJyLnB1c2ggXCJ4XiN7aX1cIlxyXG5cdFx0XHRlbHNlXHRcdFx0XHRcclxuXHRcdFx0XHRpZiBpPT0wIHRoZW4gYXJyLnB1c2ggXCIje2l0ZW19XCJcclxuXHRcdFx0XHRlbHNlIGlmIGk9PTEgdGhlbiBhcnIucHVzaCBcIiN7aXRlbX0qeFwiXHJcblx0XHRcdFx0ZWxzZSBhcnIucHVzaCBcIiN7aXRlbX0qeF4je2l9XCJcclxuXHRcdGFyci5yZXZlcnNlKClcclxuXHRcdGFyci5qb2luIFwiK1wiXHJcblxyXG5wMSA9IG5ldyBQb2x5bm9tIFs1LDQsM11cclxucDIgPSBuZXcgUG9seW5vbSBbNCwzXVxyXG5wMyA9IG5ldyBQb2x5bm9tIFswLDAsMV1cclxuYXNzZXJ0IHAxLnRvX3MoKSwgXCIzKnheMis0KngrNVwiXHJcbmFzc2VydCBwMS5hZGQocDIpLnRvX3MoKSwgXCIzKnheMis3KngrOVwiXHJcbmFzc2VydCBwMS5tdWwocDIpLnRvX3MoKSwgXCI5KnheMysyNCp4XjIrMzEqeCsyMFwiXHJcbmFzc2VydCBwMS52YWx1ZSgyKSwgMjVcclxuYXNzZXJ0IHAxLmRpZmYoKS5sc3QsIFs0LDZdIFxyXG5hc3NlcnQgcDEuaW50ZWcoKS5sc3QsIFswLDUsMiwxXSBcclxuYXNzZXJ0IHAzLnRvX3MoKSwgXCJ4XjJcIlxyXG5hc3NlcnQgcDMuaW50ZWcoKS50b19zKCksIFwiMC4zMzMzMzMzMzMzMzMzMzMzKnheM1wiXHJcbmFzc2VydCBwMy5pbnRlZygpLnZhbHVlKDMpLCA5Il19
//# sourceURL=C:\Lab\2017\009-Polynom\sketch.coffee