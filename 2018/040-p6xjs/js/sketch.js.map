{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "stage = null\r\ncn = {}\r\n#########\r\nkarusell = null\r\n\r\nclass Vector\r\n\tconstructor : (@x=0,@y=0) ->\r\n\t\t@rotation = atan2 @y, @x\r\n\t\t@length = sqrt @x*@x + @y*@y\r\n\tadd : (vector) -> new Vector @x + vector.x,@y + vector.y\r\n\tsub : (vector) -> new Vector @x - vector.x,@y - vector.y\r\n\trotate : (degrees) ->\r\n\t\tv = @rotation + degrees\r\n\t\tx = @length * cos v\r\n\t\ty = @length * sin v\r\n\t\tnew Vector x, y\r\n\r\ntestVector = ->\r\n\ta = new Vector 10,20\r\n\tassert 10,a.x\r\n\tassert 20,a.y\r\n\ta = a.rotate 90\r\n\tassert -20.000000000000004,a.x\r\n\tassert 9.999999999999995,a.y\r\n\tb = new Vector 10,10\r\n\tassert 45, b.rotation\r\n\tassert 14.142135623730951,b.length\r\n\tc = b.add b\r\n\tassert 20,c.x\r\n\tassert 20,c.y\r\n\tc = c.sub b\r\n\tassert 10,c.x\r\n\tassert 10,c.y\r\n\r\nclass Shape\r\n\tconstructor : (@x=0,@y=0,@parent=null,@rotation=0)->\r\n\t\t@children = []\r\n\t\t@fillColor = \"#fff\"\r\n\t\t@strokeColor = \"#000\"\r\n\t\t@strokeWeight = 1\r\n\t\tif @parent? then @parent.add @\r\n\r\n\tdraw : -> \r\n\t\ttranslate @x,@y\r\n\t\trotate @rotation\r\n\t\tfor child in @children\r\n\t\t\tpush()\r\n\t\t\tchild.draw() \r\n\t\t\tpop()\r\n\r\n\tadd : (shape) -> @children.push shape\r\n\tfill : (color) -> \r\n\t\t@fillColor = color\r\n\t\t@\r\n\tstroke : (color) -> \r\n\t\t@strokeColor = color\r\n\t\t@\r\n\r\n\tcontains : (m) -> # m is mouse position\r\n\t\t[x,y,rotation] = @stagepos()\r\n\t\tp2 = new Vector x,y\r\n\t\tp3 = m.sub p2\r\n\t\tp4 = p3.rotate -rotation\r\n\t\t@inside p4 #, @points\r\n\r\n\tstagepos : -> # returns resulting [x, y, rotation]\r\n\t\tlst = []\r\n\t\tcurrent = @\r\n\t\twhile current\r\n\t\t\tlst.unshift [current.x,current.y,current.rotation]\r\n\t\t\tcurrent = current.parent\r\n\t\tvec = new Vector()\r\n\t\trot = 0\r\n\t\trotres = 0\r\n\t\tfor [x,y,rotation] in lst\r\n\t\t\trotres += rotation\r\n\t\t\tv1 = new Vector x, y\r\n\t\t\tv2 = v1.rotate rot\r\n\t\t\trot = rotation\r\n\t\t\tvec = vec.add v2\r\n\t\t[vec.x,vec.y,rotres]\r\n\r\n\tmouseMoved : (m) -> # m = mouse position\r\n\t\tfor child in @children\r\n\t\t\tchild.strokeWeight = if child.contains m then 3 else 1\r\n\t\t\tchild.mouseMoved m\r\n\r\nclass Polygon extends Shape\r\n\tconstructor : (x,y,parent=stage) ->\r\n\t\tsuper x,y,parent\r\n\t\t@points = []\r\n\r\n\tlineTo : (x,y) -> @points.push new Vector x,y\r\n\r\n\tdraw : ->\r\n\t\tsuper()\r\n\t\tfill @fillColor\r\n\t\tstrokeWeight @strokeWeight\r\n\t\tbeginShape()\r\n\t\tfor p in @points\r\n\t\t\tvertex p.x,p.y\r\n\t\tendShape CLOSE\r\n\r\n\tinside : (p) -> # only checks if p is locally within polygon\r\n\t\tres = false\r\n\t\tlst = range @points.length\r\n\t\tlst.unshift lst.pop()\r\n\t\tfor j,i in lst\r\n\t\t\txi = @points[i].x\r\n\t\t\tyi = @points[i].y\r\n\t\t\txj = @points[j].x\r\n\t\t\tyj = @points[j].y\r\n\t\t\tintersect = ((yi >= p.y) != (yj >= p.y)) and (p.x <= (xj - xi) * (p.y - yi) / (yj - yi) + xi)\r\n\t\t\tif intersect then res = !res\r\n\t\tres\r\n\r\nclass Circle extends Shape\r\n\tconstructor : (x,y,@radius,parent=stage) -> super x,y,parent\r\n\tdraw : ->\r\n\t\tsuper()\r\n\t\tfill @fillColor\r\n\t\tstrokeWeight @strokeWeight\r\n\t\tcircle 0,0,@radius\r\n\tinside : (d) -> @radius >= sqrt d.x*d.x+d.y*d.y \r\n\r\n# class Circle extends Polygon\r\n# \tconstructor : (x,y,@radius,parent=stage) -> \r\n# \t\tsuper x,y,parent\r\n# \t\tfor v in range 0,361,10\r\n# \t\t\tx = @radius * cos v\r\n# \t\t\ty = @radius * sin v\r\n# \t\t\t@lineTo x,y\r\n\r\ntestCircle = ->\r\n\tc = new Circle 100,200,50\r\n\tassert 100,c.x\r\n\tassert 200,c.y\r\n\tassert 50,c.radius\r\n\tassert [100.00000000000001, 200, 0], c.stagepos()\r\n\tassert true,c.contains new Vector 110,210\r\n\tassert true,c.contains new Vector 129,239\r\n\tassert false,c.contains new Vector 131,241\r\n\r\nclass Arc extends Polygon\r\n\tconstructor : (x,y,radius,start,stopp,parent=stage) ->\r\n\t\tsuper x,y,parent\r\n\t\tfor v in range start,stopp+1,10\r\n\t\t\tx = radius * cos v\r\n\t\t\ty = radius * sin v\r\n\t\t\t@lineTo x,y\r\n\r\nclass Rect extends Polygon\r\n\tconstructor : (x,y,w,h,parent=stage) ->\r\n\t\tsuper x,y,parent\r\n\t\tw = w/2\r\n\t\th = h/2\r\n\t\t@lineTo -w,-h,+w,-h\r\n\t\t@lineTo +w,-h,+w,+h\r\n\t\t@lineTo +w,+h,-w,+h\r\n\t\t@lineTo -w,+h,-w,-h\r\n\r\ntestRect = ->\r\n\tr = cn.rect 100,200,10,20\r\n\tassert -5,r.points[0].x\r\n\tassert -10,r.points[0].y\r\n\tassert 5,r.points[1].x\r\n\tassert -10,r.points[1].y\r\n\tassert 5,r.points[2].x\r\n\tassert 10,r.points[2].y\r\n\tassert -5,r.points[3].x\r\n\tassert 10,r.points[3].y\r\n\tassert true,r.inside new Vector 1,1\r\n\tassert true,r.inside new Vector 5,10\r\n\tassert false,r.inside new Vector 6,10\r\n\tassert false,r.inside new Vector 5,11\r\n\tassert [100.00000000000001, 200, 0], r.stagepos()\r\n\tassert true, r.contains new Vector 100+4,200+4\r\n\tassert true, r.contains new Vector 100-4,200-4\r\n\tassert true, r.contains new Vector 100-4,200+4\r\n\tassert true, r.contains new Vector 100+4,200-4\r\n\r\n\tr = cn.rect 100,200,10,10\r\n\tr.rotation = 45\r\n\tprint r\r\n\tassert true, r.contains new Vector 100+3,200+3\r\n\tassert false, r.contains new Vector 100+4,200+4\r\n\tassert true, r.contains new Vector 100+7,200+0\r\n\tassert false, r.contains new Vector 100+8,200+0\r\n\t# assert true, r.contains new Vector 100-4,200-4\r\n\t# assert true, r.contains new Vector 100-4,200+4\r\n\t# assert true, r.contains new Vector 100+4,200-4\r\n\r\n#\tassert true,r.contains new Vector 1,1\r\n\t# d2 = new Vector 140,230\r\n\t# assert true,r.contains d1.sub d2\r\n\t# d2 = new Vector 141,231\r\n\t# assert false,r.contains d1.sub d2\r\n\r\nclass Group extends Shape\r\n\tconstructor : (x,y,parent=stage) -> super x,y,parent\r\n\tcontains : ->\r\n\r\ncn.shape  = (...args) -> new Shape ...args\r\ncn.group  = (...args) -> new Group ...args\r\ncn.circle = (...args) -> new Circle ...args\r\ncn.arc    = (...args) -> new Arc ...args\r\ncn.rect   = (...args) -> new Rect ...args\r\n\r\n##########################\r\n\r\nsetup = ->\r\n\tcreateCanvas 600,600\r\n\tangleMode DEGREES\r\n\t\r\n\t# testVector()\r\n\t# testCircle()\r\n\t# testRect()\r\n\r\n\tstage = new Shape()\r\n\tkarusell = cn.group 200,200\r\n\tkarusell.name = 'karusell'\r\n\ta=cn.circle(0,0,100,karusell).fill \"#ff0\"\r\n\tb=cn.rect(0,-100,100,100,karusell).fill \"#f00\"\r\n\ta.name = 'circle'\r\n\tb.name = 'rect'\r\n\tcn.rect(-100,0,100,100,karusell).fill \"#0f0\"\r\n\tcn.circle(0,100,50,karusell).fill \"#fff\"\r\n\tcn.arc(100,0, 50,0,180,karusell).fill \"#f00\"\r\n\tcn.arc(100,0,-50,0,180,karusell).fill \"#0f0\"\r\n\r\n\tkarusell.rotation = 45\r\n\t#xdraw()\r\n\t#xdraw()\r\n\tprint stage \r\n\r\ndraw = ->\r\n\tbg 1\r\n\tstage.draw() \r\n\tkarusell.rotation += 0.1\r\n\tfor child in karusell.children\r\n\t\tchild.rotation += 0.05\r\n\r\nmouseMoved = ->\tstage.mouseMoved new Vector mouseX,mouseY\r\n"
  ]
}