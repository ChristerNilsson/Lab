{
  "version": 3,
  "file": "utils.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\utils.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "tests = {}\r\n\r\naddCell = (tr,value) ->\r\n\ttd = document.createElement \"td\"\r\n\ttd.appendChild value\r\n\ttr.appendChild td\r\n\r\n# Visa vinkelavvikelse med färgton. \r\n# -180 = black\r\n#  -90 = red\r\n#    0 = white\r\n#   90 = green \r\n#  180 = black\r\ncalcColor = (delta) -> # -180 <= delta <= 180\r\n\tif      -180 <= delta <  -90 then res = lerpColor BLACK, RED,  (delta+180)/90\r\n\telse if  -90 <= delta <    0 then res = lerpColor RED,   WHITE,(delta+90)/90\r\n\telse if    0 <= delta <   90 then res = lerpColor WHITE, GREEN,(delta+0)/90\r\n\telse if   90 <= delta <= 180 then res = lerpColor GREEN, BLACK,(delta-90)/90\r\n\telse res = color 255,255,0,255 # yellow, error \r\n\tres.levels\r\ntests.calcColor = ->\r\n\tassert [255,255,255,255], calcColor 0\r\n\tassert [128,255,128,255], calcColor 45\r\n\tassert [0,255,0,255], calcColor 90\r\n\tassert [0,128,0,255], calcColor 135\r\n\tassert [0,0,0,255], calcColor 180\r\n\tassert [255,128,128,255], calcColor -45\r\n\tassert [255,0,0,255], calcColor -90\r\n\tassert [128,0,0,255], calcColor -135\r\n\tassert [0,0,0,255], calcColor -180\r\n\r\n\tassert [255,255,0,255], calcColor -225\r\n\tassert [255,255,0,255], calcColor -270\r\n\tassert [255,255,0,255], calcColor -315\r\n\tassert [255,255,0,255], calcColor -360\r\n\tassert [255,255,0,255], calcColor 225\r\n\tassert [255,255,0,255], calcColor 270\r\n\tassert [255,255,0,255], calcColor 315\r\n\tassert [255,255,0,255], calcColor 360\r\n\r\ncalcDelta = (delta) ->\r\n\tif delta < -180 then delta += 360\r\n\tif delta > +180 then delta -= 360\r\n\tdelta\r\ntests.calcDelta = ->\r\n\tassert 0, calcDelta -360\r\n\tassert 90, calcDelta -270\r\n\tassert -180, calcDelta -180\r\n\tassert -90, calcDelta -90\r\n\tassert 0, calcDelta 0\r\n\tassert 90, calcDelta 90\r\n\tassert 180, calcDelta 180\r\n\tassert -90, calcDelta 270\r\n\tassert 0, calcDelta 360\r\n\r\ncalcTotalTime = (ta,tp,a,p,b) -> # sekunder\r\n\tdt = (tp-ta)/1000 # sekunder\t\r\n\tap = distance_on_geoid a,p # meter\r\n\tpb = distance_on_geoid p,b # meter \r\n\tif ap>0 then dt/ap*(ap+pb) else 0 # sekunder\t\r\ntests.calcTotalTime = ->\r\n\ta  = {lat:59.0, lng:18.1}\r\n\tb  = {lat:59.2, lng:18.1}\r\n\tp0 = {lat:59.0, lng:18.0}\r\n\tp1 = {lat:59.1, lng:18.0}\r\n\tp2 = {lat:59.2, lng:18.0}\r\n\tp3 = {lat:59.1, lng:18.1}\r\n\tassert 5009.176237166901,  calcTotalTime 0,1000000,a,p0,b   \r\n\tassert 1999.3916011809056, calcTotalTime 0,1000000,a,p1,b \r\n\tassert 1247.9772474262074, calcTotalTime 0,1000000,a,p2,b  \r\n\tassert 1999.9999999998727, calcTotalTime 0,1000000,a,p3,b  \r\n\r\ncalcHeading = (p1,p2) ->\r\n\tq1 = LatLon p1.lat,p1.lng\r\n\tq2 = LatLon p2.lat,p2.lng\r\n\tq1.bearingTo q2\r\ntests.calcHeading = ->\r\n\ta = {lat:59.0, lng:18.1}\r\n\tb = {lat:59.2, lng:18.1}\r\n\tp = {lat:59.1, lng:18.0}\r\n\tassert   0, calcHeading a,b \r\n\tassert 180, calcHeading b,a \r\n\tassert 332.82657259371086,  calcHeading a,p \r\n\tassert 152.74081091232028, calcHeading p,a \r\n\tassert  27.10548290098893, calcHeading p,b \r\n\tassert 207.19133421223214, calcHeading b,p \r\n\r\ncalcSpeed = (ta,tp,a,p,b) -> # anger den hastighet man har från startpunkten\r\n\tdt = (tp-ta)/1000 # sekunder\r\n\tap = distance_on_geoid a,p # meter\r\n\tif dt>0 then ap/dt else 0 # m/s\r\ntests.calcSpeed = ->\r\n\ta = {lat:59.0, lng:18.1}\r\n\tb = {lat:59.2, lng:18.1}\r\n\tp = {lat:59.1, lng:18.0}\r\n\tassert 12.503835548099977, calcSpeed 0,1000000,a,p,b # 1000 sekunder\r\n\r\n# calcSpeed = (ta,tp,a,p,b) -> # anger den hastighet man närmar sig målet med. Typ vmg utan vinklar\r\n# \tab = distance_on_geoid a,b # meter\r\n# \tpb = distance_on_geoid p,b # meter\r\n# \tdt = (tp-ta)/1000 # sekunder\r\n# \tif dt>0 then (ab-pb)/dt else 0 # m/s\r\n# tests.calcSpeed = ->\r\n# \ta = {lat:59.000000, lng:18.1}\r\n# \tb = {lat:59.100000, lng:18.1}\r\n# \tp = {lat:59.050000, lng:18.0}\r\n# \tassert 3.1466610127605774, calcSpeed 0,1000000,a,p,b # 1000 sekunder\r\n\r\n# https://cdn.rawgit.com/chrisveness/geodesy/v1.1.2/latlon-spherical.js\r\ndistance_on_geoid = (p1,p2) ->\r\n\tq1 = LatLon p1.lat,p1.lng\r\n\tq2 = LatLon p2.lat,p2.lng\r\n\tq1.distanceTo q2\t\r\ntests.distance_on_geoid = ->\r\n\ta = {lat:59.0, lng:18.1}\r\n\tb = {lat:59.2, lng:18.1}\r\n\tp = {lat:59.1, lng:18.0}\r\n\tassert 22238.98532891178, distance_on_geoid(a,b)\r\n\tassert 12496.228229318362, distance_on_geoid(p,b)\r\n\r\ngetField = (name) ->\r\n\telement = document.getElementById name\r\n\tif element then element.value else null\r\n\r\nisNumeric = (val) -> val == Number parseFloat val\r\ntests.isNumeric = ->\r\n\tassert true,isNumeric 1.2\r\n\tassert true,isNumeric 1\r\n\tassert false,isNumeric \"1.2\"\r\n\tassert false,isNumeric null\r\n\tassert false,isNumeric undefined \r\n\tassert false,isNumeric NaN\t\r\n\r\nmakeButton = (title,n,f) ->\r\n\ts = \"#{Math.floor(100/n)}%\"\r\n\t#print title,s\r\n\tb = document.createElement 'input'\r\n\tb.style.width = s\r\n\t#b.style.fontSize = \"100%\"\r\n\tb.style.fontSize = '100%'\r\n\tb.style.webkitAppearance = \"none\"\r\n\tb.style.borderRadius = 0\r\n\tb.style.padding = 0\r\n\tb.type = 'button'\r\n\tb.value = title\r\n\tb.onclick = f\r\n\tb\r\n\r\nmakeDiv = (value) ->\r\n\tb = document.createElement 'div'\r\n\tb.innerHTML = value\r\n\tb\r\n\r\nmakeInput = (title,value,readonly=false) ->\r\n\tb = document.createElement 'input'\r\n\tb.id = title\r\n\tb.value = value\r\n\tb.placeholder = title\r\n\tb.style.fontSize = \"100%\"\t\r\n\tb.style.width = \"100%\"\r\n\tif readonly then b.setAttribute \"readonly\", true\r\n\tif title=='name' then b.autofocus = true\r\n\t#b.onfocus = \"setTimeout(function () { this.select(); }, 50)\"\r\n\t#b.onclick = \"this.setSelectionRange(0, this.value.length)\"\r\n\tb\r\n\r\nmakeTextArea = (title) ->\r\n\tb = document.createElement 'textarea'\r\n\tb.id = title\r\n\tb.style.fontSize = \"50%\"\t\r\n\tb.style.width = \"100%\"\r\n\tb.rows = 10\r\n\tb\r\n\r\nprecisionRound = (number, precision) ->\r\n  factor = Math.pow 10, precision\r\n  Math.round(number * factor) / factor\r\ntests.precisionRound = ->\r\n\tassert 3.1, precisionRound 3.1415,1\r\n\tassert 3,   precisionRound 3.1415,0\r\n\tassert 40,  precisionRound 37.1415,-1\r\n\r\nprettyDate = (date) ->\r\n\ty = date.getFullYear()\r\n\tm = (\"0\"+(date.getMonth()+1)).slice(-2)\r\n\td = (\"0\" + date.getDate()).slice(-2) \r\n\thh = (\"0\" + date.getHours()).slice(-2)\r\n\tmm = (\"0\" + date.getMinutes()).slice(-2)\r\n\tss = (\"0\" + date.getSeconds()).slice(-2)\r\n\t\"#{y}-#{m}-#{d} #{hh}:#{mm}:#{ss}\"\r\ntests.prettyDate = ->\r\n\tassert \"2018-01-20 02:34:56\",prettyDate new Date 2018,0,20, 2,34,56\r\n\tassert \"2018-02-20 12:34:56\",prettyDate new Date 2018,1,20,12,34,56\r\n\r\nprettyDist = (dist) -> # dist in meter\r\n\tres = 0\r\n\tif dist<1000 then res = precisionRound(dist,0)+' m'\r\n\telse if dist < 10000 then res = precisionRound(dist/1000,2)+' km'\r\n\telse if dist < 100000 then res = precisionRound(dist/1000,1)+' km'\r\n\telse res = precisionRound(dist/1000,0)+' km'\r\n\tres \r\ntests.prettyDist = ->\r\n\tassert \"12 m\",prettyDist 12\r\n\tassert \"123 m\",prettyDist 123\r\n\tassert \"1.23 km\",prettyDist 1234\r\n\tassert \"12.3 km\",prettyDist 12345\r\n\tassert \"123 km\",prettyDist 123456\r\n\r\nprettyETA = (start,totalTime) -> # seconds\r\n\tif totalTime > 24*60*60 then return ''\r\n\tdate = new Date start \r\n\tdate = new Date date.getTime() + totalTime*1000\r\n\thh = (\"0\" + date.getHours()).slice(-2)\r\n\tmm = (\"0\" + date.getMinutes()).slice(-2)\r\n\t\"#{hh}:#{mm}\"\r\ntests.prettyETA = ->\r\n\tassert \"12:16\",prettyETA new Date(2018,0,20,12,0,0),1000\r\n\tassert \"13:00\",prettyETA new Date(2018,0,20,12,44,0),1000\r\n\r\ntest = ->\r\n\tstart = millis()\r\n\tprint \"test start\" \r\n\tfor key,tst of tests\r\n\t\ttry \r\n\t\t\ttst()\r\n\t\tcatch e\r\n\t\t\tprint 'Click on tests.' + key + ' to see failing assert.'\r\n\t\t\tprint ' first', e.actual\r\n\t\t\tprint 'second', e.expected\t\t\r\n\t\t\tprint e.stack\r\n\tprint \"test ready\", round(millis()-start)+' ms'\r\n"
  ]
}