'use strict';

// Generated by CoffeeScript 2.0.3
var addCell, getField, hideCanvas, isNumeric, makeButton, makeInput, showCanvas;

isNumeric = function isNumeric(val) {
  return val === Number(parseFloat(val));
};

hideCanvas = function hideCanvas() {
  var elem;
  elem = document.getElementById('myContainer');
  return elem.style.display = 'none';
};

showCanvas = function showCanvas() {
  var elem;
  elem = document.getElementById('myContainer');
  return elem.style.display = 'block';
};

makeInput = function makeInput(title, value) {
  var readonly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var b;
  b = document.createElement('input');
  b.id = title;
  b.value = value;
  b.placeholder = title;
  if (readonly) {
    b.setAttribute("readonly", true);
  }
  if (title === 'name') {
    b.autofocus = true;
  }
  b.onclick = "this.setSelectionRange(0, this.value.length)";
  return b;
};

makeButton = function makeButton(title, n, f) {
  var b;
  b = document.createElement('input');
  b.style.width = Math.floor(100 / n) + '%';
  b.style.fontSize = "100%";
  b.style.webkitAppearance = "none";
  b.style.borderRadius = 0;
  b.style.padding = 0;
  b.type = 'button';
  b.value = title;
  b.onclick = f;
  return b;
};

addCell = function addCell(tr, value) {
  var td;
  td = document.createElement("td");
  td.appendChild(value);
  return tr.appendChild(td);
};

getField = function getField(name) {
  var element;
  element = document.getElementById(name);
  if (element) {
    return element.value;
  } else {
    return null;
  }
};
//# sourceMappingURL=utils.js.map
