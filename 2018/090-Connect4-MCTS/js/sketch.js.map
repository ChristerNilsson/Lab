{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "thinkingTime = 1000 # 10 milliseconds is ok\r\nUCB = 2\r\n\r\nSIZE = 600/(N+1)\r\nlevel = 0\r\nlist = null\r\nmoves = null\r\nboard = null\r\ndelta = 0\r\nmontecarlo = null\r\nantal = 0\r\n\r\nsetup = ->\r\n\tcreateCanvas 600,600\r\n\tnewGame()\r\n\ttextAlign CENTER,CENTER\r\n\ttextSize SIZE/2\r\n\r\nnewGame = () ->\r\n\tantal = 0\r\n\tprint ' '\r\n\tlevel += delta\r\n\tif level < 0 then level = 0\r\n\tdelta = -2\r\n\r\n\tboard = new Board()\r\n\tlist = ([] for i in range 7)\r\n\tmoves = []\r\n\tmontecarlo = null\r\n\t#computerMove()\r\n\r\ndraw = ->\r\n\tbg 0\r\n\tfc()\r\n\tsc 0.1,0.3,1\r\n\tsw 0.2 * SIZE\r\n\tfor i in range N\r\n\t\tx = SIZE + i*SIZE\r\n\t\tfor j in range M\r\n\t\t\ty = height-SIZE - SIZE*j\r\n\t\t\tcircle x, y, SIZE/2\r\n\r\n\tfor column,i in list\r\n\t\tx = SIZE + i*SIZE\r\n\t\tfor nr,j in column\r\n\t\t\ty = height-SIZE - SIZE*j\r\n\t\t\tfc 1,nr%2,0\r\n\t\t\tsw 1\r\n\t\t\tcircle x, y, SIZE*0.4\r\n\t\t\tfc 0\r\n\t\t\tsc()\r\n\t\t\ttext nr, x, y+4\r\n\tsc()\r\n\tfc 1\r\n\tmsg = ['','Datorn vann!','Remis!','Du vann!'][delta+2]\r\n\ttext msg,width/2,SIZE/2-10\r\n\ttext level,SIZE/2,SIZE/2-10\r\n\t#text UCB,width-50,SIZE/2-10\r\n\r\ncomputerMove = ->\r\n\tif moves.length < 2 \r\n\t\tmontecarlo = new MonteCarlo new Node null,null,board\r\n\telse\r\n\t\thuman = moves[moves.length-1]\r\n\t\tdator = moves[moves.length-2]\r\n\t\tn1 = montecarlo.root.n\r\n\t\tmontecarlo.root = montecarlo.root.children[dator].children[human]\r\n\t\tmontecarlo.root.parent = null\r\n\t\tprint 'Reused',nf(100*montecarlo.root.n/n1,0,1),'% of the tree'\r\n\r\n\tstart = Date.now()\r\n\tresult = montecarlo.runSearch 2**level\r\n\tprint 'ms=',Date.now()-start, 'games='+montecarlo.root.n, 'nodes='+antal\r\n\tprint montecarlo\t\r\n\r\n\t#montecarlo.dump montecarlo.root\r\n\t#print ''\r\n\r\n\tm = montecarlo.bestPlay montecarlo.root\r\n\tmoves.push m\r\n\tboard.move m\r\n\tlist[m].push moves.length\r\n\tif board.done() then return delta = -1\r\n\tif board.moves.length == M*N then delta = 0\t\r\n\r\nmousePressed = ->\r\n\tantal=0\r\n\tif delta != -2 then return newGame()\r\n\tif mouseX<SIZE/2 or mouseX>=width-SIZE/2 or mouseY>=height then return\r\n\tnr = int (mouseX-SIZE/2)/SIZE\r\n\r\n\tif 0 <= nr <= N\r\n\t\tif list[nr].length == M then return\r\n\t\tmoves.push nr\r\n\t\tboard.move nr\r\n\t\tlist[nr].push moves.length\r\n\r\n\tif board.done() then return delta = 1\r\n\r\n\tcomputerMove()\r\n\r\nundo : -> if moves.length > 0 then list[moves.pop()].pop()\r\n\r\n######\r\n\r\n\t# board = new Board '3233224445230330044022166666'\r\n\t# print board\r\n\t# moves = [3, 2, 3, 3, 2, 2, 4, 4, 4, 5, 2, 3, 0, 3, 3, 0, 0, 4, 4, 0, 2, 2, 1, 6, 6, 6, 6, 6]\r\n\t# list = []\r\n\t# list.push [13,16,17,20]\r\n\t# list.push [23]\r\n\t# list.push [2,5,6,11,21,22]\r\n\t# list.push [1,3,4,12,14,15]\r\n\t# list.push [7,8,9,18,19]\r\n\t# list.push [10]\r\n\t# list.push [24,25,26,27,28]\r\n\r\n\t#montecarlo = new MonteCarlo new Node null,null,board\r\n"
  ]
}