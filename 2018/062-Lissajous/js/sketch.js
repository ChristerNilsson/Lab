"use strict";

// Generated by CoffeeScript 2.0.3
var angle, cols, curves, draw, make2DArray, rows, setup, w;

make2DArray = function make2DArray(rows, cols) {
  var arr, i, k, len, ref;
  arr = new Array(rows); //like arr[]; but with number of columns hardcoded
  ref = range(arr.length);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    arr[i] = new Array(cols);
  }
  return arr;
};

angle = 0;

w = 120;

cols = null;

rows = null;

curves = null;

setup = function setup() {
  var i, j, k, len, ref, results;
  createCanvas(windowWidth, windowHeight);
  cols = floor(width / w) - 1;
  rows = floor(height / w) - 1;
  curves = make2DArray(rows, cols);
  ref = range(rows);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    j = ref[k];
    results.push(function () {
      var l, len1, ref1, results1;
      ref1 = range(cols);
      results1 = [];
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        i = ref1[l];
        results1.push(curves[j][i] = new Curve());
      }
      return results1;
    }());
  }
  return results;
};

draw = function draw() {
  var cx, cy, d, i, j, k, l, len, len1, len2, len3, len4, len5, len6, len7, m, n, o, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, s, x, y;
  background(0);
  d = w - 0.2 * w;
  r = d / 2;
  noFill();
  stroke(255);
  ref = range(cols);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    cx = w + i * w + w / 2;
    cy = w / 2;
    strokeWeight(1);
    stroke(255);
    circle(cx, cy, r);
    x = r * cos(angle * (i + 1) - HALF_PI);
    y = r * sin(angle * (i + 1) - HALF_PI);
    strokeWeight(8);
    stroke(255);
    point(cx + x, cy + y);
    stroke(255, 150);
    strokeWeight(1);
    line(cx + x, 0, cx + x, height);
    ref1 = range(rows);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      j = ref1[l];
      curves[j][i].x = cx + x;
    }
  }
  noFill();
  stroke(255);
  ref2 = range(rows);
  for (m = 0, len2 = ref2.length; m < len2; m++) {
    j = ref2[m];
    cx = w / 2;
    cy = w + j * w + w / 2;
    strokeWeight(1);
    stroke(255);
    circle(cx, cy, r);
    x = r * cos(angle * (j + 1) - HALF_PI);
    y = r * sin(angle * (j + 1) - HALF_PI);
    strokeWeight(8);
    stroke(255);
    point(cx + x, cy + y);
    stroke(255, 150);
    strokeWeight(1);
    line(0, cy + y, width, cy + y);
    ref3 = range(cols);
    for (n = 0, len3 = ref3.length; n < len3; n++) {
      i = ref3[n];
      curves[j][i].y = cy + y;
    }
  }
  ref4 = range(rows);
  for (o = 0, len4 = ref4.length; o < len4; o++) {
    j = ref4[o];
    ref5 = range(cols);
    for (p = 0, len5 = ref5.length; p < len5; p++) {
      i = ref5[p];
      curves[j][i].addPoint();
      curves[j][i].show();
    }
  }
  angle -= 0.01;
  if (angle < -TWO_PI) {
    ref6 = range(rows);
    for (q = 0, len6 = ref6.length; q < len6; q++) {
      j = ref6[q];
      ref7 = range(cols);
      for (s = 0, len7 = ref7.length; s < len7; s++) {
        i = ref7[s];
        curves[j][i].reset();
      }
    }
    // saveFrame("lissajous#####.png");
    return angle = 0;
  }
};
//# sourceMappingURL=sketch.js.map
