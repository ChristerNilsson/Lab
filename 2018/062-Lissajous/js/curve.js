"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Generated by CoffeeScript 2.0.3
var Curve;

Curve = function () {
  function Curve() {
    _classCallCheck(this, Curve);

    this.path = [];
    this.x = 0;
    this.y = 0;
  }

  _createClass(Curve, [{
    key: "addPoint",
    value: function addPoint() {
      return this.path.push(createVector(this.x, this.y));
    }
  }, {
    key: "reset",
    value: function reset() {
      return this.path = [];
    }
  }, {
    key: "show",
    value: function show() {
      var i, len, ref, v;
      stroke(255);
      strokeWeight(1);
      noFill();
      beginShape();
      ref = this.path;
      for (i = 0, len = ref.length; i < len; i++) {
        v = ref[i];
        vertex(v.x, v.y);
      }
      endShape();
      strokeWeight(8);
      return point(this.x, this.y);
    }
  }]);

  return Curve;
}();
//# sourceMappingURL=curve.js.map
