{
  "version": 3,
  "file": "p5dojo.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\p5dojo.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# todo: Code Mirror hanterar inte toggleComment via Ctrl+/\r\n\r\n# if the renew button is available, a new version of the b code is available.\r\n# Clicking renew prints the current b code on the console as a backup.\r\n\r\nmyCodeMirror = null\r\nmsg = null\r\n\r\nkwl = {}\r\nkwlinks = []\r\n\r\ngap = 0\r\nblock = 0\r\nbuffer = [[],[],[]]\r\n\r\nmeny = null\r\n\r\nsetMsg = (e,nr) ->\r\n\tif e == ''\r\n\t\tmsg.val \"\"\r\n\t\tmsg.hide()\r\n\telse\r\n\t\ts = e.toString()\r\n\t\tp = s.indexOf ':'\r\n\t\ts = s.substr p+1 if p!=-1\r\n\r\n\t\ts = s.replace /\\t/g,'  '\r\n\r\n\t\tmsg.val s + ' (' + e.name + ')' + if nr==1 then \" (in A)\" else \"\"\r\n\t\tmsg.show()\r\n\tmsg.css 'background-color', if e == '' then '#FFFFFF' else '#FF0000'\r\n\r\ngrid = ->\r\n\tpush()\r\n\tbg 0.25\r\n\tsc 0.5\r\n\tfor i in range 11\r\n\t\tline 0, 20 * i, 200, 20 * i\r\n\t\tline 20 * i, 0, 20 * i, 200\r\n\tpop()\r\n\r\nmyprint = -> print Array.prototype.slice.call(arguments).join(\" \")\r\n\r\nco = -> fixColor arguments\r\n\r\nip = (y1,y2,x,x1,x2) ->\r\n\tif arguments.length == 3\r\n\t\tx1=0\r\n\t\tx2=9\r\n\tmap x,x1,x2,y1,y2\r\n\r\nfixColor = (args) ->\r\n\tn = args.length\r\n\tr=0\r\n\tg=0\r\n\tb=0\r\n\ta=1\r\n\tif n == 1\r\n\t\tr = args[0]\r\n\t\tg = r\r\n\t\tb = r\r\n\telse if n == 3\r\n\t\tr = args[0]\r\n\t\tg = args[1]\r\n\t\tb = args[2]\r\n\telse if n == 4\r\n\t\tr = args[0]\r\n\t\tg = args[1]\r\n\t\tb = args[2]\r\n\t\ta = args[3]\r\n\tcolor 255 * r, 255 * g, 255 * b, 255 * a\r\n\r\nbg = -> background fixColor arguments\r\n\r\nfc = ->\r\n\tn = arguments.length\r\n\tif n == 0\r\n\t\tnoFill()\r\n\telse\r\n\t\tfill fixColor arguments\r\n\r\nsc = ->\r\n\tn = arguments.length\r\n\tif n == 0\r\n\t\tnoStroke()\r\n\telse\r\n\t\tstroke fixColor arguments\r\n\r\n#b g c = (cc) -> bg cc%2, int(cc/2)%2, int(cc/4)\r\n#f c c = (cc) -> fc cc%2, int(cc/2)%2, int(cc/4)\r\n#s c c = (cc) -> sc cc%2, int(cc/2)%2, int(cc/4)\r\n#t c c = (cc) -> f c c [7,7,0,0,7,0,0,0][cc]\r\n\r\ncc = (n) -> # https://github.com/jonasjacek/colors with modifications\r\n\thelper = (n,big) -> [n%2*big, int(n/2)%2*big, int(n/4)*big]\r\n\tif n<8 then helper n,255\r\n\telse if n==8 then [192,192,192]\r\n\telse if n<16 then helper n-8,128\r\n\telse if n==16 then [64,64,64]\r\n\telse if n<232\r\n\t\tn-=16\r\n\t\tr=n%6; n//=6\r\n\t\tg=n%6; n//=6\r\n\t\tb=n\r\n\t\tlst = [0,95,135,175,215,255]\r\n\t\t[lst[r],lst[g],lst[b]]\r\n\telse\r\n\t\tn-=232\r\n\t\tz = lerp 8,18,n\r\n\t\t[z,z,z]\r\n\r\ncct = (n) -> # makes text visible\r\n\t[r,g,b] = cc n\r\n\tif r+g+b >= 3*128 then [0,0,0] else [255,255,255]\r\n\r\nsw = (n) -> strokeWeight n\r\n\r\ncircle = (x,y,r) -> ellipse x,y,2*r,2*r\r\nrd = (vinkel) -> rotate radians vinkel\r\nrange = _.range\r\n\r\nfillSelect = (sel, dict) ->\r\n\tsel.empty()\r\n\tfor key of dict\r\n\t\tsel.append($(\"<option>\").attr('value', key).text(key))\r\n\r\nbuildLink = (keyword) ->\r\n\tif keyword.indexOf('_.')==0 then keyword = keyword.replace('_.','')\r\n\tnr = kwl[keyword]\r\n\tif nr == undefined then return\r\n\tif nr==0 then keyword = keyword.toLowerCase()\r\n\tif nr==null\r\n\t\tnull\r\n\telse\r\n\t\tkeyword = keyword.replace('[]','array')\r\n\t\tkeyword = keyword.replace('\"\"','string')\r\n\t\tkeyword = keyword.replace('{}','object')\r\n\t\tkeyword = keyword.replace('->','pil')\r\n\t\tkeyword = keyword.replace('@','this')\r\n\t\tkeyword = keyword.replace('...','exclusiverange')\r\n\t\tkeyword = keyword.replace('..','inclusiverange')\r\n\t\tkeyword = keyword.replace('HSB','colorMode')\r\n\t\tkwlinks[nr].replace('{}',keyword)\r\n\r\nbuildKeywordLink = ->\r\n\tkwl = {}\r\n\tkwlinks = []\r\n\tkwlinks.push 'https://github.com/ChristerNilsson/p5Dojo/blob/master/README.md#{}'\r\n\tkwlinks.push 'https://p5js.org/reference/#/p5/{}'\r\n\tkwlinks.push 'https://www.w3schools.com/jsref/jsref_{}.asp'\r\n\tkwlinks.push 'https://github.com/ChristerNilsson/p5Dojo/blob/master/_.md#{}'\r\n\tsave = (index,words) -> kwl[word] = index for word in words.split ' '\r\n\tsave 0,'[] \"\" {} .. ... @ -> class text textSize textAlign textFont operators comparisons logical if bg fc sc sw'\r\n\tsave 0,'range circle for while angleMode readText readInt readFloat'\r\n\tsave 0,'PI sqrt atan2 abs cos sin log10 Date arc rect ellipse point line triangle quad arguments'\r\n\tsave 0,'parseInt parseFloat dist nf constrain int round map lerp radians rotate reduce'\r\n\tsave 1,'rectMode translate scale push pop random millis colorMode HSB strokeCap'\r\n\tsave 2,'break return'\r\n\tsave 3,'contains filter countBy isEqual last max min pairs sortBy findIndex'\r\n\r\nmousePressed = ->\r\n\tif meny.chapter=='' or meny.exercise=='' then return\r\n\tp = null\r\n\tif 0 <= mouseX-5 <= 200 and 0 <= mouseY-5 <= 200 then p = [mouseX-5,mouseY-5]\r\n\tif 0 <= mouseX-5 <= 200 and 0 <= mouseY-210 <= 200 then p = [mouseX-5,mouseY-210]\r\n\tif p\r\n\t\tdict = data[meny.chapter][meny.exercise].c\r\n\t\tif dict?\r\n\t\t\tobjekt = _.keys(dict)[0]\r\n\t\t\tcode = objekt + \".mousePressed(#{p[0]},#{p[1]}); \" + objekt + \".draw(); \" + objekt + \".store()\"\r\n\t\t\tif run1(code) == true\r\n\t\t\t\trun0(code)\r\n\t\t\t\tcompare()\r\n\r\ndecorate = (dict) -> # {klocka: \"draw|incr_hour\"}\r\n\tif dict==undefined then return {}\r\n\tif dict==null then return {}\r\n\tres = {}\r\n\tfor objekt, s of dict\r\n\t\tmethods = s.split \"|\"\r\n\t\tres[\"draw()\"] = objekt + \".draw(); \" + objekt + \".store()\"\r\n\t\tres[method] = objekt + \".\" + method + \"; \" + objekt + \".draw(); \" + objekt + \".store()\" for method in methods\r\n\tres\r\n\r\nchangeLayout = ->\r\n\tw = $(window).width()\r\n\t$(\".CodeMirror\").width w-425\r\n\t$(\"#canvas\").css {top: 0, left: 205, position:'absolute'}\r\n\t$(\"#msg\").width w-430\r\n\t$(\"#input\").width w-218\r\n\r\nresizeTimer = 0\r\n$(window).resize ->\r\n\t\tclearTimeout resizeTimer\r\n\t\tresizeTimer = setTimeout changeLayout, 10\r\n\r\nupdateTables = ->\r\n\tmeny.rensa()\r\n\tmeny.traverse()\r\n\r\nsetup = ->\r\n\r\n\tmeny = new Menu data, document.getElementById \"meny\"\r\n\tupdateTables()\r\n\r\n\ttimestamp = millis()\r\n\tc = createCanvas 5+201+5, 3*201+20\r\n\r\n\tbuildKeywordLink()\r\n\r\n\tgap = 5 * width * 4\r\n\tblock = 201 * width * 4\r\n\r\n\tpixelDensity 1\r\n\tc.parent 'canvas'\r\n\r\n\tmsg = $('#msg')\r\n\r\nwindow.onbeforeunload = ->\r\n\treturn if document.URL.indexOf(\"record\") == -1\r\n\tres = []\r\n\tfor key1,chapter of data\r\n\t\tfor key2,exercise of chapter\r\n\t\t\tif exercise.d\r\n\t\t\t\tres.push \"### #{key1} ### #{key2}\\n\"\r\n\t\t\t\tfor s,i in exercise.d\r\n\t\t\t\t\tres.push \"=== #{i}\\n\"\r\n\t\t\t\t\tres.push s+\"\\n\"\r\n\tblob = new Blob res, {type: \"text/plain;charset=utf-8\"}\r\n\tsaveAs blob, \"recording.txt\"\r\n\ttrue\r\n\r\nwindow.onload = ->\r\n\r\n\tta = document.getElementById \"code\"\r\n\r\n\tmyCodeMirror = CodeMirror.fromTextArea document.getElementById(\"code\"), {\r\n\t\tlineNumbers: true,\r\n\t\tmode: \"coffeescript\",\r\n\t\tkeyMap: \"sublime\",\r\n\t\ttheme: \"dracula\",\r\n\t\tautoCloseBrackets: true,\r\n\t\tlineWiseCopyCut: true,\r\n\t\ttabSize: 2,\r\n\t\tindentWithTabs: true,\r\n\t\tmatchBrackets : true,\r\n\t}\r\n\r\n\t$(\".CodeMirror\").css 'font-size',\"16pt\"\r\n\tmyCodeMirror.on \"change\", editor_change\r\n\r\n\tmeny.chapter = \"\"\r\n\tmeny.exercise = \"\"\r\n\r\n\tmyCodeMirror.setValue '# Klicka först på L1:\\n# Klicka därefter på Background1'\r\n\r\n\tmyCodeMirror.focus()\r\n\twindow.resizeTo 1000,750\r\n\tchangeLayout()\r\n\tmeny.setState 0\r\n\r\nsaveToKeyStorage = (b) ->\r\n\ts = \"\"\r\n\tfor line in b.split '\\n'\r\n\t\tif line.indexOf(\"#\") != 0\r\n\t\t\ts += line\r\n\tplace = data[meny.chapter][meny.exercise]\r\n\tif !place.d\r\n\t\tplace.d = []\r\n\tplace.d.push s\r\n\r\neditor_change = ->\r\n\treset()\r\n\tif meny.exercise=='' then return\r\n\tif 0 == _.size meny.calls\r\n\t\tcode = \"\"\r\n\telse # transpile, draw\r\n\t\tcode = meny.calls[\"draw()\"]\r\n\r\n\tdce = data[meny.chapter][meny.exercise]\r\n\tif dce and dce.a and _.size(dce.a.c) > 0\r\n\t\tif false == run1 code then return # bör normalt vara true\r\n\tres = run0 code\r\n\r\n\t#if res # spara källkod EFTER exekvering\r\n\tsaveSourceCode()\r\n\tcompare()\r\n\r\nsaveSourceCode = ->\tlocalStorage[meny.exercise + \"/d\"] = myCodeMirror.getValue()\r\n\r\nrun0 = (code) ->\r\n\tif meny.exercise==\"\" then return false\r\n\tsrc = myCodeMirror.getValue()\r\n\trun 0, src + \"\\n\" + code\r\n\r\nrun1 = (code) ->\r\n\tif meny.exercise==\"\" then return\r\n\trun 1, data[meny.chapter][meny.exercise].a + \"\\n\" + code\r\n\r\nreset = ->\r\n\tresetMatrix()\r\n\tcolorMode RGB,255\r\n\tangleMode RADIANS\r\n\trectMode CORNER\r\n\tstrokeCap ROUND\r\n\ttextAlign LEFT,BASELINE\r\n\tsmooth() # pga SuperCircle\r\n\tbg 0\r\n\tfc 0\r\n\tsc 1\r\n\tsw 1\r\n\r\nrun = (_n, coffee) ->\r\n\treset()\r\n\tpush()\r\n\ttranslate 5,5\r\n\tgrid()\r\n\r\n\tsetMsg \"\", _n\r\n\r\n\tif meny.exercise == \"\" \r\n\t\tpop()\r\n\t\treturn true\r\n\r\n\ttry\r\n\t\tcode = transpile coffee\r\n\r\n\t\ttry\r\n\t\t\teval code\r\n\t\t\tbuffer[1-_n] = store()\r\n\t\t\tpop()\r\n\t\t\treturn true\r\n\t\tcatch e\r\n\t\t\tsetMsg e, _n\r\n\t\t\tpop()\r\n\t\t\treturn false\r\n\tcatch e\r\n\t\tsetMsg e, _n\r\n\t\tpop()\r\n\t\treturn false\r\n\r\nstore = ->\r\n\tloadPixels()\r\n\tpixels[gap...gap + block]\r\n\r\nfetch = (buffer,y0) ->\r\n\tloadPixels()\r\n\tfor i in range block\r\n\t\tpixels[gap + (gap+block)*y0 + i] = buffer[i]\r\n\tupdatePixels()\r\n\r\nfix_frames = ->\r\n\tloadPixels()\r\n\tfor k in range 4\r\n\t\tfor i in range gap\r\n\t\t\tpixels[(gap+block)*k+i] = 128-64\r\n\tfor j in range height # 3*201+20\r\n\t\tfor i in range 20\r\n\t\t\tpixels[j*width*4+i] = 128-64\r\n\t\t\tpixels[j*width*4+206*4+i] = 128-64\r\n\tupdatePixels()\r\n\r\ncompare = ->  # Lägg en timer på denna. Bör vänta någon sekund\r\n\ta = buffer[0]\r\n\tb = buffer[1]\r\n\tc = a[..]\r\n\r\n\tif msg.val() == ''\r\n\t\tfor i in range block/4\r\n\t\t\ti4 = 4*i\r\n\t\t\tc[i4+0] = abs c[i4+0] - b[i4+0]\r\n\t\t\tc[i4+1] = abs c[i4+1] - b[i4+1]\r\n\t\t\tc[i4+2] = abs c[i4+2] - b[i4+2]\r\n\t\t\tc[i4+3] = 255\r\n\r\n\tfetch a, 0\r\n\tif msg.val() == ''\r\n\t\tfetch b, 1\r\n\t\tfetch c, 2\r\n\tfix_frames()\r\n\r\ntableClear = -> $(\"#tabell tr\").remove()\r\n\r\ntableAppend = (t, call, expected, actual) -> # exakt tre rader\r\n\trow = t.insertRow -1\r\n\tcell1 = row.insertCell -1\r\n\tcell2 = row.insertCell -1\r\n\tcell1.innerHTML = call\r\n\tcell2.innerHTML = JSON.stringify(expected)\r\n\tcell2.style.backgroundColor = '#00FF00'\r\n\r\n\tif _.isEqual(expected, actual) then return\r\n\r\n\trow = t.insertRow -1\r\n\tdummy = row.insertCell -1\r\n\tcell4 = row.insertCell -1\r\n\tcell4.innerHTML = JSON.stringify(actual)\r\n\tcell4.style.backgroundColor = '#FF0000'\r\n\r\n\trow = t.insertRow -1\r\n\tdummy = row.insertCell -1\r\n\tcell6 = row.insertCell -1\r\n\tcell6.innerHTML = firstDiff cell2.innerHTML,cell4.innerHTML\r\n\r\nfirstDiff = (a,b) -> # return index and differing characters\r\n\tres = ''\r\n\tif a==b then return ''\r\n\tfor i in range _.min [a.length,b.length]\r\n\t\tres += if a[i] == b[i] then '·' else '^'\r\n\tres\r\n\r\nfillTable = (a,b) ->\r\n\ttry\r\n\t\ta = JSON.parse localStorage[a]\r\n\t\tb = JSON.parse localStorage[b]\r\n\t\ttableClear()\r\n\t\tkeys = []\r\n\t\tkeys.push key for key,value of a\r\n\t\tkeys.push key for key,value of b\r\n\t\tsort keys\r\n\t\tkeys = _.uniq keys\r\n\r\n\t\tfor key in keys\r\n\t\t\tif key != '_name' and  key != '_type'\r\n\t\t\t\ttableAppend tabell, \"@\" + key,unmark(a[key]),unmark(b[key])\r\n\tcatch\r\n\r\nunmark = (obj) ->\r\n\tif _.isArray(obj) then return\t(unmark item for item in obj) # array\r\n\tif _.isObject obj\r\n\t\tres = {}\r\n\t\tfor key,value of obj\r\n\t\t\tres[key] = unmark(value) # if key != '_type'\r\n\t\treturn res\r\n\tobj"
  ]
}