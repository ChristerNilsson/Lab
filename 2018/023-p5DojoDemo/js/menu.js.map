{
  "version": 3,
  "file": "menu.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\menu.coffee"
  ],
  "names": [],
  "mappings": ";AAAA",
  "sourcesContent": [
    "# LINKS = \r\n# \t\"p5Dojo\"       : \"https://github.com/ChristerNilsson/p5Dojo/blob/master/README.md#p5dojo\"\r\n# \t\"p5Color\"      : \"https://christernilsson.github.io/p5Color\"\r\n# \t\"Links\" \t\t\t : \"https://christernilsson.github.io/Lab\"\r\n\r\n# class Menu\r\n# \tconstructor : (@items, @table=null, @branch=[]) ->\r\n# \t\t@state = 0\r\n# \t\t@chapter = ''\r\n# \t\t@exercise = ''\r\n# \t\t@calls = {}\r\n# \trensa : -> @table.innerHTML = \"\"\r\n# \tclear : -> @branch = []\r\n\r\n# \ttraverse : (items=@items, level=0, br=[]) ->\r\n# \t\tif false == goDeeper @branch,br then return\r\n\r\n# \t\tif level == 0 # chapter\r\n# \t\t\tfor key,i in _.keys items\r\n# \t\t\t\tif i == @branch[level] or @branch.length == level\r\n# \t\t\t\t\t@addTitle key, level, i, br.concat i\r\n# \t\t\t\tchildren = items[key]\r\n# \t\t\t\t@traverse children, level+1, br.concat i\r\n\r\n# \t\tif level == 1 # exercise\r\n# \t\t\tfor key,i in _.keys items\r\n# \t\t\t\tif i == @branch[level] or @branch.length == level\r\n# \t\t\t\t\t@addTitle key, level, i, br.concat i\r\n# \t\t\t\tkeywords = items[key].k.split ' '\r\n# \t\t\t\tkeywords.sort()\r\n# \t\t\t\t@traverse keywords, level+1, br.concat i\r\n\r\n# \t\tif level == 2 \r\n# \t\t\t# keywords\r\n# \t\t\tfor item in items \r\n# \t\t\t\tif item != '' then @addTitle item, level, i, br\r\n\r\n# \t\t\t# commands\r\n# \t\t\t@calls = decorate data[@chapter][@exercise].c\r\n# \t\t\tfor key of @calls\r\n# \t\t\t\tif key != 'draw()' then @addCommand key, level, BLUE, YELLOW\r\n\r\n# \t\t\t# renew\r\n# \t\t\tif localStorage[@exercise + \"/v\"]? and localStorage[@exercise + \"/v\"] != data[@chapter][@exercise].v\r\n# \t\t\t\tb = @addCommand \"Renew\", level, RED, WHITE\r\n# \t\t\t\tb.onclick = ->\r\n# \t\t\t\t\tprint myCodeMirror.getValue() # Låt stå!\r\n# \t\t\t\t\texercise = data[meny.chapter][meny.exercise]\r\n# \t\t\t\t\tmyCodeMirror.setValue exercise.b\r\n# \t\t\t\t\tlocalStorage[meny.exercise + \"/\" + 'v'] = exercise.v\r\n# \t\t\t\t\tlocalStorage[meny.exercise + \"/\" + 'd'] = exercise.b\r\n\r\n# \t\t\t# links\r\n# \t\t\tif @exercise != ''\r\n# \t\t\t\tfor text,link of data[@chapter][@exercise].e\r\n# \t\t\t\t\tb = @addCommand text, level, GREEN, BLACK\r\n# \t\t\t\t\tdo (link) -> b.onclick = -> window.open(link, '_blank').focus()\r\n# \t\t\t\tfor text,link of LINKS \r\n# \t\t\t\t\tb = @addCommand text, 0, DARKGREEN, WHITE\r\n# \t\t\t\t\tdo (link) -> b.onclick = -> window.open(link, '_blank').focus()\r\n\r\n# \thandleRow : (b) ->\r\n# \t\ttr = document.createElement \"tr\"\r\n# \t\taddCell tr,b,100\r\n# \t\t@table.appendChild tr\r\n\r\n# \tlineCount : -> data[@chapter][@exercise].l\r\n\r\n# \taddTitle : (title,level,i,br) ->\r\n# \t\tif level == 2 then b = makeButton title, level, BLACK, YELLOW\r\n# \t\telse if @branch[level] == i \r\n# \t\t\tif level==1 then b = makeButton \"#{title} [#{@lineCount()}]\", level, WHITE, BLACK\r\n# \t\t\telse b = makeButton title, level, WHITE, BLACK\r\n# \t\telse if @branch[level] == i then b = makeButton title, level, WHITE, BLACK\r\n# \t\telse b = makeButton title, level, BLACK, WHITE\r\n# \t\tb.branch = br\r\n\r\n# \t\tb.onclick = => \r\n# \t\t\tif level == 0 then @sel1click b.value\r\n# \t\t\tif level == 1 \r\n# \t\t\t\tif b.style.backgroundColor == 'rgb(255, 255, 255)'\r\n# \t\t\t\t\t@sel2click \"\"\r\n# \t\t\t\telse\r\n# \t\t\t\t\t@sel2click b.value\t\t\t\t\r\n# \t\t\tif level == 2 then @sel3click b.value\r\n# \t\t\tif level in [0,1] then @branch = calcBranch @branch, b.branch\r\n# \t\t\tupdateTables()\r\n\r\n# \t\t@handleRow b\r\n# \t\tb\r\n\r\n# \taddCommand : (title,level,color1, color2) ->\r\n# \t\tb = makeButton title, level, color1, color2\r\n# \t\tcode = @calls[title]\r\n# \t\tb.onclick = -> \r\n# \t\t\tif run1(code) == true\r\n# \t\t\t\trun0 code\r\n# \t\t\tcompare()\r\n# \t\t@handleRow b\r\n# \t\tb\r\n\r\n# \tsetState : (st) ->\r\n# \t\t@state = st\r\n\r\n# \t\t#if st==2 then @calls = data[@chapter][@exercise].c else @calls = {}\r\n# \t\t$('#input').hide()\r\n# \t\tif _.size(@calls) > 0 then $('#input').show() \r\n# \t\tif st==2 then msg.show() else msg.hide()\r\n# \t\tif st==2 then $(\".CodeMirror\").show() else $(\".CodeMirror\").hide()\r\n\r\n# \t\tif st<=1\r\n# \t\t\t@calls = {}\r\n# \t\t\ttableClear()\r\n# \t\t\tbg 0.5\r\n\r\n# \t\tif st==1 then\t@exercise = \"\"\r\n\r\n# \tsel1click : (chapter) ->\r\n# \t\t@chapter = chapter\r\n# \t\t@exercise = \"\"\r\n# \t\t@calls = {}\r\n# \t\t@setState 1\r\n\r\n# \tsel2click : (exercise) ->\r\n# \t\t@exercise = exercise\r\n# \t\tif @exercise == \"\"\r\n# \t\t\tmyCodeMirror.setValue \"\"\r\n# \t\t\tbg 0.5\r\n# \t\t\treturn\r\n# \t\t@calls = data[@chapter][@exercise].c\r\n# \t\t@setState 2\r\n\r\n# \t\tsrc = localStorage[@exercise + \"/d\"]\r\n# \t\tif src == undefined or src == null or src == ''\r\n# \t\t\tsrc = data[@chapter][@exercise].b\r\n# \t\t\tlocalStorage[@exercise + \"/d\"] = src\r\n# \t\t\tlocalStorage[@exercise + \"/v\"] = data[@chapter][@exercise].v\r\n# \t\tmyCodeMirror.setValue src\r\n\r\n# \t\ttableClear()\r\n\r\n# \t\tcalls = data[@chapter][@exercise].c\t\t\r\n# \t\tif _.size(calls) > 0 \r\n# \t\t\tcode = @calls[\"draw()\"]\r\n# \t\tif run1(code) == true\r\n# \t\t\trun0 code \r\n\r\n# \t\tmyCodeMirror.focus()\r\n# \t\tcompare()\r\n\r\n# \tsel3click : (keyword) ->\r\n# \t\turl = buildLink keyword\r\n# \t\tif url?\r\n# \t\t\twin = window.open url, '_blank'\r\n# \t\t\twin.focus()\r\n# \t"
  ]
}