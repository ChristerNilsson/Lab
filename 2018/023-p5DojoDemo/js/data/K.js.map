{
  "version": 3,
  "file": "K.js",
  "sourceRoot": "..\\..",
  "sources": [
    "coffee\\data\\K.coffee"
  ],
  "names": [],
  "mappings": ";;;AAAA,IAAA,eAAA,WAAA,SAAA;;AAAA;AACC,KAAA,AAAE;AACF,KADA,AACE;AACF,KAFA,AAEE;AACF,KAHA,AAGE;AAmBF,KAtBA,AAsBE;AAqDF;AACC,SA5ED,AA4EC,AAAM;AAAN;AACD;AACC,cAAA,AAAW;AACX,WADA,AACQ;AACR,WAFA,AAEQ;AACR,6BAHA,AAG0B;AAC1B,SAJA,AAIM;AACN,aALA,AAKU;AACV,mBApFD,AA8EC,AAMgB;AANhB;AA9ED;;AAsFD;AACC,KAAA,AAAE;AACF,KADA,AACE;AACF,KAFA,AAEE;AACF,KAHA,AAGG;AAWH,KAdA,AAcG;AAsDH;AACC,SArED,AAqEC,AAAM;AAAN;AArED;;AAuED;AACC,KAAA,AAAE;AACF,KADA,AACE;AACF,KAFA,AAEE;AACF,KAHA,AAGE;AAWF,KAdA,AAcG;AAiCH;AACC,SAhDD,AAgDC,AAAM;AAAN;AAhDD;;AAkDD;AACC,KAAA,AAAE;AACF,KADA,AACE;AACF,KAFA,AAEE;AACF,KAHA,AAGG;AAUH,KAbA,AAaE;AA+BF;AACC,SA7CD,AA6CC,AAAM;AAAN;AA7CD",
  "sourcesContent": [
    "ID_Kalkylator =\n\tv:'2017-04-29'\n\tk:'bg sc fc range readText operators {} [] text for sqrt PI parseFloat \"\" class'\n\tl:46\n\tb:\"\"\"\n# TIPS! Börja med de fyra räknesätten.\n#       @words ska kunna utökas med \":\". T ex \": sq dup *\"\n#       Definiera t ex invers, distans och parallella motstånd\n\nclass Kalkylator extends Application\n\treset : ->\n\t\tsuper\n\tdraw  : ->\n\tchs   : -> # ( n -- n )\n\tswap  : -> # ( a b -- b a )\n\tdrop  : -> # ( n -- )\n\tdup   : -> # ( n -- n n )\n\tsqrt  : -> # ( n -- n )\n\tclr   : -> # ( a b -- )\n\tpi    : -> # ( -- n)\n\tenter : -> # inmatning från textrutan under kommandolistan.\napp = new Kalkylator\n\"\"\"\n\ta:\"\"\"\nclass Kalkylator extends Application\n\treset : ->\n\t\tsuper\n\t\t@stack = [0,1,2,3]\n\t\t@words = {\"sq\":[\"dup\",\"*\"]}\n\tdraw : ->\n\t\tbg 0\n\t\tsc()\n\t\ttextSize 32\n\t\ttextAlign RIGHT, BOTTOM\n\t\tfc 1,0,0\n\t\tfor value,i in _.first @stack,5\n\t\t\ts = \"\" + value\n\t\t\ttext s[0..9],190, 200 - i*40\n\n\tshift : -> @stack.shift()\n\tover : -> @stack.splice(1,1)[0]\n\tunshift : (item) -> @stack.unshift item\n\tchs : -> @unshift -@shift()\n\tswap : -> [@stack[0],@stack[1]] = [@stack[1],@stack[0]]\n\tdrop : -> @shift()\n\tdup : -> @unshift @stack[0]\n\tsqrt : -> @unshift Math.sqrt @shift()\n\tclr : -> @stack = []\n\tpi : -> @unshift Math.PI\n\n\texecute : (arr) ->\n\t\tfor cmd in arr\n\t\t\tif cmd==\"\" then continue\n\t\t\tif cmd=='+' then @unshift @shift() + @shift()\n\t\t\telse if cmd=='*' then @unshift @shift() * @shift()\n\t\t\telse if cmd=='/' then @unshift @over() / @shift()\n\t\t\telse if cmd=='-' then @unshift @over() - @shift()\n\t\t\telse if cmd=='chs' then @chs()\n\t\t\telse if cmd=='swap' then @swap()\n\t\t\telse if cmd=='drop' then @drop()\n\t\t\telse if cmd=='dup' then @dup()\n\t\t\telse if cmd=='sqrt' then @sqrt()\n\t\t\telse if cmd=='clr' then @clr()\n\t\t\telse if cmd=='pi' then @pi()\n\t\t\telse if cmd of @words then @execute @words[cmd]\n\t\t\telse @stack.unshift eval cmd\n\n\tenter : ->\n\t\tcommands = @readText()\n\t\tif commands==\"\" then return\n\t\tarr = commands.split ' '\n\t\tif arr[0]==':' then @words[arr[1]] = arr[2..]\n\t\telse @execute arr\n\napp = new Kalkylator \"a\"\n\"\"\"\n\tc:\n\t\tapp : \"reset()|chs()|swap()|drop()|dup()|sqrt()|clr()|pi()|enter()\"\n\te:\n\t\tparseInt : \"https://www.w3schools.com/jsref/jsref_parseint.asp\"\n\t\tstack : \"https://sv.wikipedia.org/wiki/Stack_(datastruktur)\"\n\t\tsplit : \"https://coffeescript-cookbook.github.io/chapters/strings/splitting-a-string\"\n\t\t\"Omvänd Polsk Notation\" : \"https://sv.wikipedia.org/wiki/Omv%C3%A4nd_polsk_notation\"\n\t\tRPN : \"https://en.wikipedia.org/wiki/Reverse_Polish_notation\"\n\t\t\"HP-35\" : \"https://neil.fraser.name/software/hp-35\"\n\t\t\"Forth Haiku\" : \"http://forthsalon.appspot.com/word-list\"\n\nID_Klocka =\n\tv:'2017-09-30'\n\tk:'fc sc circle range angleMode rotate point rect rectMode for if translate push pop class Date'\n\tl:49\n\tb: \"\"\"\nclass Klocka extends Application\n\treset  : ->\n\t\tsuper\n\tdraw   : ->\n\thour   : (h) ->\n\tminute : (m) ->\n\tsecond : (s) ->\n\tnow \t : ->\napp = new Klocka\n\t\t\t\"\"\"\n\ta: \"\"\"\nclass Klocka extends Application\n\treset : ->\n\t\tsuper\n\t\t@h=10\n\t\t@m=9\n\t\t@s=30\n\tdraw : ->\n\t\tbg 0.5\n\t\trectMode CENTER\n\t\tangleMode DEGREES\n\t\ttranslate 100,100\n\t\t@urtavla()\n\t\t@visare (@h+@m/60.0)*30, 7,60,1,0,0\n\t\t@visare (@m+@s/60.0)*6,5,80,0,1,0\n\t\t@visare @s*6,2,80,1,1,0\n\thour   : (h) -> @adjust h,0,0\n\tminute : (m) -> @adjust 0,m,0\n\tsecond : (s) -> @adjust 0,0,s\n\tnow    : ->\n\t\td = new Date()\n\t\t@h = d.getHours()\n\t\t@m = d.getMinutes()\n\t\t@s = d.getSeconds()\n\tadjust : (h,m,s) ->\n\t\t@h+=h\n\t\t@m+=m\n\t\t@s+=s\n\t\tt = 3600 * @h + 60 * @m + @s\n\t\t@s = t %% 60\n\t\tt = (t - @s) / 60\n\t\t@m = t %% 60\n\t\tt = (t - @m) / 60\n\t\t@h = t %% 24\n\tvisare : (v,w,l,r,g,b) ->\n\t\tpush()\n\t\trotate v-90\n\t\ttranslate l/2,0\n\t\tfc r,g,b\n\t\trect 0,0,l,w\n\t\tpop()\n\turtavla : ->\n\t\tfc 0\n\t\tsc 1\n\t\tsw 2\n\t\tcircle 0,0,90\n\t\tfc 1\n\t\tsc()\n\t\tfor i in range 60\n\t\t\tcircle 85,0, if i%5==0 then 3 else 2\n\t\t\trotate 6\n\napp = new Klocka \"a\"\n\"\"\"\n\tc:\n\t\tapp : \"reset()|hour -1|hour +1|minute -1|minute +1|second -1|second +1|now()\"\n\nID_Korg =\n\tv:'2017-04-29'\n\tk:'bg fc sc sw rect for if class'\n\tl:27\n\tb:\"\"\"\nclass Korg extends Application\n\treset   : ->\n\t\tsuper\n\tdraw    : ->\n\tmore    : ->\n\tless    : ->\n\tthinner : ->\n\tthicker : ->\napp = new Korg\n\"\"\"\n\ta: \"\"\"\nclass Korg extends Application\n\treset : ->\n\t\tsuper\n\t\t@n = 1\n\t\t@w = 5\n\n\tdraw : ->\n\t\tc1 = co 1,0,0\n\t\tc2 = co 1,1,0\n\t\tbg 0\n\t\tsw @w\n\t\tfill c1\n\t\tstroke c2\n\t\tq = 2*@n+1\n\t\td = 200.0/q\n\t\tfor i in range @n\n\t\t\trect d+i*2*d,0,d,200\n\t\tfor j in range @n\n\t\t\trect 0,d+j*2*d,200,d\n\t\tfor i in range @n\n\t\t\tfor j in range @n\n\t\t\t\tif (i+j) % 2 == 1\n\t\t\t\t\trect i*2*d,d+j*2*d,3*d,d\n\t\t\t\telse\n\t\t\t\t\trect d+i*2*d,j*2*d,d,3*d\n\tmore : -> @n = constrain @n+1,1,10\n\tless : -> @n = constrain @n-1,1,10\n\tthinner : -> @w = constrain @w-1,0,10\n\tthicker : -> @w = constrain @w+1,0,10\n\napp = new Korg \"a\"\n\"\"\"\n\tc:\n\t\tapp : \"reset()|more()|less()|thinner()|thicker()\"\n\nID_Korsord =\n\tv:'2017-04-29'\n\tk:'bg fc sc readText operators text if for \"\" class []'\n\tl:27\n\tb: \"\"\"\n# Mata in t ex b..l och få ut bill samt boll. Använd variabeln ordlista.\n\nclass Korsord extends Application\n\treset : ->\n\t\tsuper\n\tdraw  : ->\n\tenter : ->\napp = new Korsord\n\"\"\"\n\ta:\"\"\"\nclass Korsord extends Application\n\treset : ->\n\t\tsuper\n\t\t@found = \"\"\n\t\t@pattern = ''\n\tdraw : ->\n\t\tn = 15\n\t\tbg 0\n\t\ttextAlign LEFT,TOP\n\t\ttextSize 12\n\t\tfc 1,1,0\n\t\tsc()\n\t\tfor word,i in @found.split \" \"\n\t\t\tx = int i / n\n\t\t\ty = i % n\n\t\t\ttext word,5+200/4*x,200*y/n\n\tmatch : (word,pattern) ->\n\t\tfor letter,i in pattern\n\t\t\tif letter != '.' and letter != word[i] then\treturn false\n\t\ttrue\n\tenter : ->\n\t\twords = ordlista.split \" \"\n\t\t@pattern = @readText()\n\t\t@found = []\n\t\tfor w in words\n\t\t\tif w.length == @pattern.length and @match w,@pattern then @found.push w\n\t\t@found = @found.join \" \"\n\napp = new Korsord \"a\"\n\"\"\"\n\tc:\n\t\tapp : \"reset()|enter()\"\n\n"
  ]
}