'use strict';

// Generated by CoffeeScript 2.0.3
var ID_Five, ID_ForthHaiku, ID_ForthHaiku3D;

ID_Five = {
  v: '2017-04-29',
  k: 'bg circle fc sc',
  l: 12,
  b: "# LÄXA: Hela uppgiften utom vitt.",
  a: "bg 0.5\nsc()\nfc 1\ncircle 100,100,20\nfc 1,0,0\ncircle 40,40,20\nfc 1,1,0\ncircle 40,160,20\nfc 0,1,0\ncircle 160,160,20\nfc 0,0,1\ncircle 160,40,20"
};

ID_ForthHaiku = {
  v: '2017-04-29',
  k: 'fc range if [] _.last rect for parseFloat class',
  l: 45,
  b: "# Lös först exemplen mha länken nedan!\n\nclass ForthHaiku extends Application\n	reset : ->\n		super\n	resolution : (@n,@size) ->\n	nextExample : ->\n	prevExample : ->\napp = new ForthHaiku",
  a: "class ForthHaiku extends Application\n	draw : ->\n		bg 0.5\n		digit = (bool) -> if bool then 1 else 0\n		stack = []\n		dict = {}\n		dict['x'] = => stack.push x / @n\n		dict['y'] = => stack.push y / @n\n		dict['<'] = -> stack.push(digit stack.pop() > stack.pop())\n		dict['>'] = -> stack.push(digit(stack.pop() < stack.pop()))\n		dict['+'] = -> stack.push stack.pop() + stack.pop()\n		dict['-'] = -> stack.push -stack.pop() + stack.pop()\n		dict['*'] = -> stack.push stack.pop() * stack.pop()\n		dict['sq'] = ->\n			temp = stack.pop()\n			stack.push temp * temp\n		dict['%'] = ->\n			a = stack.pop()\n			b = stack.pop()\n			stack.push b % a\n		dict['floor'] = -> stack.push floor stack.pop()\n		dict['and'] = -> #  pga kortslutning\n			a = stack.pop() != 0\n			b = stack.pop() != 0\n			stack.push digit a and b\n		arr = @example.split ' '\n		sc()\n		for x in range @n\n		  for y in range @n\n		    stack = []\n		    for cmd in arr\n		      if dict[cmd] then dict[cmd]()\n		      else stack.push parseFloat cmd\n		    stack.push 0 for i in range 3-stack.length\n		    fc stack[0], stack[1], stack[2]\n		    rect @size * x, @size * y, @size, @size\n	reset : ->\n		super\n		@resolution()\n		@select 0\n	resolution : (@n=10,@size=20) ->\n	nextExample : -> @select @index+1\n	prevExample : -> @select @index-1\n	select : (n) ->\n		examples = '1|1 1|0 1|0.25 0.25 0.25|1 1 1|x|x y|x y >|x 0.5 >|x 0.5 - sq y 0.5 - sq + 0.25 <|x 8 * floor y 8 * floor + 2 %|x 0.5 < y 0.5 <|x 0.5 < y 0.5 < and'\n		examples = examples.split '|'\n		@index = constrain n,0,examples.length-1\n		@example = examples[@index]\n\napp = new ForthHaiku \"a\"",
  c: {
    app: "reset()|resolution 10,20|resolution 20,10|resolution 50,4|resolution 100,2|resolution 200,1|nextExample()|prevExample()"
  },
  e: {
    "ForthHaiku": "http://forthsalon.appspot.com"
  }
};

ID_ForthHaiku3D = {
  v: '2017-05-30',
  k: 'bg sc fc range for if quad line operators class []',
  l: 138,
  b: "# Stack-1 : < > == <= >= != + - * / // % %% and or xor & | ^ bit\n# Stack   : abs not swp rot ~ biti bitj bitk\n# Stack+1 : i j k t dup bitij bitik bitjk\n# Stack+2 : bitijk\n\n# false      <=> 0\n#  true      <=> 1\n# i b bit    <=> b >> i & 1\n# b biti     <=> b >> i & 1\n# b bitij    <=> i b bit j b bit\n# b bitijk   <=> i b bit j b bit k b bit\n# Exempel: t 10 % k ==\n\nclass ForthHaiku3D extends Application\n	reset : (n,dx,dy)->\n		super\n	draw : ->\n	enter : ->\n	tick : ->\n	mousePressed : ->\napp = new ForthHaiku3D",
  a: "class ForthHaiku3D extends Application\n	reset : (n,dx,dy)->\n		super\n		@SHADE = [0.5,0.75,1]\n		@N = n\n		@DX = dx\n		@DY = dy\n		@showGrid = true\n		@clear()\n		@t = 0\n	clear : -> @blocks = Array(@N*@N*@N).fill 0\n	add : (i,j,k) -> @blocks[@N*@N*k+@N*j+i] = 1\n	draw : ->\n		bg 0.5\n		if @showGrid then @grid()\n		sc()\n		@drawBlock index for index in range @N*@N*@N\n	drawBlock : (index) ->\n		f = (i,j,k) => [100+(@N-i)*2*@DY-2*(@N-j)*@DY, 200-(@N-j)*@DY-(@N-i)*@DY - k*2*@DY]\n		q = (a,b,c,d) -> quad a[0],a[1], b[0],b[1], c[0],c[1], d[0],d[1]\n		ix=index\n		i = ix % @N; ix //= @N\n		j = ix % @N; ix //= @N\n		k = ix\n		block = @blocks[index]\n		if not block? or block==0 then return\n		[r,g,b] = [i/(@N-1),j/(@N-1),k/(@N-1)] # borde vara i,j,k\n		p0 = f i,  j,  k # egentligen osynlig\n		p1 = f i+1,j,  k\n		p2 = f i,  j+1,k\n		p3 = f i+1,j+1,k\n		p4 = f i  ,j,  k+1\n		p5 = f i+1,j,  k+1\n		p6 = f i  ,j+1,k+1\n		p7 = f i+1,j+1,k+1\n		[si,sj,sk] = @SHADE\n		fc r*sj,g*sj,b*sj\n		q p2,p6,p7,p3 # left\n		fc r*si,g*si,b*si\n		q p1,p3,p7,p5 # right\n		fc r*sk,g*sk,b*sk\n		q p4,p5,p7,p6 # roof\n	grid : ->\n		sc 0.75\n		[h2,h3,h4] = [200-2*@N*@DY, 200-@N*@DY, 200]\n		[w2,w3,w4] = [100-@N*@DX,   100,        100+@N*@DX]\n		for i in range @N+1\n			line w3+@DX*i, h4-@DY*i, w2+@DX*i, h3-@DY*i\n			line w2+@DX*i, h3+@DY*i, w3+@DX*i, h2+@DY*i\n	mousePressed : ->\n		@showGrid = not @showGrid\n		@enter()\n	tick : ->\n		@t = @t + 1\n		@enter()\n	enter : ->\n		digit = (bool) -> if bool then 1 else 0\n		@clear()\n		s = @readText().trim()\n		if s=='' then s='k t ' + @N + ' % =='\n		arr = s.split ' '\n		@words = arr.length\n		@trace = ''\n		@count = 0\n		for i in range @N\n			for j in range @N\n				for k in range @N\n					stack = []\n					for cmd in arr\n						if cmd == 'dup' then stack.push _.last stack\n						else if cmd == 'swp'\n							n = stack.length - 1\n							[stack[n-1],stack[n]] = [stack[n],stack[n-1]]\n						else if cmd == 'rot' then stack.push stack.shift()\n						else if cmd == 'i'  then stack.push i\n						else if cmd == 'j'  then stack.push j\n						else if cmd == 'k'  then stack.push k\n						else if cmd == 't'  then stack.push @t\n						else if cmd == '<'  then stack.push digit stack.pop() > stack.pop()\n						else if cmd == '>'  then stack.push digit stack.pop() < stack.pop()\n						else if cmd == '==' then stack.push digit stack.pop() == stack.pop()\n						else if cmd == '<=' then stack.push digit stack.pop() >= stack.pop()\n						else if cmd == '>=' then stack.push digit stack.pop() <= stack.pop()\n						else if cmd == '!=' then stack.push digit stack.pop() != stack.pop()\n						else if cmd == '+'  then stack.push stack.pop() + stack.pop()\n						else if cmd == '-'  then stack.push -stack.pop() + stack.pop()\n						else if cmd == '*'  then stack.push stack.pop() * stack.pop()\n						else if cmd == '/'\n							a = stack.pop()\n							stack.push stack.pop() / a\n						else if cmd == '//'\n							a = stack.pop()\n							stack.push stack.pop() // a\n						else if cmd == '%'\n							a = stack.pop()\n							stack.push stack.pop() % a\n						else if cmd == '%%'\n							a = stack.pop()\n							stack.push stack.pop() %% a\n						else if cmd == 'bit' then stack.push stack.pop() >> stack.pop() & 1\n						else if cmd == 'biti' then stack.push stack.pop() >> i & 1\n						else if cmd == 'bitj' then stack.push stack.pop() >> j & 1\n						else if cmd == 'bitk' then stack.push stack.pop() >> k & 1\n						else if cmd == 'bitij'\n							bits = stack.pop()\n							stack = stack.concat [bits >> i & 1, bits >> j & 1]\n						else if cmd == 'bitik'\n							bits = stack.pop()\n							stack = stack.concat [bits >> i & 1, bits >> k & 1]\n						else if cmd == 'bitjk'\n							bits = stack.pop()\n							stack = stack.concat [bits >> j & 1, bits >> k & 1]\n						else if cmd == 'bitijk'\n							bits = stack.pop()\n							stack = stack.concat [bits >> i & 1, bits >> j & 1, bits >> k & 1]\n						else if cmd == '&' then stack.push stack.pop() & stack.pop()\n						else if cmd == '|' then stack.push stack.pop() | stack.pop()\n						else if cmd == '^' then stack.push stack.pop() ^ stack.pop()\n						else if cmd == '~' then stack.push ~stack.pop()\n						else if cmd == 'and'\n							[a,b] = [stack.pop(),stack.pop()]\n							stack.push digit a!=0 and b!=0\n						else if cmd == 'or'\n							[a,b] = [stack.pop(),stack.pop()]\n							stack.push digit a!=0 or b!=0\n						else if cmd == 'xor'\n							a = digit stack.pop() != 0\n							b = digit stack.pop() != 0\n							stack.push digit a+b == 1\n						else if cmd == 'not' then stack.push digit stack.pop() == 0\n						else if cmd == 'abs' then stack.push abs stack.pop()\n						else stack.push parseFloat cmd\n						if i==@N-1 and j==@N-1 and k==@N-1 then @trace += cmd + ' [' + stack.join(',') + '] '\n					if stack.pop() != 0\n						@count++\n						@add i,j,k\n		@trace = @trace.trim()\napp = new ForthHaiku3D \"a\"\n",
  c: {
    app: "reset 2,50,25|reset 10,10,5|reset 17,6,3|enter()|tick()"
  },
  e: {
    ForthHaiku: "http://forthsalon.appspot.com/haiku-editor",
    Exempel: 'ForthHaiku3D.html',
    "Beck & Jung": 'https://www.google.se/search?q=beck+jung&tbm=isch&imgil=fTDB34quIvQVtM%253A%253BujSokE1Q4La-QM%253Bhttp%25253A%25252F%25252Fonline.auktionsverket.se%25252F1111%25252F109534-beck-jung-computer-ink-plot&source=iu&pf=m&fir=fTDB34quIvQVtM%253A%252CujSokE1Q4La-QM%252C_&usg=__eBA4v2Ol5RdVComTBJqPkozH59s%3D&biw=1920&bih=1108&dpr=1&ved=0ahUKEwiH0qmqzInUAhVmDZoKHTcYD7wQyjcIQw&ei=hQsmWcf7EOaa6AS3sLzgCw#imgrc=fTDB34quIvQVtM:'
  }
};
//# sourceMappingURL=F.js.map
