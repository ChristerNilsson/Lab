{
  "version": 3,
  "file": "board.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\board.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "M = 6  # antal rader\r\nN = 7  # antal kolumner\r\nDOT = '.'\r\n\r\ngetRandom = (b) -> int b * Math.random()\r\n\r\nclass Board\r\n\r\n\tconstructor : (moves='') ->\r\n\t\t@clear()\r\n\t\tfor digit in moves\r\n\t\t\t@move int digit\r\n \r\n\tcopy : ->\r\n\t\tb = new Board()\r\n\t\tb.board = @board.slice() #(x for x in @board)\r\n\t\tb.moves = @moves.slice()\r\n\t\tb\r\n\r\n\trand : -> _.sample (i for b,i in @board when b.length < M)\r\n\r\n\tclear : ->\r\n\t\t@moves = []\r\n\t\t@board = ['', '', '', '', '', '', '']\r\n\r\n\tmove : (m) ->\r\n\t\t@board[m] += @next_marker()\r\n\t\t@moves.push m\r\n\r\n\tundo : ->\r\n\t\tm = @moves.pop()\r\n\t\t@board[m].pop()\r\n\r\n\tlast_marker : -> 'OX'[@moves.length % 2]\r\n\tnext_marker : -> 'XO'[@moves.length % 2]\r\n\tdisplay_simple : -> '\\n:' + '\\n:'.join(@board) + '\\n 012345\\n'\r\n\r\n\tdisplay : ->\r\n\t\tres = '\\n'\r\n\t\tfor j in range 5, -1, -1\r\n\t\t\tres += str(j)\r\n\t\t\tfor i in range N\r\n\t\t\t\tif j < @board[i].length\r\n\t\t\t\t\tres += ' ' + @board[i][j]\r\n\t\t\t\telse\r\n\t\t\t\t\tres += ' ' + DOT \r\n\t\t\tres += \"\\n\"\r\n\t\tres += '  0 1 2 3 4 5 6\\n'\r\n\t\tres\r\n\r\n\tcalc_columns : ->\r\n\t\tmarker = @last_marker()\r\n\t\tm = _.last @moves\r\n\t\tcount = 0\r\n\t\trow = @board[m]\r\n\t\ti = row.length - 1\r\n\t\twhile row[i] == marker and i >= 0\r\n\t\t\tcount += 1\r\n\t\t\ti -= 1\r\n\t\tcount == 4\r\n\r\n\tcalc_rows : ->\r\n\t\tmarker = @last_marker()\r\n\t\tm = _.last @moves\r\n\t\tcount = 1\r\n\t\tn = @board[m].length - 1\r\n\t\ti = m+1\r\n\t\twhile i < 7 and n < @board[i].length and @board[i][n] == marker\r\n\t\t\tcount += 1\r\n\t\t\ti += 1\r\n\t\ti = m-1\r\n\t\twhile i >= 0 and n < @board[i].length and @board[i][n] == marker\r\n\t\t\tcount += 1\r\n\t\t\ti -= 1\r\n\t\tcount >= 4\r\n\r\n\thelper : (di, dj, marker,m,n) ->\r\n\t\ti = m+di\r\n\t\tj = n+dj\r\n\t\tres = 0\r\n\t\twhile 0 <= j < M and 0 <= i < N and j < @board[i].length and @board[i][j] == marker\r\n\t\t\tres += 1\r\n\t\t\ti += di\r\n\t\t\tj += dj\r\n\t\treturn res\r\n\r\n\tcalc_diagonal : (dj) ->\r\n\t\tmarker = @last_marker()\r\n\t\tm = _.last @moves\r\n\t\tcount = 1\r\n\t\tn = @board[m].length - 1\r\n\t\tcount += @helper 1, dj,marker,m,n\r\n\t\tcount += @helper -1, -dj,marker,m,n\r\n\t\tcount >= 4\r\n\r\n\tcalc : ->\r\n\t\tif @calc_columns() then return true\r\n\t\tif @calc_rows() then return true\r\n\t\tif @calc_diagonal 1 then return true\r\n\t\tif @calc_diagonal -1 then return true\r\n\t\tfalse\r\n"
  ]
}