{
  "version": 3,
  "file": "computer.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\computer.coffee"
  ],
  "names": [],
  "mappings": ";;;;;;;AAAA,IAAA;;AAAA,AAAM;AAEL,AAAc;AAAA;AAEd,AAAgB;;;;kCAAA,AAAC,GAChB;UAAA;aAAA,AAAM;AACL,iBAAS,AAAC,EAAD,AAAE;AACX,AAAC,UAAD,AAAE,KAAK,AAAC,EAAR,AAAO,AAAE;AACT,YAAG,AAAC,EAAJ,AAAG,AAAE,QAAY;iBAAjB,AAAwB;;AACxB,YAAG,IAAA,AAAE,MAAK,AAAC,EAAC,AAAK,MAAjB,AAAkB,QAAY;iBAA9B,AAAqC;AAJtC;AADe;AAOhB,AAAO;;;yBAAA,AAAC,OACP;UAAA,OAAA,GAAA,MAAA,OAAA,KAAA,GAAA,KAAA,GAAA,QAAA,MAAA;AAAA,cAAQ,AAAI,KAAJ,AAAK;AACb,eAAS,AAAK,MAAL,AAAM;AACf;yBAAe;oBAAA;;AAAA,aAAA,kCAAA;;cAAsB,AAAK,MAAC,AAAM,MAAA,AAAE,GAAd,AAAe,SAAS;yBAApD,CAAA,AAAC,GAAD,AAAG;AAAG;AAAA;;;AACf,UAAG,AAAK,MAAL,AAAM,WAAT,AAAmB,GAAO;eAAO,AAAM,MAAA,AAAG,GAA1C,AAA0C;;AAE1C,cAAQ;AACR,YAAM,AAAI,KAAJ,AAAK,QAAQ,YAAA,AAAK,SAAQ,AAChC;aAAM,AAAI,KAAJ,AAAK,QAAX,AAAmB;AAClB,aAAA,oCAAA;;AACC;AACA,cAAI,AAAK,MAAL,AAAM;AACV,AAAC,YAAD,AAAE,KAAK,AAAK,KAAZ,AAAY;AACZ,cAAG,AAAC,EAAJ,AAAG,AAAE,QAAY;mBAAO,AAAK,KAA7B,AAA6B;;AAC7B,iBAAO,AAAC,KAAD,AAAC,cAAD,AAAe;AACtB,cAAG,SAAH,AAAW;AACV,AAAK,iBADN,AACC,AAAK;AADN,iBAEK,IAAG,SAAH,AAAW;AACf,AAAK,iBADD,AACJ,AAAK;AATP;AADD;;AAYA,eAAQ,AAAE,IAAF,AAAM,OAAO,UAAA,AAAC;eAAS,AAAK,KAAf,AAAe;AAA5B,OAAA,AAAC;AACT,YAAM,AAAI,KAAJ,AAAK,QAAX,AAAmB,OAAO,AAAM,SAAC,YAAA,AAAK,SAAL,AAAa,eAA9C,AAAgC,AAA2B;aAC3D,AAAK,KAtBC,AAsBD;AAjCP",
  "sourcesContent": [
    "class Computer\r\n\r\n\tconstructor : ->\r\n\r\n\tplay_complete : (b) ->\r\n\t\twhile true\r\n\t\t\tmarker = b.last_marker()\r\n\t\t\tb.move b.rand()\r\n\t\t\tif b.done() then return marker\r\n\t\t\tif M*N == b.moves.length then return \"draw\" \r\n\r\n\tmove : (board) ->\r\n\t\tstart = Date.now()\r\n\t\tmarker = board.last_marker()\r\n\t\tcands = ([0,m] for m in range N when board.board[m].length < M)\r\n\t\tif cands.length == 1 then return cands[0][1]\r\n\r\n\t\tantal = 0\r\n\t\tend = Date.now() + 2 ** level * thinkingTime\r\n\t\twhile Date.now() < end\r\n\t\t\tfor cand in cands\r\n\t\t\t\tantal++\r\n\t\t\t\tb = board.copy()\r\n\t\t\t\tb.move cand[1]\r\n\t\t\t\tif b.done() then return cand[1]\r\n\t\t\t\tmrkr = @play_complete b\r\n\t\t\t\tif mrkr == marker\r\n\t\t\t\t\tcand[0]++\r\n\t\t\t\telse if mrkr != 'draw'\r\n\t\t\t\t\tcand[0]--\r\n\r\n\t\tcand  = _.max cands, (cand) -> cand[0]\r\n\t\tprint Date.now() - start, antal/(2 ** level * thinkingTime/1000)\r\n\t\tcand[1]\r\n"
  ]
}