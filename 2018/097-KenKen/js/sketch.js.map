{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "N = null\r\nALFABET = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\t\r\n\r\narrayExcept = (arr, idx) ->\r\n\tres = arr[0..]\r\n\tres.splice idx, 1\r\n\tres \r\npermute = (arr) ->\r\n\tarr = Array::slice.call arr, 0\r\n\treturn [[]] if arr.length == 0\r\n\tpermutations = (for value,idx in arr\r\n\t\t[value].concat perm for perm in permute arrayExcept arr, idx)\r\n\t[].concat permutations...\t\r\n\r\nf = (kenken) ->\r\n\tres = {}\r\n\tfor letter in kenken\r\n\t\tres[letter] = []\t\r\n\tfor key,i in kenken\r\n\t\tres[key].push i\r\n\tres\r\n\r\nuniq = (lst) ->\r\n\tres = [lst[0]]\r\n\tfor item,i in lst\r\n\t\tif i>0 and not _.isEqual item, _.last res then res.push item\r\n\tres \r\n\r\nmatch2 = (total,operation) ->\r\n\tres = []\r\n\tfor a in range 1,N+1\r\n\t\tfor b in range 1,N+1\r\n\t\t\tif total == operation a,b then res.push [a,b].sort()\r\n\tuniq res.sort()\r\n\r\nmatch3 = (total,operation) ->\r\n\tres = []\r\n\tfor a in range 1,N+1\r\n\t\tfor b in range 1,N+1\r\n\t\t\tfor c in range 1,N+1\r\n\t\t\t\tif total == operation a,b,c then res.push [a,b,c].sort()\r\n\tuniq res.sort()\r\n\r\nmatch4 = (total,operation) ->\r\n\tres = []\r\n\tfor a in range 1,N+1\r\n\t\tfor b in range 1,N+1\r\n\t\t\tfor c in range 1,N+1\r\n\t\t\t\tfor d in range 1,N+1\r\n\t\t\t\t\tif total == operation a,b,c,d then res.push [a,b,c,d].sort()\r\n\tuniq res.sort()\r\n\r\ng = (rf,ops) -> # gets possible operands\r\n\tres = {}\r\n\tfor key of rf\r\n\t\ttotal = parseInt ops[key]\r\n\t\tswitch rf[key].length\r\n\t\t\twhen 1\r\n\t\t\t\tres[key] = [[total]]\r\n\t\t\twhen 2\r\n\t\t\t\tswitch _.last ops[key]\r\n\t\t\t\t\twhen '/' then\tres[key] = match2 total,(a,b) -> a // b\r\n\t\t\t\t\twhen '+' then\tres[key] = match2 total,(a,b) -> a + b\r\n\t\t\t\t\twhen '*' then res[key] = match2 total,(a,b) -> a * b\r\n\t\t\t\t\twhen '-' then res[key] = match2 total,(a,b) -> a - b\r\n\t\t\twhen 3\r\n\t\t\t\tswitch _.last ops[key]\r\n\t\t\t\t\twhen '+' then\tres[key] = match3 total,(a,b,c) -> a + b + c\r\n\t\t\t\t\twhen '*' then res[key] = match3 total,(a,b,c) -> a * b * c\r\n\t\t\twhen 4\r\n\t\t\t\tswitch _.last ops[key]\r\n\t\t\t\t\twhen '+' then\tres[key] = match4 total,(a,b,c,d) -> a + b + c + d\r\n\t\t\t\t\twhen '*' then res[key] = match4 total,(a,b,c,d) -> a * b * c * d\r\n\t\t\telse\r\n\t\t\t\tprint 'Problem!'\r\n\tres\r\n\r\nmakePerms = (rg) -> # adds permutations\r\n\tres = {}\r\n\tfor key of rg\r\n\t\tlst = rg[key]\r\n\t\ta = []\r\n\t\ta = a.concat permute pair for pair in lst\r\n\t\tres[key] = uniq a.sort()\r\n\tres\r\n\r\nok = (lst) ->\r\n\tlst = _.without lst, 0\r\n\tlst.length == _.uniq(lst).length\r\n\r\n# can be made faster by making incremental changes to grid.\r\n# and also just checking the latest group.\r\nvalid = (indexes,pointer,rf,rp) -> \r\n\tif pointer == ' ' then return true\r\n\tgrid = (0 for i in range N*N)\r\n\tfor p in ALFABET.slice 1,1+ALFABET.indexOf pointer\r\n\t\trppip = rp[p][indexes[p]]\r\n\t\tfor x,j in rf[p]\r\n\t\t\tgrid[x] = rppip[j]\r\n\tfor row in range N\r\n\t\tif not ok (grid[i] for i in range row*N,row*N+N) then return false \r\n\tfor col in range N\r\n\t\tif not ok (grid[i] for i in range col,N*N,N) then return false \r\n\ttrue\t\t \r\n\t\r\nincr = (pointer) -> ALFABET[ 1 + ALFABET.indexOf pointer]\r\ndecr = (pointer) -> ALFABET[-1 + ALFABET.indexOf pointer]\r\n\r\nsolve = (kenken,ops) ->\r\n\tN = Math.sqrt kenken.length\r\n\trf = f kenken\r\n\trg = g rf, ops\r\n\t\r\n\trp = makePerms rg\r\n\t\r\n\tindexes = {}\r\n\tfor key of ops\r\n\t\tindexes[key] = -1 \r\n\tpointer = 'A'\r\n\tindexes[pointer] = 0\r\n\tstopper = ALFABET[1 + _.size ops]\r\n\r\n\twhile pointer not in [' ',stopper]\r\n\t\tflag = indexes[pointer] < rp[pointer].length\r\n\t\tif flag and valid indexes,pointer,rf,rp\r\n\t\t\tpointer = incr pointer \r\n\t\t\tif pointer < stopper then indexes[pointer]++\r\n\t\telse if indexes[pointer] < rp[pointer].length-1\r\n\t\t\tindexes[pointer]++\r\n\t\t\tif pointer < indexes.length then indexes[incr pointer] = -1\r\n\t\telse\r\n\t\t\tindexes[pointer] = -1\r\n\t\t\tpointer = decr pointer\r\n\t\t\tindexes[pointer]++\r\n\r\n\tindexes\r\n\r\nstart = Date.now()\r\n\r\nassert {A:0, B:0, C:0, D:0, E:0}, solve \"ABBACDEED\", {A:'5+',B:'3/',C:'2',D:'1-',E:'2-'}\r\nassert {A:0,B:0,C:0,D:0,E:0,F:0,G:0,H:2,I:1}, solve \"ABBCDDECFFGGHHII\", {A:'4',B:'2/',C:'12*',D:'1-',E:'3',F:'7+',G:'2/',H:'1-',I:'3-'}\r\nassert {A:0,B:5,C:3,D:2,E:2,F:0,G:5,H:0}, solve \"AABBCDEFCDEGHHGG\", {A:'2/',B:'1-',C:'2/',D:'4+',E:'1-',F:'1',G:'8*',H:'7+'}\r\n\r\nsol6x6={A:1,B:13,C:2,D:7,E:4,F:3,G:2,H:4,I:0,J:4,K:0,L:1,M:3,N:4,O:10,P:3,Q:0}\r\nassert sol6x6, solve \"AABCCDEEBBDDFFGGHIJFLMHNJKLMONPPQQOO\", {A:'11+',B:'11+',C:'3/',D:'12*',E:'1-',F:'6*',G:'5+',H:'3-',I:'4',J:'7+',K:'3',L:'11+',M:'5+',N:'2/',O:'12+',P:'6+',Q:'5-'}\r\n\r\nsol7x7={A:1,B:16,C:2,D:6,E:0,F:7,G:2,H:4,I:0,J:8,K:1,L:0,M:0,N:2,O:5,P:5,Q:5,R:3,S:4,T:1,U:10,V:2}\r\nassert sol7x7, solve \"AABBCDDEFBBCGHEFIJJGHKLIMJNOKPPMNNOQRSSSTUQRVVVTU\", {A:'6-',B:'360*',C:'5-',D:'2/',E:'15*',F:'3-',G:'1-',H:'6+',I:'13+',J:'12+',K:'3+',L:'6',M:'8+',N:'120*',O:'1-',P:'3-',Q:'2-',R:'1-',S:'8+',T:'6-',U:'1-',V:'60*'}\r\n\r\nsol9x9={A:6,B:1,C:41,D:18,E:13,F:19,G:1,H:4,I:5,J:13,K:57,L:0,M:33,N:2,O:2,P:201,Q:8,R:0,S:4,T:1,U:19,V:0,W:47,X:0,Y:50,Z:16,a:0,b:1,c:5,d:2,e:6,f:18,g:0,h:4} #4563ms\r\nassert sol9x9, solve \"ABCCCDDEEABFGGHDEEIIFJJHKKKLMFNOOPQQLMRNSPPTTUMRVSPWWXUUYYZaaWXbbYcZZddefffcgghhe\",  {A:'3-',B:'8+',C:'16+',D:'9+',E:'33+',F:'10+',G:'3+',H:'7+',I:'7+',J:'1-',K:'16+',L:'8-',M:'18+',N:'16+',O:'9+',P:'21+',Q:'4-',R:'8-',S:'2-',T:'3-',U:'16+',V:'5',W:'17+',X:'7+',Y:'16+',Z:'22+',a:'3+',b:'7-',c:'7+',d:'4+',e:'9+',f:'13+',g:'17+',h:'12+'}\r\n\r\nprint 'Ready!', Date.now()-start\r\n"
  ]
}