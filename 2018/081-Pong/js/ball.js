"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Generated by CoffeeScript 2.0.3
var Ball;

Ball = function () {
  function Ball(x, y1, w, h) {
    _classCallCheck(this, Ball);

    this.x = x;
    this.y = y1;
    this.w = w;
    this.h = h;
    this.dx = 0;
    this.dy = 0;
  }

  _createClass(Ball, [{
    key: "collides",
    value: function collides(p) {
      if (abs(this.x - p.x) > (p.w + this.w) / 2) {
        return false;
      }
      if (abs(this.y - p.y) > (p.h + this.h) / 2) {
        return false;
      }
      return true;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.x = WIDTH / 2;
      this.y = HEIGHT / 2;
      this.dx = 0;
      return this.dy = 0;
    }
  }, {
    key: "update",
    value: function update(dt) {
      this.x += this.dx * dt;
      return this.y += this.dy * dt;
    }
  }, {
    key: "render",
    value: function render() {
      return rect(this.x, this.y, this.w, this.h);
    }
  }, {
    key: "bounce",
    value: function bounce(y) {
      this.y = y;
      return this.dy = -this.dy;
    }
  }]);

  return Ball;
}();
//# sourceMappingURL=ball.js.map
