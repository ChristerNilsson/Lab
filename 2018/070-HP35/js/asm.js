"use strict";

// Generated by CoffeeScript 2.0.3
var asm;

asm = "jsb lab037\ngo to lab0BF\n0 -> s8\ngo to lab005\n1 -> s5\nlab005:	1 -> s9\n1 -> s2\nselect rom 2\njsb lab0B4\ngo to lab0FE\ngo to lab017\ngo to lab030\nstack -> a\ngo to lab0D9\n0 -> a[w]\na + 1 -> a[p]\nlab010:	0 -> b[w]	/b\nselect rom 1\ndig6:	a + 1 -> a[x]\ndig5:	a + 1 -> a[x]\ndig4:	a + 1 -> a[x]\nif no carry go to dig3\njsb lab09A\nlab017:	c exchange m\nm -> c\ngo to lab03F\ndig3:	a + 1 -> a[x]\ndig2:	a + 1 -> a[x]\ndig1:	a + 1 -> a[x]\nreturn\n3 -> p\n0 - c -> c[x]\nlab020:	stack -> a\ngo to lab010\ngo to lab074\n3 -> p\nreturn\nno operation\ngo to lab020\nlab027:	1 -> s5\n1 -> s1\ngo to lab02E\n1 -> s9\ngo to lab027\n1 -> s10\ngo to lab0C2\nlab02E:	0 -> b[w]\nselect rom 1\nlab030:	down rotate\ngo to lab0DB\ndig9:	a + 1 -> a[x]\ndig8:	a + 1 -> a[x]\ndig7:	a + 1 -> a[x]\nif no carry go to dig6\ngo to sub0\nlab037:	clear registers\njsb of12\ngo to fst2zx\ngo to eex2\nshift right a[w]\n1 -> s3\ngo to lab076\nc -> stack\nlab03F:	clear status\nshift right a[w]\njsb fst2zx\nlab042:	a -> b[w]\n0 -> a[xs]\nshift left a[ms]\nlab045:	a - 1 -> a[x]\nif no carry go to lab0E0\nif c[xs] = 0\n    then go to lab0E6\na exchange b[ms]\n13 -> p\ngo to lab0E6\neex7:	p - 1 -> p\nc + 1 -> c[x]\neex8:	if b[p] = 0\n    then go to eex7\n1 -> s11\nshift right a[ms]\na exchange c[m]\nif s4 # 1\n    then go to den1\njsb of14\ngo to fst2zx\nof11:	0 -> c[wp]\nc - 1 -> c[wp]\n0 -> c[xs]\na + b -> a[x]\nif no carry go to of13\nof12:	0 -> c[w]\nof13:	clear status\nc -> a[w]\nof14:	12 -> p\na -> b[x]\nc -> a[x]\nif c[xs] = 0\n    then go to of15\n0 - c -> c[x]\nc - 1 -> c[xs]\nif no carry go to of11\n5 -> p\nof15:	a exchange c[x]\nif s4 # 1\n    then go to lab042\na exchange b[x]\n0 -> b[x]\njsb dsp1\nshift left a[x]\neex3:	shift right a[w]\nif p # 12\n    then go to den7\na exchange c[wp]\ngo to eex4\nlab074:	jsb lab0B4\nselect rom 1\nlab076:	if s4 # 1\n    then go to chs3\na exchange c[wp]\n0 - c - 1 -> c[xs]\neex4:	c -> a[w]\nif c[xs] = 0\n    then go to eex5\n0 -> c[xs]\n0 - c -> c[x]\neex5:	13 -> p\neex6:	shift left a[ms]\nc - 1 -> c[x]\nif a[s] >= 1\n    then go to eex8\nif a[ms] >= 1\n    then go to eex6\n0 -> c[x]\nden1:	jsb dsp1\nshift right a[ms]\nden7:	c -> a[s]\nden2:	if p # 12\n    then go to den4\nb -> c[w]\nc + 1 -> c[w]\n1 -> p\nden3:	shift left a[wp]\np + 1 -> p\nif c[p] = 0\n    then go to den3\nden4:	a exchange c[w]\nif p # 3\n    then go to den5\n0 -> c[x]\n1 -> s6\ngo to eex4\nsub0:	0 - c - 1 -> c[s]\nlab09A:	stack -> a\n0 -> b[w]\na + 1 -> a[xs]\na + 1 -> a[xs]\nc + 1 -> c[xs]\nc + 1 -> c[xs]\nif a >= c[x]\n    then go to add4\na exchange c[w]\nadd4:	a exchange c[m]\nif c[m] = 0\n    then go to add5\na exchange c[w]\nadd5:	b exchange c[m]\nadd6:	if a >= c[x]\n    then go to lab0BE\nshift right b[w]\na + 1 -> a[x]\nif b[w] = 0\n    then go to lab0BE\ngo to add6\nfst3:	0 -> a[ms]\nif s3 # 1\n    then go to lab0B4\na - 1 -> a[s]\n0 - c - 1 -> c[s]\nlab0B4:	if s7 # 1\n    then go to fst5\nc -> stack\nfst5:	1 -> s7\n0 -> c[w]\nc - 1 -> c[w]\n0 - c -> c[s]\nc + 1 -> c[s]\nb exchange c[w]\nreturn\nlab0BE:	select rom 1\nlab0BF:	jsb of12\n1 -> s5\ngo to fst2zx\nlab0C2:	shift right a[w]\ndsp7:	c -> a[s]\n0 -> s8\ngo to dsp8\ndsp2:	c + 1 -> c[xs]\ndsp3:	1 -> s8\nif s5 # 1\n    then go to dsp5\nc + 1 -> c[x]\nif no carry go to dsp2\ndsp4:	display toggle\ndsp5:	if s0 # 1\n    then go to dsp3\ndsp8:	0 -> s0\ndsp6:	p - 1 -> p\nif p # 12\n    then go to dsp6\ndisplay off\nif s8 # 1\n    then go to dsp4\nshift left a[w]\n0 -> s5\nkeys -> rom address\nlab0D9:	c -> stack\na exchange c[w]\nlab0DB:	jsb of13\n1 -> s7\nfst2zx:	jsb dsp1\njsb fst3\ngo to den2\nlab0E0:	shift right a[ms]\np - 1 -> p\nif p # 2\n    then go to lab045\n12 -> p\n0 -> a[w]\nlab0E6:	0 -> a[ms]\na + 1 -> a[p]\na + 1 -> a[p]\n2 -> p\nlab0EA:	p + 1 -> p\na - 1 -> a[p]\nif no carry go to lab0EF\nif b[p] = 0\n    then go to lab0EA\nlab0EF:	a + 1 -> a[p]\na exchange b[w]\nreturn\neex2:	1 -> s4\nif s11 # 1\n    then go to dig1\ngo to eex3\nchs3:	0 - c - 1 -> c[s]\ndsp1:	0 -> s10\ngo to dsp7\nden5:	if s6 # 1\n    then go to den6\np - 1 -> p\nden6:	shift right b[wp]\njsb eex4\nlab0FE:	m -> c\ngo to lab0DB\ngo to tan13\ntan15:	a exchange b[w]\njsb tnm11\nstack -> a\njsb tnm11\nstack -> a\nif s9 # 1\n    then go to tan16\na exchange c[w]\ntan16:	if s5 # 1\n    then go to asn12\n0 -> c[s]\njsb div11\nlab10D:	c -> stack\njsb mpy11\njsb add10\njsb sqt11\nstack -> a\nasn12:	jsb div11\nif s10 # 1\n    then go to rtn12\natn11:	0 -> a[w]\na + 1 -> a[p]\na -> b[m]\na exchange c[m]\natn12:	c - 1 -> c[x]\nshift right b[wp]\nif c[xs] = 0\n    then go to atn12\natn13:	shift right a[wp]\nc + 1 -> c[x]\nif no carry go to atn13\nshift right a[w]\nshift right b[w]\nc -> stack\natn14:	b exchange c[w]\ngo to atn18\nsqt11:	b exchange c[w]\n4 -> p\ngo to sqt14\ntnm11:	c -> stack\na exchange c[w]\nif c[p] = 0\n    then go to tnm12\n0 - c -> c[w]\ntnm12:	c -> a[w]\nb -> c[x]\ngo to add15\nc -> a[w]\nif s1 # 1\n    then go to sqt11\nif s10 # 1\n    then go to lab16D\nif s5 # 1\n    then go to atn11\n0 - c - 1 -> c[s]\na exchange c[s]\ngo to lab10D\natn15:	shift right b[wp]\natn16:	a - 1 -> a[s]\nif no carry go to atn15\nc + 1 -> c[s]\na exchange b[wp]\na + c -> c[wp]\na exchange b[w]\natn18:	a -> b[w]\na - c -> a[wp]\nif no carry go to atn16\nstack -> a\nshift right a[w]\na exchange c[wp]\na exchange b[w]\nshift left a[wp]\nc -> stack\na + 1 -> a[s]\na + 1 -> a[s]\nif no carry go to atn14\n0 -> c[w]\n0 -> b[x]\nshift right a[ms]\njsb div14\nc - 1 -> c[p]\nstack -> a\na exchange c[w]\n4 -> p\njsb pqo13\n6 -> p\njsb pmu11\n8 -> p\njsb pmu11\n2 -> p\nload constant 8\n10 -> p\njsb pmu11\njsb atcd1\njsb pmu11\njsb atc1\nshift left a[w]\njsb pmu11\nb -> c[w]\njsb add15\njsb atc1\nc + c -> c[w]\njsb div11\nif s9 # 1\n    then go to lab16C\n0 - c - 1 -> c[s]\njsb add10\nlab16C:	0 -> s1\nlab16D:	0 -> c[w]\nc - 1 -> c[p]\nc + 1 -> c[x]\nif s1 # 1\n    then go to mpy11\njsb div11\njsb atc1\nc + c -> c[w]\njsb mpy11\njsb atc1\nc + c -> c[w]\nc + c -> c[w]\njsb rtn11\nc + c -> c[w]\njsb pre11\njsb atc1\n10 -> p\njsb pqo11\njsb atcd1\n8 -> p\njsb pqo12\n2 -> p\nload constant 8\n6 -> p\njsb pqo11\n4 -> p\njsb pqo11\njsb pqo11\na exchange b[w]\nshift right c[w]\n13 -> p\nload constant 5\ngo to tan14\natcd1:	6 -> p\nload constant 8\nload constant 6\nload constant 5\nload constant 2\nload constant 4\nload constant 9\nrtn11:	if s1 # 1\n    then go to rtn12\nreturn\nadd10:	0 -> a[w]\na + 1 -> a[p]\nselect rom 0\npmu11:	select rom 2\npqo11:	shift left a[w]\npqo12:	shift right b[ms]\nb exchange c[w]\ngo to pqo16\npqo15:	c + 1 -> c[s]\npqo16:	a - b -> a[w]\nif no carry go to pqo15\na + b -> a[w]\npqo13:	select rom 2\nmpy11:	select rom 2\ndiv11:	a - c -> c[x]\nselect rom 2\nsqt15:	c + 1 -> c[p]\nsqt16:	a - c -> a[w]\nif no carry go to sqt15\na + c -> a[w]\nshift left a[w]\np - 1 -> p\nsqt17:	shift right c[wp]\nif p # 0\n    then go to sqt16\ngo to tnm12\ndiv14:	c + 1 -> c[p]\ndiv15:	a - b -> a[ms]\nif no carry go to div14\na + b -> a[ms]\nshift left a[ms]\np - 1 -> p\nif p # 0\n    then go to div15\ngo to tnm12\nsqt12:	p - 1 -> p\na + b -> a[ms]\nif no carry go to sqt18\nselect rom 0\nadd12:	c - 1 -> c[xs]\nc - 1 -> c[xs]\n0 -> a[x]\na - c -> a[s]\nif a[s] >= 1\n    then go to add13\nselect rom 2\nadd13:	if a >= b[m]\n    then go to add14\n0 - c - 1 -> c[s]\na exchange b[w]\nadd14:	a - b -> a[w]\nadd15:	select rom 2\natc1:	0 -> c[w]\n11 -> p\nload constant 7\nload constant 8\nload constant 5\nload constant 3\nload constant 9\nload constant 8\nload constant 1\nload constant 6\nload constant 3\nload constant 5\n12 -> p\nreturn\nrtn12:	select rom 0\nsqt18:	a + b -> a[x]\nif no carry go to sqt14\nc - 1 -> c[p]\nsqt14:	c + 1 -> c[s]\nif p # 0\n    then go to sqt12\na exchange c[x]\n0 -> a[x]\nif c[p] >= 1\n    then go to sqt13\nshift right a[w]\nsqt13:	shift right c[w]\nb exchange c[x]\n0 -> c[x]\n12 -> p\ngo to sqt17\npre11:	select rom 2\ntan18:	shift right b[wp]\nshift right b[wp]\ntan19:	c - 1 -> c[s]\nif no carry go to tan18\na + c -> c[wp]\na - b -> a[wp]\nb exchange c[wp]\ntan13:	b -> c[w]\na - 1 -> a[s]\nif no carry go to tan19\na exchange c[wp]\nstack -> a\nif b[s] = 0\n    then go to tan15\nshift left a[w]\ntan14:	a exchange c[wp]\nc -> stack\nshift right b[wp]\nc - 1 -> c[s]\nb exchange c[s]\nerr21:	select rom 0\nln24:	a exchange b[s]\na + 1 -> a[s]\nshift right c[ms]\nshift left a[wp]\ngo to ln26\nxty22:	stack -> a\njsb mpy21\nc -> a[w]\nif s8 # 1\n    then go to exp21\n0 -> a[w]\na - c -> a[m]\nif no carry go to err21\nshift right a[w]\nc - 1 -> c[s]\nif no carry go to err21\nln25:	c + 1 -> c[s]\nln26:	a -> b[w]\njsb eca22\na - 1 -> a[p]\nif no carry go to ln25\na exchange b[wp]\na + b -> a[s]\nif no carry go to ln24\n7 -> p\njsb pqo23\n8 -> p\njsb pmu22\n9 -> p\njsb pmu21\njsb lncd3\n10 -> p\njsb pmu21\njsb lncd2\n11 -> p\njsb pmu21\njsb lncd1\njsb pmu21\njsb lnc2\njsb pmu21\njsb lnc10\na exchange c[w]\na - c -> c[w]\nif b[xs] = 0\n    then go to ln27\na - c -> c[w]\nln27:	a exchange b[w]\nln28:	p - 1 -> p\nshift left a[w]\nif p # 1\n    then go to ln28\na exchange c[w]\nif c[s] = 0\n    then go to ln29\n0 - c - 1 -> c[m]\nln29:	c + 1 -> c[x]\n11 -> p\njsb mpy27\nif s9 # 1\n    then go to xty22\nif s5 # 1\n    then go to rtn21\njsb lnc10\njsb mpy22\ngo to rtn21\nexp21:	jsb lnc10\njsb pre21\njsb lnc2\n11 -> p\njsb pqo21\njsb lncd1\n10 -> p\njsb pqo21\njsb lncd2\n9 -> p\njsb pqo21\njsb lncd3\n8 -> p\njsb pqo21\njsb pqo21\njsb pqo21\n6 -> p\n0 -> a[wp]\n13 -> p\nb exchange c[w]\na exchange c[w]\nload constant 6\ngo to exp23\npre23:	if s2 # 1\n    then go to pre24\na + 1 -> a[x]\npre29:	if a[xs] >= 1\n    then go to pre27\npre24:	a - b -> a[ms]\nif no carry go to pre23\na + b -> a[ms]\nshift left a[w]\nc - 1 -> c[x]\nif no carry go to pre29\npre25:	shift right a[w]\n0 -> c[wp]\na exchange c[x]\npre26:	if c[s] = 0\n    then go to pre28\na exchange b[w]\na - b -> a[w]\n0 - c - 1 -> c[w]\npre28:	shift right a[w]\npqo23:	b exchange c[w]\n0 -> c[w]\nc - 1 -> c[m]\nif s2 # 1\n    then go to pqo28\nload constant 4\nc + 1 -> c[m]\nif no carry go to pqo24\npqo27:	load constant 6\npqo28:	if p # 1\n    then go to pqo27\nshift right c[w]\npqo24:	shift right c[w]\nnrm26:	if s2 # 1\n    then go to rtn21\nreturn\nlncd2:	7 -> p\nlnc6:	load constant 3\nload constant 3\nload constant 0\nlnc7:	load constant 8\nload constant 5\nload constant 0\nload constant 9\ngo to lnc9\nexp29:	jsb eca22\na + 1 -> a[p]\nexp22:	a -> b[w]\nc - 1 -> c[s]\nif no carry go to exp29\nshift right a[wp]\na exchange c[w]\nshift left a[ms]\nexp23:	a exchange c[w]\na - 1 -> a[s]\nif no carry go to exp22\na exchange b[w]\na + 1 -> a[p]\njsb nrm21\nrtn21:	select rom 1\neca21:	shift right a[wp]\neca22:	a - 1 -> a[s]\nif no carry go to eca21\n0 -> a[s]\na + b -> a[w]\nreturn\npqo21:	select rom 1\npmu21:	shift right a[w]\npmu22:	b exchange c[w]\ngo to pmu24\npmu23:	a + b -> a[w]\npmu24:	c - 1 -> c[s]\nif no carry go to pmu23\na exchange c[w]\nshift left a[ms]\na exchange c[w]\ngo to pqo23\nmpy21:	3 -> p\nmpy22:	a + c -> c[x]\na - c -> c[s]\nif no carry go to div22\n0 - c -> c[s]\ndiv22:	a exchange b[m]\n0 -> a[w]\nif p # 12\n    then go to mpy27\nif c[m] >= 1\n    then go to div23\nif s1 # 1\n    then go to err21\nb -> c[wp]\na - 1 -> a[m]\nc + 1 -> c[xs]\ndiv23:	b exchange c[wp]\na exchange c[m]\nselect rom 1\nlnc2:	0 -> s8\nload constant 6\nload constant 9\nload constant 3\nload constant 1\nload constant 4\nload constant 7\nload constant 1\ngo to lnc8\npre27:	a + 1 -> a[m]\nif no carry go to pre25\nmyp26:	a + b -> a[w]\nmpy27:	c - 1 -> c[p]\nif no carry go to myp26\nmpy28:	shift right a[w]\np + 1 -> p\nif p # 13\n    then go to mpy27\nc + 1 -> c[x]\nnrm21:	0 -> a[s]\n12 -> p\n0 -> b[w]\nnrm23:	if a[p] >= 1\n    then go to nrm24\nshift left a[w]\nc - 1 -> c[x]\nif a[w] >= 1\n    then go to nrm23\n0 -> c[w]\nnrm24:	a -> b[x]\na + b -> a[w]\nif a[s] >= 1\n    then go to mpy28\na exchange c[m]\nc -> a[w]\n0 -> b[w]\nnrm27:	12 -> p\ngo to nrm26\nlncd1:	9 -> p\nload constant 3\nload constant 1\nload constant 0\nload constant 1\nload constant 7\nload constant 9\nlnc8:	load constant 8\nload constant 0\nload constant 5\nload constant 5\nlnc9:	load constant 3\ngo to nrm27\npre21:	a exchange c[w]\na -> b[w]\nc -> a[m]\nc + c -> c[xs]\nif no carry go to pre24\nc + 1 -> c[xs]\npre22:	shift right a[w]\nc + 1 -> c[x]\nif no carry go to pre22\ngo to pre26\nlnc10:	0 -> c[w]\n12 -> p\nload constant 2\nload constant 3\nload constant 0\nload constant 2\nload constant 5\ngo to lnc7\nlncd3:	5 -> p\ngo to lnc6";
//# sourceMappingURL=asm.js.map
