{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "FILENAME = '2019-Vinter.jpg'\r\n\r\nspara = (lat,lon, x,y) -> {lat,lon, x,y}\r\n\r\n# Vinterpasset 2019\r\nA = spara 59.285607,18.150687, 178,442   # Norra brofästet\r\nB = spara 59.284808,18.180402, 3222,338  # Shooting Range, mitt i huset\r\nC = spara 59.270078,18.150334, 359,3488  # Östra brofästet\r\nD = spara 59.269380,18.169612, 2303,3494 # Kolarängsvägen/Klisätravägen\r\n\r\nDATA = \"gpsKarta\"\r\nWIDTH = null\r\nHEIGHT = null\r\n[cx,cy] = [0,0] # center (image coordinates)\r\nSCALE = 1\r\n\r\nreleased = true # to make Android work\r\n\r\ngps = null\r\nTRACKED = 5 # circles shows the player's position\r\nposition = null # gps position (pixels)\r\ntrack = [] # five latest GPS positions (pixels)\r\nbuttons = []\r\npoints = [] # remembers e.g. car/bike position\r\nimg = null \r\nbearing = 360\r\nmessages = []\r\n\r\npreload = -> img = loadImage FILENAME\r\n\r\nmyround = (x,dec=6) ->\r\n\tx *= 10**dec\r\n\tx = round x\r\n\tx/10**dec\r\n\r\nshow = (prompt,p) -> print prompt,\"http://maps.google.com/maps?q=#{p.lat},#{p.lon}\"\t\r\n\r\nvercal = (a,b,y) ->\r\n\tx = map y, a.y,b.y, a.x,b.x\r\n\tlat = map y, a.y,b.y, a.lat,b.lat\r\n\tlon = map y, a.y,b.y, a.lon,b.lon  \r\n\t{lat,lon,x,y} \t\r\n\r\nhortal = (a,b,x) ->\r\n\ty = map x, a.x,b.x, a.y,b.y\r\n\tlat = map x, a.x,b.x, a.lat,b.lat\r\n\tlon = map x, a.x,b.x, a.lon,b.lon  \r\n\t{lat,lon,x,y} \t\r\n\r\ncorner = (a,b,c,d,x,y)->\r\n\tlon = map x, a.x,b.x, a.lon,b.lon\r\n\tlat = map y, c.y,d.y, c.lat,d.lat  \r\n\t{lat,lon,x,y} \t\r\n\r\n# Vinterpasset 2109\r\nmakeCorners = ->\r\n\tac0 = vercal A,C,0\r\n\tac1 = vercal A,C,HEIGHT\r\n\tbd0 = vercal B,D,0\r\n\tbd1 = vercal B,D,HEIGHT\r\n\r\n\tab0 = hortal A,B,0\r\n\tab1 = hortal A,B,WIDTH\r\n\tcd0 = hortal C,D,0\r\n\tcd1 = hortal C,D,WIDTH\r\n\r\n\tnw = corner ac0,bd0,ab0,cd0,0,    0\r\n\tne = corner ac0,bd0,ab1,cd1,WIDTH,0\r\n\tse = corner ac1,bd1,ab1,cd1,WIDTH,HEIGHT\r\n\tsw = corner ac1,bd1,ab0,cd0,0,    HEIGHT\r\n\r\n\tgps = new GPS nw,ne,se,sw,WIDTH,HEIGHT\r\n\r\n\tprint gps.gps2bmp A.lat,A.lon\r\n\tprint gps.gps2bmp B.lat,B.lon\r\n\tprint gps.gps2bmp C.lat,C.lon\r\n\tprint gps.gps2bmp D.lat,D.lon\r\n\r\nlocationUpdate = (p) ->\r\n\tlat = p.coords.latitude\r\n\tlon = p.coords.longitude\r\n\tposition = gps.gps2bmp lat,lon\r\n\ttrack.push position\r\n\tif track.length > TRACKED then track.shift()\r\n\txdraw()\r\n\r\nlocationUpdateFail = (error) ->\tif error.code == error.PERMISSION_DENIED then messages = ['Check location permissions']\r\n\r\nsetupCompass = ->\r\n\twindow.addEventListener \"deviceorientation\", (event) ->\r\n\t\tbearing = round event.alpha \r\n\t\txdraw()\r\n\r\nstoreData = -> localStorage[DATA] = JSON.stringify points\t\r\nfetchData = -> if localStorage[DATA] then points = JSON.parse localStorage[DATA]\r\n\r\nsetup = ->\r\n\tcreateCanvas windowWidth,windowHeight\r\n\r\n\tWIDTH = img.width\r\n\tHEIGHT = img.height\r\n\r\n\t[cx,cy] = [WIDTH/2,HEIGHT/2] \r\n\r\n\tfetchData()\r\n\r\n\tx = width/2\r\n\ty = height/2\r\n\tx1 = 100\r\n\tx2 = width-100\r\n\ty1 = 100\r\n\ty2 = height-100\r\n\r\n\tbuttons.push new Button 'S',x1,y1, -> \r\n\t\tpoints.push position\r\n\t\tstoreData()\r\n\r\n\tbuttons.push new Button 'U',x,y1, -> cy -= 0.5*height/SCALE\r\n\tbuttons.push new Button '0',x2,y1, -> \r\n\t\tif points.length > 0 \r\n\t\t\tpoints.pop()\r\n\t\t\tstoreData()\r\n\r\n\tbuttons.push new Button 'L',x1,y, -> cx -= 0.5*width/SCALE\r\n\tbuttons.push new Button 'C',x,y, ->\t[cx,cy] = position\r\n\tbuttons.push new Button 'R',x2,y, -> cx += 0.5*width/SCALE\r\n\tbuttons.push new Button 'D',x,y2, -> cy += 0.5*height/SCALE\r\n\tbuttons.push new Button '-',x1,y2, -> SCALE /= 1.5\r\n\tbuttons.push new Button '+',x2,y2, ->\tSCALE *= 1.5\r\n\r\n\tmakeCorners()\r\n\r\n\tposition = [WIDTH/2,HEIGHT/2]\r\n\r\n\tnavigator.geolocation.watchPosition locationUpdate, locationUpdateFail, \r\n\t\tenableHighAccuracy: true\r\n\t\tmaximumAge: 30000\r\n\t\ttimeout: 27000\r\n\r\n\tsetupCompass()\r\n\txdraw()\r\n\r\n\t# undviker dubbelstuds:\r\n\t#addEventListener 'touchend', (evt) ->\t\r\n\t#\treleased = true             # to make Android work\r\n\t#\tfalse       # to make Android work\r\n\taddEventListener 'touchstart', (evt) ->\t\r\n\t\t#if not released then return false # to make Android work\r\n\t\t#released = false            # to make Android work\r\n\t\ttouches = evt.changedTouches\t\r\n\t\ttouch = touches[touches.length-1]\r\n\t\tfor button in buttons\r\n\t\t\tif button.contains touch.pageX,touch.pageY then button.click()\r\n\t\txdraw()\r\n\t\t#false       # to make Android work\r\n\r\ndrawTrack = ->\r\n\tpush()\r\n\tfc()\r\n\tsw 2\r\n\tsc 1,1,0 # YELLOW\r\n\ttranslate width/2, height/2\r\n\tscale SCALE\r\n\tfor [x,y],i in track\r\n\t\tcircle x-cx, y-cy, 10 * (track.length-i)\r\n\tpop()\r\n\r\ndrawPoints = ->\r\n\tpush()\r\n\tsc()\r\n\tfc 1,0,0,0.5 # RED\r\n\ttranslate width/2, height/2\r\n\tscale SCALE\r\n\tfor [x,y],i in points\r\n\t\tcircle x-cx, y-cy, 20\r\n\tpop()\r\n\r\ndrawButtons = ->\r\n\tbuttons[2].prompt = points.length\r\n\tbuttons[4].prompt = 360 - bearing\r\n\tfor button in buttons\r\n\t\tbutton.draw()\r\n\r\ndrawCompass = ->\r\n\tpush()\r\n\tstrokeCap SQUARE\r\n\ttranslate width/2, height/2\r\n\trotate radians bearing\r\n\tsw 10\r\n\tsc 1,0,0\r\n\tline 0,-100,0,-150\r\n\tsc 1\r\n\tline 0,100,0,150\r\n\tpop()\r\n\r\nxdraw = ->\r\n\tbg 0\r\n\tfc()\r\n\timage img, 0,0, width,height, cx-width/SCALE/2, cy-height/SCALE/2, width/SCALE, height/SCALE\r\n\tdrawTrack()\r\n\tdrawPoints()\r\n\tdrawCompass()\r\n\tdrawButtons()\r\n\ttextSize 50\r\n\tfor message,i in messages\r\n\t\ttext message,width/2,50*(i+1)\r\n\r\n# touchEnded = ->            # to make Android work\r\n# \treleased = true             # to make Android work\r\n# \tmessages.push 'touchEnded'\r\n# \tfalse       # to make Android work\r\n\r\n# touchStarted = -> \r\n# \tif not released then return false # to make Android work\r\n# \treleased = false            # to make Android work\r\n# \tfor button in buttons\r\n# \t\tif button.contains mouseX,mouseY then button.click()\r\n# \tmessages.push \"touchStarted #{points.length}\"\r\n# \txdraw()\r\n# \tfalse       # to make Android work\r\n\r\n# mouseReleased = ->            # to make Android work\r\n# \treleased = true             # to make Android work\r\n# \tmessages.push 'mouseReleased'\r\n# \tfalse                       # to make Android work\r\n\r\n# mousePressed = ->\r\n# \tif not released then return false # to make Android work\r\n# \treleased = false            # to make Android work\r\n# \tfor button in buttons\r\n# \t\tif button.contains mouseX,mouseY then button.click()\r\n# \tmessages.push \"mousePressed #{points.length}\"\r\n# \tfalse                       # to make Android work\r\n\r\n# mouseReleased = ->\r\n# \treleased = true\r\n# \tmessages.push 'mouseReleased'\r\n# \tfalse\r\n\r\n# mousePressed = ->\r\n# \tif not released then return false\r\n# \treleased = false \r\n# \tcounter += 1\r\n# \tmessages.push \"mousePressed #{counter}\"\r\n# \tfalse\r\n\r\n# mousePressed = ->\r\n# \tx = cx + mouseX/SCALE - width/2\r\n# \ty = cy + mouseY/SCALE - height/2\r\n# \tprint {mouseX,mouseY,cx,cy,SCALE,x,y}\r\n# \tprint gps.bmp2gps mouseX,mouseY\r\n# \tfor button in buttons\r\n# \t\tif button.contains mouseX,mouseY then button.click()\r\n# \txdraw()\r\n"
  ]
}