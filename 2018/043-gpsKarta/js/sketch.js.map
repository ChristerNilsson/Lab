{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": ";;;;;AAAA,IAAA,GAAA,GAAA,GAAA,GAAA,MAAA,OAAA,MAAA,WAAA,UAAA,QAAA,OAAA,SAAA,OAAA,SAAA,UAAA,QAAA,gBAAA,IAAA,IAAA,aAAA,aAAA,WAAA,KAAA,QAAA,QAAA,QAAA,KAAA,aAAA,gBAAA,oBAAA,aAAA,UAAA,gBAAA,SAAA,WAAA,UAAA,SAAA,KAAA,YAAA,aAAA,WAAA,OAAA,MAAA,WAAA,WAAA,gBAAA,YAAA,SAAA,OAAA,SAAA,SAAA,OAAA,QAAA,QAAA,QAAA;;AAAA,QAAA,AAAQ;;AACR,OADA,AACO;;AAEP,YAAY,CAAA,AAAC,GAAD,AAAG,GAAH,AAAK,GAAL,AAAO,GAAP,AAAS,GAAT,AAAW,GAAX,AAAa,GAAb,AAAe,GAAf,AAAiB,GAAjB,AAAmB,IAAnB,AAAsB,IAAtB,AAAyB,IAAzB,AAA4B,IAA5B,AAA+B,IAA/B,AAAkC,IAAlC,AAAqC,IAArC,AAAwC,IAAxC,AAA2C,IAA3C,AAA8C,KAA9C,AAAkD,KAAlD,AAAsD,KAAtD,AAA0D,KAA1D,AAA8D,KAA9D,AAAkE,KAAlE,AAAsE,KAAtE,AAA0E,KAA1E,AAA8E,KAA9E,AAAkF,MAAlF,AAAuF,MAAvF,AAA4F,MAA5F,AAAiG,MAAjG,AAAsG;;AAElH,QAAQ,eAAA,AAAC,KAAD,AAAK,KAAL,AAAU,GAAV,AAAY;SAAM,EAAA,AAAC,UAAD,AAAK,UAAL,AAAU,MAA5B,AAAkB,AAAY;AALtC;;;AAQA,IAAI,MAAA,AAAM,WAAN,AAAiB,WAAjB,AAA4B,KARhC,AAQI,AAAgC;;AACpC,IAAI,MAAA,AAAM,WAAN,AAAiB,WAAjB,AAA4B,MAThC,AASI,AAAiC;;AACrC,IAAI,MAAA,AAAM,WAAN,AAAiB,WAAjB,AAA4B,KAVhC,AAUI,AAAgC;;AACpC,IAAI,MAAA,AAAM,WAAN,AAAiB,WAAjB,AAA4B,MAXhC,AAWI,AAAiC;;AAErC,WAAW;;AAEX;AACC,KAAG,CAAA,AAAC,MAAJ,AAAG,AAAM;AACT,KAAG,CAAA,AAAC,MADJ,AACG,AAAM;AACT,KAAG,CAAA,AAAC,KAFJ,AAEG,AAAK;AACR,KAAG,CAAA,AAAC,MAHJ,AAGG,AAAM;AACT,KAAG,CAAA,AAAC,KAJJ,AAIG,AAAK;AACR,KAAG,CAAA,AAAC,KALJ,AAKG,AAAK;AACR,KAAG,CAAA,AAAC,KANJ,AAMG,AAAK;AACR,KAAG,CAAA,AAAC,MAPJ,AAOG,AAAM;AACT,KAAG,CAAA,AAAC,MARJ,AAQG,AAAM;AACT,MAAI,CAAA,AAAC,MATL,AASI,AAAM;AACV,MAAI,CAAA,AAAC,MAVL,AAUI,AAAM;AACV,MAAI,CAAA,AAAC,MAXL,AAWI,AAAM;AACV,MAAI,CAAA,AAAC,MAZL,AAYI,AAAM;AACV,MAAI,CAAA,AAAC,MAbL,AAaI,AAAM;AACV,MAAI,CAAA,AAAC,MAdL,AAcI,AAAM;AACV,MAAI,CAAA,AAAC,MAfL,AAeI,AAAM;AACV,MAAI,CAAA,AAAC,MAhBL,AAgBI,AAAM;AACV,MAAI,CAAA,AAAC,MAjBL,AAiBI,AAAM;AACV,MAAI,CAAA,AAAC,MAlBL,AAkBI,AAAM;AACV,MAAI,CAAA,AAAC,MAnBL,AAmBI,AAAM;AACV,MAAI,CAAA,AAAC,KApBL,AAoBI,AAAK;AACT,MAAI,CAAA,AAAC,KArBL,AAqBI,AAAK;AACT,MAAI,CAAA,AAAC,MAtBL,AAsBI,AAAM;AACV,MAAI,CAAA,AAAC,MAvBL,AAuBI,AAAM;AACV,MAAI,CAAA,AAAC,KAxBL,AAwBI,AAAK;AACT,MAAI,CAAA,AAAC,MAzBL,AAyBI,AAAM;AACV,MAAI,CAAA,AAAC,MA1CN,AAgBC,AA0BI,AAAM;AA1BV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DD,OAAO;;AACP,QAAQ;;AACR,SAAS,AACT;;AAAA,AAAC,KAAS,AAAC;AAAX,AAAI,AAAM,KAAA,AAAG;;;;AACb,QAAQ;;AAER,MAAM;;AACN,UApFA,AAoFU;;AACV,WArFA,AAqFW;;AACX,QAtFA,AAsFQ;;AACR,UAAU;;AAEV,UAAU;;AAEV,MAAM;;AACN,UAAU;;AACV,YAAY;;AACZ,aA9FA,AA8Fa;;AAEb,WAAW,AAEX;;AAAA,AAAC,SAAiB,AAAC;AAAnB,AAAQ,AAAU,SAAA,AAAG,AACrB;AAAA,AAAC,SAAiB,AAAC;AAAnB,AAAQ,AAAU,SAAA,AAAG;;;AACrB,iBAAiB;;AACjB,UAAU;;AAEV,MAAM,aAAA,AAAC;AACN,AAAe,kBAAf,AAAgB;AAChB,AAAO,UAAP,AAAQ,OAAO;SACf,AAAe,gBAAf,AAAgB,MAHX,AAGL,AAAsB;;;AAEvB,UAAU;SAAG,MAAM,UAAT,AAAS,AAAU;;;AAE7B,UAAU,iBAAA,AAAC;MAAE,0EAAH,AAAO;;AAChB,gBAAK,IAAI;AACT,MAAI,MAAA,AAAM;SACV,aAAE,IAHO,AAGH;;;AAEP,OAAO,cAAA,AAAC,QAAD,AAAQ;SAAM,MAAA,AAAM,AAAO,2CAAiC,AAAC,EAAlC,AAAmC,AAAI,YAAG,AAAC,EAAtE,AAAc,AAAa,AAA4C;;;AAE9E,SAAS,gBAAA,AAAC,GAAD,AAAG,GAAH,AAAK,GACb;MAAA,KAAA,KAAA;AAAA,MAAI,IAAA,AAAI,GAAG,AAAC,EAAR,AAAS,GAAE,AAAC,EAAZ,AAAa,GAAG,AAAC,EAAjB,AAAkB,GAAE,AAAC,EAArB,AAAsB;AAC1B,QAAM,IAAA,AAAI,GAAG,AAAC,EAAR,AAAS,GAAE,AAAC,EAAZ,AAAa,GAAG,AAAC,EAAjB,AAAkB,KAAI,AAAC,EAAvB,AAAwB;AAC9B,QAAM,IAAA,AAAI,GAAG,AAAC,EAAR,AAAS,GAAE,AAAC,EAAZ,AAAa,GAAG,AAAC,EAAjB,AAAkB,KAAI,AAAC,EAAvB,AAAwB;SAC9B,EAAA,AAAC,UAAD,AAAK,UAAL,AAAS,MAJD,AAIR,AAAW;;;AAEZ,SAAS,gBAAA,AAAC,GAAD,AAAG,GAAH,AAAK,GACb;MAAA,KAAA,KAAA;AAAA,MAAI,IAAA,AAAI,GAAG,AAAC,EAAR,AAAS,GAAE,AAAC,EAAZ,AAAa,GAAG,AAAC,EAAjB,AAAkB,GAAE,AAAC,EAArB,AAAsB;AAC1B,QAAM,IAAA,AAAI,GAAG,AAAC,EAAR,AAAS,GAAE,AAAC,EAAZ,AAAa,GAAG,AAAC,EAAjB,AAAkB,KAAI,AAAC,EAAvB,AAAwB;AAC9B,QAAM,IAAA,AAAI,GAAG,AAAC,EAAR,AAAS,GAAE,AAAC,EAAZ,AAAa,GAAG,AAAC,EAAjB,AAAkB,KAAI,AAAC,EAAvB,AAAwB;SAC9B,EAAA,AAAC,UAAD,AAAK,UAAL,AAAS,MAJD,AAIR,AAAW;;;AAEZ,SAAS,gBAAA,AAAC,GAAD,AAAG,GAAH,AAAK,GAAL,AAAO,GAAP,AAAS,GAAT,AAAW,GACnB;MAAA,KAAA;AAAA,QAAM,IAAA,AAAI,GAAG,AAAC,EAAR,AAAS,GAAE,AAAC,EAAZ,AAAa,GAAG,AAAC,EAAjB,AAAkB,KAAI,AAAC,EAAvB,AAAwB;AAC9B,QAAM,IAAA,AAAI,GAAG,AAAC,EAAR,AAAS,GAAE,AAAC,EAAZ,AAAa,GAAG,AAAC,EAAjB,AAAkB,KAAI,AAAC,EAAvB,AAAwB;SAC9B,EAAA,AAAC,UAAD,AAAK,UAAL,AAAS,MAHD,AAGR,AAAW;;;AAEZ,cAAc;MAEb,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,IAAA,IAAA,IAAA;AAAA,QAAM,OAAA,AAAO,GAAP,AAAS,GAAf,AAAM,AAAW,GAAjB;AACA,QAAM,OAAA,AAAO,GAAP,AAAS,GAAT,AAAW;AACjB,QAAM,OAAA,AAAO,GAAP,AAAS,GAAT,AAAW;AACjB,QAAM,OAAA,AAAO,GAAP,AAAS,GAAT,AAAW;AAEjB,QAAM,OAAA,AAAO,GAAP,AAAS,GALf,AAKM,AAAW;AACjB,QAAM,OAAA,AAAO,GAAP,AAAS,GAAT,AAAW;AACjB,QAAM,OAAA,AAAO,GAAP,AAAS,GAAT,AAAW;AACjB,QAAM,OAAA,AAAO,GAAP,AAAS,GAAT,AAAW;AAEjB,OAAK,OAAA,AAAO,KAAP,AAAW,KAAX,AAAe,KAAf,AAAmB,KAAnB,AAAwB,GAV7B,AAUK,AAA8B;AACnC,OAAK,OAAA,AAAO,KAAP,AAAW,KAAX,AAAe,KAAf,AAAmB,KAAnB,AAAwB,OAAxB,AAA8B;AACnC,OAAK,OAAA,AAAO,KAAP,AAAW,KAAX,AAAe,KAAf,AAAmB,KAAnB,AAAwB,OAAxB,AAA8B;AACnC,OAAK,OAAA,AAAO,KAAP,AAAW,KAAX,AAAe,KAAf,AAAmB,KAAnB,AAAwB,GAAxB,AAA8B;SAEnC,MAAM,IAAA,AAAI,IAAJ,AAAQ,IAAR,AAAW,IAAX,AAAc,IAAd,AAAiB,IAAjB,AAAoB,OAjBb,AAiBP,AAA0B;;;AAEjC,cAAc,qBAAA,AAAC,GAAD,AAAG,GAEhB;MAAA,OAAA,UAAA,GAAA,KAAA;AAAA;;AAAA,OAAA,wCAAA;;AACC,YAAQ;AACR,QAAG,IAAH,AAAK;AAAc,eAAnB,AAA4B;;AAC5B,QAAG,IAAH,AAAK;AAAc,eAAnB,AAA4B;;AAC5B,QAAG,UAAH,AAAU;AACT,UAAG,YAAH,AAAe;AAAQ,mBAAW,aAAlC,AAA+C;;mBAC/C,IAAA,AAAI,qBAAU,MAAA,AAAM,YAFrB,AAEC,AAA+B;AAFhC,WAAA;wBAAA;AAJD;AAAA;SAFa;;;AAUd,aAAa,oBAAA,AAAC,GAAD,AAAG,GAAH;AAEZ;MAAA;;AAAA,iBAAI,MAAA,AAAM,KAAM;AAChB,iBAAI,MAAA,AAAM,KAAM;AAChB,MAAG,MAAH,AAAQ;;AACP,QAAG,MAAH,AAAQ;AAAO,UAAf,AAAmB;;AACnB,QAAI,AAAC,EAAD,AAAE;AACN,QAAG,AAAC,EAAD,AAAE,WAAL,AAAe;AAAO,UAAI,MAA1B,AAAgC;;WAChC,IAAI,YAAY,AAAE,EAAd,AAAc,KAAd,AAAmB,MAAM,AAAE,EAJhC,AAIC,AAA+B;AARpB;;;AAUb,YAAY,mBAAA,AAAC;SAAO,AAAQ,QAAA,AAAE,GAAV,AAAW,SAAS,QAAA,AAAQ,IAApC,AAA4B,AAAY;;;AAEpD,iBAAiB,wBAAA,AAAC;MAEjB,GAAA,GAAA,UAAA,UAAA,GAAA,OAAA,UAAA;AAAA,MAAI,OAAO,AAAC,EAAC,AAAM,OAAf,AAAgB,UAAS,AAAC,EAAC,AAAM,OAArC,AAAI,AAAkC;AACtC,MAAI,OAAA,AAAO,QAAP,AAAe;AACnB,MAAI,OAAA,AAAO,QAFX,AAEI,AAAe,QAFnB;AAIA,UAAQ,AAAC,EAAD,AAAE,WAAF,AAAa;AACrB,UAAQ,AAAC,EAAD,AAAE,WAAF,AAAa;AACrB,aAAW,MAAM,CAAC,QAAD,AAAS,SAAf,AAAsB;AACjC,AAAQ,UAAA,AAAE,GAAV,AAAW,SAAS,MAAA,AAAM;AAE1B,cAAA,AAAY,OAAZ,AAAkB;AAClB,aAAW,AAAC,EAAD,AAAE,UAAF,AAAY;AACvB,aAAW,AAAC,EAAD,AAAE,UAAF,AAAY;AACvB,MAAG,SAAH,AAAY;AAAQ,eAAA,AAAW,UAA/B,AAAoB,AAAoB;;AAExC,YAAU,IAAI,QAAd,AAAU,AAAU;AAEpB,MAAG,aAAH,AAAe;;AACd,aAAS,AAAC,EAAC,AAAM,OAAC;AAClB,aAAS,AAAC,EAAC,AAAM,OAFlB,AAEmB;;AAEnB,MAAG,IAAA,AAAI,YAAP,AAAmB;AAAQ,iBAA3B,AAAwC;;SACxC,AAAQ,QAAA,AAAE,GAAV,AAAW,SAvBK,AAuBI;;;AAErB,YAAY;AACX,MAAG,eAAH,AAAiB,GAAO;AAAxB;;AACA,MAAG,aAAA,AAAa,KAAM,cAAtB,AAAmC;AAClC;AACA,AAAS,cAFV,AAEC,AAAU;AAFX,SAGK,IAAG,aAAA,AAAa,KAAM,YAAtB,AAAiC;AACrC;AACA,AAAO,YAFH,AAEJ,AAAQ;;AACT,AAAQ,UAAA,AAAE,GAAV,AAAW,SAAS;AACpB,MAAG,eAAH,AAAe;WAAf,AAAsB;AATX;;;AAWZ,iBAAiB,wBAAA,AAAC;AACjB,iBAAA,AAAe;AAEf,aAAW,AAAG,IAAH,AAAI,QAAJ,AAAY,QAAZ,AAAmB;AAE9B,AAAK,QAAL,AAAM,KAAN,AAAW;AACX,MAAG,AAAK,MAAL,AAAM,SAAT,AAAkB;AAAa,AAAK,UAApC,AAA+B,AAAM;;AACrC;SAPgB,AAQhB;;;AAED,qBAAqB,4BAAA,AAAC;AAAU,MAAG,AAAK,MAAL,AAAM,SAAQ,AAAK,MAAtB,AAAuB;WAAuB,WAAW,CAAzD,AAAyD,AAAC;AAArE;;;AAErB,cAAc,uBACb;MAAA;AAAA,YAAU,IAAA,AAAI;AACd,WAAS,AAAe,gBAAf,AAAgB;AACzB,AAAO,UAAP,AAAQ,QAAQ,AAAO,OAAA;AACvB,AAAO,UAAP,AAAQ,WAAW;AACnB,AAAO,UAAP,AAAQ,SAAS;AACjB,AAAO,UAAP,AAAQ,OAAO;AACf,AAAO,UAAP,AAAQ,QAAQ;AAChB,AAAO,UAAP,AAAQ,OAPR,AAOe;;SAEf,AAAO,QAAP,AAAQ,OAVK,AAUE;;;AAEhB,QAAQ;MAEP,GAAA,IAAA,IAAA,GAAA,IAAA;AAAA,eAAA,AAAa,aAAb,AAAyB;AAEzB,UAAQ,AAAG,IAAC;AACZ,WAAS,AAAG,IAAC;AAEb,UAAQ,AACR;AAAA,AAAC,IAND,GAMU,AAAC;AAAX,AAAI,AAAM,OAAA,AAAO;;AAEjB;AACA,YAAU,AAAC,EAAD,AAAE,KAAF,AAAO,AAAU,UAA3B,AAA2B;AAE3B,MAAI,QAAM;AACV,MAAI,SAAO;AACX,OAAK;AACL,OAAK,QAAM;AACX,OAAK;AACL,OAAK,SAAO;AAEZ,AAAO,UAAP,AAAQ,SAAK,AAAI,OAAJ,AAAW,KAAX,AAAe,IAAf,AAAkB,IAAI,YAAA;;AAClC;AACA,cAAU,UAAA,AAAU;AACpB,gBAAY,UAAA,AAAU;AACtB,AAAO,YAAP,AAAQ,UAAR,AAAkB;AAClB,AAAS,cAAT,AAAU,UAAV,AAAoB;AACpB,AAAS,aAAT,AAAS,UAAU;AACnB,AAAQ,YAAA,AAAE,GAAV,AAAW,SAAS;AACpB,kBAAA,AAAc;AACd,cAAU,YAAA,AAAY,WAAZ,AAAuB;WACjC,aAVkC,AAUrB;AAVd,AAAa,GAAA;AAYb,AAAO,UAAP,AAAQ,SAAK,AAAI,OAAJ,AAAW,KAAX,AAAe,GAAf,AAAiB,IAAI;WAAG,MAAM,OAAA,AAAK,SAAd,AAAqB;AAAvD,AAAa,GAAA;AACb,AAAO,UAAP,AAAQ,SAAK,AAAI,OAAJ,AAAW,IAAX,AAAc,IAAd,AAAiB,IAAI;WAAG,UAAH,AAAG,AAAU;AAA/C,AAAa,GAAA;AAEb,AAAO,UAAP,AAAQ,SAAK,AAAI,OAAJ,AAAW,KAAX,AAAe,IAAf,AAAkB,GAAG;WAAG,MAAM,OAAA,AAAK,QAAd,AAAoB;AAAtD,AAAa,GAAA;AACb,AAAO,UAAP,AAAQ,SAAK,AAAI,OAAJ,AAAW,IAAX,AAAe,GAAf,AAAiB,GAAG;;;AAAG,uBAAH,AAAa,qDAAV,AAAC,oBAAD,AAAI;AAAxC,AAAa,GAAA;AAEb,AAAO,UAAP,AAAQ,SAAK,AAAI,OAAJ,AAAW,KAAX,AAAe,IAAf,AAAkB,GAAG;WAAG,MAAM,OAAA,AAAK,QAAd,AAAoB;AAAtD,AAAa,GAAA;AACb,AAAO,UAAP,AAAQ,SAAK,AAAI,OAAJ,AAAW,KAAX,AAAe,IAAf,AAAkB,IAAI;AAAG,QAAG,QAAH,AAAW;aAAS,SAApB,AAA6B;AAAhC;AAAnC,AAAa,GAAA;AACb,AAAO,UAAP,AAAQ,SAAK,AAAI,OAAJ,AAAW,KAAX,AAAe,GAAf,AAAiB,IAAI;WAAG,MAAM,OAAA,AAAK,SAAd,AAAqB;AAAvD,AAAa,GAAA;AACb,AAAO,UAAP,AAAQ,SAAK,AAAI,OAAJ,AAAW,KAAX,AAAe,IAAf,AAAkB,IAAI;WAAG,SAAH,AAAY;AAA/C,AAAa,GAAA;AAEb,aAAW,CAAC,QAAD,AAAO,GAAE,SAAT,AAAgB;AAE3B,AAAS,YAAC,AAAW,YAArB,AAAsB,cAAtB,AAAoC,gBAApC,AAAoD;AACnD,wBAAA,AAAoB;AACpB,gBADA,AACY;AACZ,aAHD,AACC,AAES;AAFT;AAID;0BAEA,AAAiB,cAAc,UAAA,AAAC,KAC/B;QAAA,IAAA,IAAA,OAAA;AAAA,cAAU,AAAG,IAAC;AACd,YAAQ,AAAQ,QAAA,AAAO,QAAP,AAAQ,SAAR,AAAe;AAC/B,SAAK,AAAK,MAAC;AACX,SAAK,AAAK,MAAC;WACX,eAAA,AAAe,IALe,AAK9B,AAAkB;AAzDZ,AAoDP,GAAA;;;AAOD,YAAY;MACX,GAAA,GAAA,KAAA,GAAA;AAAA;AACA;AACA,KAAA,AAAG;AACH,KAHA,AAGA,AAAG,GAHH;AAIA,YAAU,QAAV,AAAgB,GAAG,SAAnB,AAA0B;AAC1B,QAAA,AAAM;AACN,OAAA,8CAAA;AAAI;;AAAA,AAAC;AAAD,AAAG;;AACN,WAAO,IAAP,AAAS,IAAI,IAAb,AAAe,IAAI,AAAK,MAAC,AAAK,MAAL,AAAM,SADhC,AACC,AAAwB,AAAc;;SAR5B,AASX;;;AAED,cAAc,uBAEb;MAAA,SAAA,SAAA,SAAA,SAAA,GAAA;AAAA,YAAU,OAAA,AAAO,QAAP,AAAc;AACxB,YAAU,OAAA,AAAO,QAAP,AAAc;AAExB,YAAU,AAAO,QAAP,AAAQ,UAAR,AAAkB;AAC5B,AAAQ,UAAA,AAAE,GAAV,AAAW,SAAS,IAAA,AAAI;AACxB,AAAQ,UAAA,AAAE,GAAV,AAAW,SAAS;AAEpB,YAAU,AAAS,SAAA;AACnB,MAAI,AAAQ,QAAA;AACZ,MAAI,AAAQ,QAAA;AAEZ;AACA;AACA,KAAA,AAAG,GAAH,AAAK,GAAL,AAAO,GAAP,AAAS;AACT,YAAU,QAAV,AAAgB,GAAG,SAAnB,AAA0B;AAC1B,QAAA,AAAM;AACN,SAAO,IAAP,AAAS,IAAI,IAAb,AAAe,IAAf,AAAmB;SAlBN,AAmBb;;;AAED,cAAc,uBAAG;MAAA,QAAA,GAAA,KAAA,AAAc;;AAAA,OAAA,sCAAA;;iBAAd,AAAM,OAAN,AAAO,AAAO;AAAA;SAAjB;;;AAEd,QAAQ,iBACP;MAAA,GAAA,GAAA,KAAA,SAAA;AAAA,KAAA,AAAG,GAAH,AAAK,GAAL,AAAO;AACP;AACA,QAAA,AAAM,KAAN,AAAW,GAAX,AAAa,GAAb,AAAgB,OAAhB,AAAsB,QAAQ,KAAG,QAAA,AAAM,QAAvC,AAA6C,GAAG,KAAG,SAAA,AAAO,QAA1D,AAAgE,GAAG,QAAnE,AAAyE,OAAO,SAAhF,AAAuF;AACvF;AACA;AACA;AACA,WAAA,AAAS,AACT;;AAAA,OAAA,iDAAA;;iBACC,KAAA,AAAK,SAAQ,QAAb,AAAmB,GAAE,AAAG,MAAC,IAD1B,AACC,AAAwB,AAAG;AAD5B;SARO;;;AAWR,YAAY,mBAAA,AAAC;AACZ;;MAAA,SAAA,GAAA;AAAA,MAAG,AAAS,SAAT,AAAS,oBAAZ,AAA+B,MAAU;AAAzC;;AACA,eAAa;AACb,mBAAiB;AACjB,YAAU,AAAS,SAAA;AACnB,MAAI,AAAQ,QAAA;AACZ,MAAI,AAAQ,QAAA;AACZ,wBAAkB,AAAG,IAAH,AAAI,QAAJ,AAAY,GAPnB,AAOO,AAAc,qDAAhC,AAAC,2BAAD,AAAQ;;;AAET,iBAAiB,wBAAA,AAAC,IAAD,AAAI;MACpB,KAAA,QAAA,gBAAA,SAAA,GAAA,GAAA,KAAA;AAAA,OAAA,sCAAA;;AACC,QAAG,AAAM,OAAN,AAAO,SAAP,AAAgB,IAAnB,AAAG,AAAmB;AACrB,AAAM,aAAN,AAAO;AACP,AACA;AAHD;AADD;;AAKA;QAAoG;;AAAA,SAAA,OAAA;;mBAA7F,CAAC,KAAK,KAAG,QAAA,AAAM,QAAT,AAAe,IAAI,KAAxB,AAA2B,OAAO,KAAG,SAAA,AAAO,QAAV,AAAgB,IAAE,KAApD,AAAuD,OAAO,AAAQ,QAAtE,AAAsE,IAAI,AAAQ,QAAnF,AAAC,AAAkF,KAAnF,AAAwF,AAAK;AAAA;;;AACpG,qBAAiB,AAAE,IAAF,AAAM,KAAK,UAAA,AAAC;WAAS,AAAK,KAAf,AAAe;AAA1B,AACjB,GADiB,AAAC;AANlB,wBAOU;;;;AAAV,AAAC;AAAD,AAAG;;AACH,MAAG,IAAH,AAAO;AACN,cAAA,AAAU;WADX,AAEC;AAXe;;;AA5VjB",
  "sourcesContent": [
    "DELAY = 100 # ms, delay between sounds\r\nDIST = 1 # meter. Movement less than DIST makes no sound 1=walk. 5=bike\r\n\r\nDISTANCES = [1,2,3,4,5,6,7,8,9,10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000]\r\n\r\nspara = (lat,lon, x,y) -> {lat,lon, x,y}\r\n\r\n# 2019-SommarN\r\nA = spara 59.300716, 18.125680, 197,278 # Lilla halvön\r\nB = spara 59.299235, 18.169492, 4306,367 # Kranglans väg/Östervägen\r\nC = spara 59.285443, 18.124585, 236,3082 # Ishockeyrink Mitten\r\nD = spara 59.287806, 18.170784, 4525,2454 # Mittenhus t v\r\n\r\nFILENAME = '2019-SommarN.jpg' \r\n\r\ncontrols = \r\n\t1: [1830,333]\r\n\t2: [1506,521]\r\n\t3: [907,711]\r\n\t4: [1193,873]\r\n\t5: [472,617]\r\n\t6: [228,841]\r\n\t7: [672,1013]\r\n\t8: [1125,1196]\r\n\t9: [1430,1290]\r\n\t10: [4361,503]\r\n\t11: [4118,1106]\r\n\t12: [3830,640]\r\n\t13: [3192,1133]\r\n\t14: [2664,873]\r\n\t15: [2322,1862]\r\n\t16: [4120,2699]\r\n\t17: [4181,3069]\r\n\t19: [3340,2904]\r\n\t20: [2691,2554]\r\n\t24: [3366,3217]\r\n\t26: [390,1935]\r\n\t27: [547,2143]\r\n\t28: [1462,2293]\r\n\t29: [1055,2620]\r\n\t30: [371,2502]\r\n\t31: [1090,3104]\r\n\t32: [2250,2750]\r\n\r\n# 2019-SommarS\r\n# A = spara 59.279157, 18.149313, 2599,676 # Mellanbron\r\n# B = spara 59.275129, 18.169590, 4531,1328 # Ulvsjön Vändplan Huset\r\n# C = spara 59.270072, 18.150229, 2763,2334 # Brotorpsbron\r\n# D = spara 59.267894, 18.167087, 4339,2645 # Älta huset\r\n\r\n# FILENAME = '2019-SommarS.jpg' \r\n\r\n# controls = \r\n# \t21: [4303,255]\r\n# \t22: [4066,407]\r\n# \t23: [3436,158]\r\n# \t25: [3534,485]\r\n# \t34: [1709,65]\r\n# \t35: [1212,151]\r\n# \t36: [2215,1008]\r\n# \t37: [2571,1186]\r\n# \t38: [2894,485]\r\n# \t39: [3245,778]\r\n# \t40: [4317,1003]\r\n# \t41: [4303,685]\r\n# \t42: [3868,1292]\r\n# \t43: [3426,1281]\r\n# \t44: [3536,1650]\r\n# \t45: [4538,1763]\r\n# \t46: [3926,2133]\r\n# \t47: [3104,2025]\r\n# \t48: [4256,2514]\r\n# \t49: [3773,2493]\r\n# \t50: [3231,2757]\r\n\r\n#################\r\n\r\nDATA = \"gpsKarta\"\r\nWIDTH = null\r\nHEIGHT = null\r\n[cx,cy] = [0,0] # center (image coordinates)\r\nSCALE = 1\r\n\r\ngps = null\r\nTRACKED = 5 # circles shows the player's position\r\nposition = null # gps position (pixels)\r\ntrack = [] # five latest GPS positions (pixels)\r\nbuttons = []\r\n\r\nspeaker = null\r\n\r\nimg = null \r\nsoundUp = null\r\nsoundDown = null\r\nsoundQueue = 0 # neg=minskat avstånd pos=ökat avstånd\r\n\r\nmessages = []\r\n\r\n[gpsLat,gpsLon] = [0,0]\r\n[trgLat,trgLon] = [0,0]\r\ncurrentControl = \"1\"\r\ntimeout = null\r\n\r\nsay = (m) ->\r\n\tspeechSynthesis.cancel()\r\n\tspeaker.text = m\r\n\tspeechSynthesis.speak speaker\r\n\r\npreload = -> img = loadImage FILENAME\r\n\r\nmyround = (x,dec=6) ->\r\n\tx *= 10**dec\r\n\tx = round x\r\n\tx/10**dec\r\n\r\nshow = (prompt,p) -> print prompt,\"http://maps.google.com/maps?q=#{p.lat},#{p.lon}\"\t\r\n\r\nvercal = (a,b,y) ->\r\n\tx = map y, a.y,b.y, a.x,b.x\r\n\tlat = map y, a.y,b.y, a.lat,b.lat\r\n\tlon = map y, a.y,b.y, a.lon,b.lon  \r\n\t{lat,lon,x,y} \t\r\n\r\nhortal = (a,b,x) ->\r\n\ty = map x, a.x,b.x, a.y,b.y\r\n\tlat = map x, a.x,b.x, a.lat,b.lat\r\n\tlon = map x, a.x,b.x, a.lon,b.lon  \r\n\t{lat,lon,x,y} \t\r\n\r\ncorner = (a,b,c,d,x,y)->\r\n\tlat = map y, c.y,d.y, c.lat,d.lat  \r\n\tlon = map x, a.x,b.x, a.lon,b.lon\r\n\t{lat,lon,x,y}\r\n\r\nmakeCorners = ->\r\n\r\n\tac0 = vercal A,C,0  \t                  # beräkna x\r\n\tac1 = vercal A,C,HEIGHT\r\n\tbd0 = vercal B,D,0\r\n\tbd1 = vercal B,D,HEIGHT\r\n\r\n\tab0 = hortal A,B,0                      # beräkna y\r\n\tab1 = hortal A,B,WIDTH\r\n\tcd0 = hortal C,D,0\r\n\tcd1 = hortal C,D,WIDTH\r\n\r\n\tnw = corner ac0,bd0,ab0,cd0, 0,    0\t\t# beräkna hörnen\r\n\tne = corner ac0,bd0,ab1,cd1, WIDTH,0\r\n\tse = corner ac1,bd1,ab1,cd1, WIDTH,HEIGHT\r\n\tsw = corner ac1,bd1,ab0,cd0, 0,    HEIGHT\r\n\r\n\tgps = new GPS nw,ne,se,sw,WIDTH,HEIGHT\r\n\r\nsayDistance = (a,b) ->\r\n\t# if a border is crossed, play a sound\r\n\tfor distance in DISTANCES\r\n\t\tcount = 0\r\n\t\tif a<distance then count += 1\r\n\t\tif b<distance then count += 1\r\n\t\tif count==1\r\n\t\t\tif distance >= 10 then distance = 'distans ' + distance\r\n\t\t\tsay distance, round(distance)//100\r\n\r\nsayBearing = (a,b) -> # a is newer\r\n\t# if a border is crossed, play a sound\r\n\ta = round(a) // 10\r\n\tb = round(b) // 10\r\n\tif a != b # 0..35\r\n\t\tif a == 0 then a = 36\r\n\t\ts = a.toString()  \r\n\t\tif s.length == 1 then s = '0' + s\r\n\t\tsay 'bäring ' + s[0] + ' ' + s[1]\r\n\r\nshowSpeed = (sp) -> buttons[0].prompt = myround sp, 1\r\n\r\nsoundIndicator = (p) ->\r\n\r\n\ta = LatLon p.coords.latitude,p.coords.longitude # newest\r\n\tb = LatLon gpsLat, gpsLon\r\n\tc = LatLon trgLat, trgLon # target\r\n\r\n\tdista = a.distanceTo c\r\n\tdistb = b.distanceTo c\r\n\tdistance = round((dista - distb)/DIST)\r\n\tbuttons[5].prompt = round dista\r\n\r\n\tsayDistance dista,distb\r\n\tbearinga = a.bearingTo c\r\n\tbearingb = b.bearingTo c\r\n\tif dista >= 10 then sayBearing bearinga,bearingb\r\n\r\n\tshowSpeed abs dista-distb\r\n\r\n\tif distance != 0 # update only if DIST detected. Otherwise some beeps will be lost.\r\n\t\tgpsLat = p.coords.latitude\r\n\t\tgpsLon = p.coords.longitude\r\n\r\n\tif abs(distance) < 10 then soundQueue = distance # ett antal DIST\r\n\tbuttons[7].prompt\t= soundQueue\r\n\r\nplaySound = ->\r\n\tif soundQueue == 0 then return\r\n\tif soundQueue < 0 and soundDown != null\r\n\t\tsoundQueue++\r\n\t\tsoundDown.play()\r\n\telse if soundQueue > 0 and soundUp != null\r\n\t\tsoundQueue--\r\n\t\tsoundUp.play()\r\n\tbuttons[7].prompt\t= soundQueue\r\n\tif soundQueue==0 then xdraw()\r\n\r\nlocationUpdate = (p) ->\r\n\tsoundIndicator p\r\n\r\n\tposition = gps.gps2bmp gpsLat,gpsLon\r\n\r\n\ttrack.push position\r\n\tif track.length > TRACKED then track.shift()\r\n\txdraw()\r\n\tposition\r\n\r\nlocationUpdateFail = (error) ->\tif error.code == error.PERMISSION_DENIED then messages = ['Check location permissions']\r\n\r\ninitSpeaker = ->\r\n\tspeaker = new SpeechSynthesisUtterance()\r\n\tvoices = speechSynthesis.getVoices()\r\n\tspeaker.voice = voices[5]\t\r\n\tspeaker.voiceURI = \"native\"\r\n\tspeaker.volume = 1\r\n\tspeaker.rate = 1\r\n\tspeaker.pitch = 0.8\r\n\tspeaker.text = 'Välkommen!'\r\n\t#speaker.lang = 'en-US'\r\n\tspeaker.lang = 'sv-SE'\r\n\r\nsetup = ->\r\n\r\n\tcreateCanvas windowWidth,windowHeight\r\n\r\n\tWIDTH = img.width\r\n\tHEIGHT = img.height\r\n\r\n\tSCALE = 1\r\n\t[cx,cy] = [width,height]\r\n\t\r\n\tmakeCorners()\r\n\tsetTarget _.keys(controls)[0]\r\n\r\n\tx = width/2\r\n\ty = height/2\r\n\tx1 = 100\r\n\tx2 = width-100\r\n\ty1 = 100\r\n\ty2 = height-100\r\n\r\n\tbuttons.push new Button 'S',x1,y1, -> # Store Bike Position\r\n\t\tinitSpeaker()\r\n\t\tsoundUp = loadSound 'soundUp.wav'\r\n\t\tsoundDown = loadSound 'soundDown.wav'\r\n\t\tsoundUp.setVolume 0.1\r\n\t\tsoundDown.setVolume 0.1\r\n\t\tcontrols['bike'] = position\r\n\t\tbuttons[2].prompt = 'bike'\r\n\t\tclearInterval timeout\r\n\t\ttimeout = setInterval playSound, DELAY\r\n\t\tsoundQueue = 0\r\n\r\n\tbuttons.push new Button 'U',x,y1, -> cy -= 0.33*height/SCALE \r\n\tbuttons.push new Button '',x2,y1, -> setTarget 'bike'\r\n\r\n\tbuttons.push new Button 'L',x1,y, -> cx -= 0.33*width/SCALE\r\n\tbuttons.push new Button '', x,y, ->\t[cx,cy] = position\r\n\r\n\tbuttons.push new Button 'R',x2,y, -> cx += 0.33*width/SCALE\r\n\tbuttons.push new Button '-',x1,y2, -> if SCALE > 0.5 then SCALE /= 1.5\r\n\tbuttons.push new Button 'D',x,y2, -> cy += 0.33*height/SCALE\r\n\tbuttons.push new Button '+',x2,y2, ->\tSCALE *= 1.5\r\n\r\n\tposition = [WIDTH/2,HEIGHT/2]\r\n\r\n\tnavigator.geolocation.watchPosition locationUpdate, locationUpdateFail,\r\n\t\tenableHighAccuracy: true\r\n\t\tmaximumAge: 30000\r\n\t\ttimeout: 27000\r\n\r\n\txdraw()\r\n\r\n\taddEventListener 'touchstart', (evt) ->\r\n\t\ttouches = evt.changedTouches\r\n\t\ttouch = touches[touches.length-1]\r\n\t\tmx = touch.pageX\r\n\t\tmy = touch.pageY\r\n\t\tmyMousePressed mx,my\r\n\r\ndrawTrack = ->\r\n\tpush()\r\n\tfc()\r\n\tsw 4\r\n\tsc 0 # BLACK\r\n\ttranslate width/2, height/2\r\n\tscale SCALE\r\n\tfor [x,y],i in track\r\n\t\tcircle x-cx, y-cy, 10 * (track.length-i)\r\n\tpop()\r\n\r\ndrawControl = ->\r\n\r\n\tlatLon2 = LatLon trgLat,trgLon\r\n\tlatLon1 = LatLon gpsLat,gpsLon\r\n\r\n\tbearing = latLon1.bearingTo latLon2\r\n\tbuttons[1].prompt = int bearing\r\n\tbuttons[3].prompt = currentControl\r\n\r\n\tcontrol = controls[currentControl]\r\n\tx = control[0]\r\n\ty = control[1]\r\n\r\n\tpush()\r\n\tsc()\r\n\tfc 0,0,0,0.25\r\n\ttranslate width/2, height/2\r\n\tscale SCALE\r\n\tcircle x-cx, y-cy, 75\r\n\tpop()\r\n\r\ndrawButtons = -> button.draw() for button in buttons\r\n\r\nxdraw = ->\r\n\tbg 1,1,0\r\n\tfc()\r\n\timage img, 0,0, width,height, cx-width/SCALE/2, cy-height/SCALE/2, width/SCALE, height/SCALE\r\n\tdrawTrack()\r\n\tdrawControl()\r\n\tdrawButtons()\r\n\ttextSize 50\r\n\tfor message,i in messages\r\n\t\ttext message,width/2,50*(i+1)\r\n\r\nsetTarget = (key) ->\r\n\tif controls[currentControl] == null then return\r\n\tsoundQueue = 0\r\n\tcurrentControl = key\r\n\tcontrol = controls[currentControl]\r\n\tx = control[0]\r\n\ty = control[1]\r\n\t[trgLat,trgLon] = gps.bmp2gps x,y\t\r\n\r\nmyMousePressed = (mx,my) ->\r\n\tfor button in buttons\r\n\t\tif button.contains mx,my\r\n\t\t\tbutton.click()\r\n\t\t\txdraw()\r\n\t\t\treturn\r\n\tarr = ([dist(cx-width/SCALE/2 + mx/SCALE, cy-height/SCALE/2+my/SCALE, control[0], control[1]), key] for key,control of controls)\r\n\tclosestControl = _.min arr, (item) -> item[0]\r\n\t[d,key] = closestControl\r\n\tif d < 85\r\n\t\tsetTarget key\r\n\t\txdraw()\r\n\r\n# only for debug on laptop\r\n# mousePressed = -> myMousePressed mouseX,mouseY\r\n"
  ]
}