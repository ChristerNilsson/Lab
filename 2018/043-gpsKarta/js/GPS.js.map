{
  "version": 3,
  "file": "GPS.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\GPS.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class GPS # hanterar GPS konvertering\r\n\tconstructor : (@nw,@ne,@se,@sw,@w,@h) ->\r\n\t\tprint 'constructor'\r\n\r\n\tmap_lon : (mlat,mlon,a,b) ->\r\n\t\tx = map mlon, a.lon,b.lon, a.x,b.x\r\n\t\ty = map mlon, a.lon,b.lon, a.y,b.y \r\n\t\tlat = map mlon, a.lon,b.lon, a.lat,b.lat\r\n\t\tlon = mlon\r\n\t\t{lat,lon,x,y} \t\r\n\r\n\tmap_lat : (mlat,mlon,a,b) ->\r\n\t\tx = map mlat, a.lat,b.lat, a.x,b.x\r\n\t\ty = map mlat, a.lat,b.lat, a.y,b.y\r\n\t\tlat = mlat\r\n\t\tlon = map mlat, a.lat,b.lat, a.lon,b.lon\r\n\t\t{lat,lon,x,y} \t\r\n\r\n\tgps2bmp : (mlat,mlon) ->\r\n\t\tq1 = @map_lon mlat,mlon,@nw,@ne\r\n\t\tq2 = @map_lon mlat,mlon,@sw,@se\r\n\t\tx = round map mlat, q1.lat,q2.lat, q1.x,q2.x\r\n\t\ty = round map mlat, q1.lat,q2.lat, q1.y,q2.y\r\n\t\t[x,y]\r\n\r\n\tassert_gps2bmp : (p,error) ->\r\n\t\t[x,y] = @gps2bmp p.lat,p.lon \r\n\t\tassert error, [x-p.x, y-p.y]\r\n\r\n\tmap_x : (x,y,a,b) ->\r\n\t\tlon = map x, a.x,b.x, a.lon,b.lon\r\n\t\tlat = map x, a.x,b.x, a.lat,b.lat  \r\n\t\t{lat,lon,x,y} \t\r\n\r\n\tmap_y : (x,y,a,b) ->\r\n\t\tlon = map y, a.y,b.y, a.lon,b.lon\r\n\t\tlat = map y, a.y,b.y, a.lat,b.lat  \r\n\t\t{lat,lon,x,y} \t\r\n\r\n\tbmp2gps : (mx,my) ->\r\n\t\tq1 = @map_x mx,0,@nw,@ne\r\n\t\tq2 = @map_x mx,HEIGHT,@sw,@se\r\n\t\tq = @map_y mx,my,q1,q2\r\n\t\t[myround(q.lat,6),myround(q.lon,6)]\r\n\r\n\tassert_bmp2gps : (p,error) ->\r\n\t\t[lat,lon] = @bmp2gps p.x,p.y \r\n\t\tassert error, [myround(100000*(lat-p.lat),6), myround(50000*(lon-p.lon),6)]\r\n"
  ]
}