"use strict";

// Generated by CoffeeScript 2.3.2
var computerMove, draw, game, humanMove, mcts, mousePressed, setup, state, winner;

game = null;

mcts = null;

state = null;

winner = null;

setup = function setup() {
  createCanvas(200, 200);
  game = new Game_C4();
  mcts = new MonteCarlo(game);
  state = game.start();
  winner = game.winner(state);
  return computerMove();
};

computerMove = function computerMove() {
  var play, stats;
  mcts.runSearch(state, 1); // 0.05 second
  stats = mcts.getStats(state);
  play = mcts.bestPlay(state, "robust");
  state = game.nextState(state, play);
  return winner = game.winner(state);
};

humanMove = function humanMove() {
  var i, index, k, len, play, ref, row;
  index = Math.floor((mouseX - 10) / 20);
  ref = range(6);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    if (state.board[i][index] === 0) {
      row = i;
    }
  }
  play = new Play(row, index);
  state = game.nextState(state, play);
  return winner = game.winner(state);
};

mousePressed = function mousePressed() {
  humanMove();
  if (winner) {
    return draw();
  }
  return computerMove();
};

draw = function draw() {
  var col, i, item, j, k, l, len, len1, ref;
  bg(0.5);
  ref = state.board;
  for (i = k = 0, len = ref.length; k < len; i = ++k) {
    col = ref[i];
    for (j = l = 0, len1 = col.length; l < len1; j = ++l) {
      item = col[j];
      fc(0.5);
      if (item === -1) {
        fc(1, 0, 0);
      }
      if (item === +1) {
        fc(1, 1, 0);
      }
      circle(20 + 20 * j, 20 + 20 * i, 10);
    }
  }
  if (winner) {
    textSize(50);
    textAlign(CENTER, CENTER);
    fc(0);
    return text("winner", width / 2, 0.8 * height);
  }
};
//# sourceMappingURL=sketch.js.map
