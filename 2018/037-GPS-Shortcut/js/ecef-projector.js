"use strict";

// Generated by CoffeeScript 2.0.3
// (C) 2015 Seth Lakowske
var ECEFToLLA, FLATTENING, LLAToECEF, POLAR_RADIUS, RADIUS, a, asqr, b, bsqr, e, eprime, f, getN, mydegrees, myradians, project, unproject;

RADIUS = 6378137; // meter

FLATTENING = 1 / 298.257223560;

POLAR_RADIUS = 6356752.3; // meter

mydegrees = function mydegrees(angle) {
  return angle * 180 / Math.PI;
};

myradians = function myradians(angle) {
  return angle * Math.PI / 180;
};

a = RADIUS;

f = FLATTENING;

b = POLAR_RADIUS;

asqr = a * a;

bsqr = b * b;

e = Math.sqrt((asqr - bsqr) / asqr);

eprime = Math.sqrt((asqr - bsqr) / bsqr);

project = function project(latitude, longitude, altitude) {
  return LLAToECEF(myradians(latitude), myradians(longitude), altitude);
};

unproject = function unproject(x, y, z) {
  var gps;
  gps = ECEFToLLA(x, y, z);
  return [mydegrees(gps[0]), mydegrees(gps[1])];
};

LLAToECEF = function LLAToECEF(latitude, longitude, altitude) {
  var N, X, Y, Z, ratio;
  N = getN(latitude);
  ratio = bsqr / asqr;
  X = (N + altitude) * Math.cos(latitude) * Math.cos(longitude);
  Y = (N + altitude) * Math.cos(latitude) * Math.sin(longitude);
  Z = (ratio * N + altitude) * Math.sin(latitude);
  return [X, Y, Z];
};

ECEFToLLA = function ECEFToLLA(X, Y, Z) {
  var N, altitude, costheta, denom, latitude, longitude, num, p, sintheta, theta;
  p = Math.sqrt(X * X + Y * Y);
  theta = Math.atan(Z * a / (p * b));
  sintheta = Math.sin(theta);
  costheta = Math.cos(theta);
  num = Z + eprime * eprime * b * sintheta * sintheta * sintheta;
  denom = p - e * e * a * costheta * costheta * costheta;
  latitude = Math.atan(num / denom);
  longitude = Math.atan(Y / X);
  N = getN(latitude);
  altitude = p / Math.cos(latitude) - N;
  if (X < 0 && Y < 0) {
    longitude -= Math.PI;
  }
  if (X < 0 && Y > 0) {
    longitude += Math.PI;
  }
  return [latitude, longitude, altitude];
};

getN = function getN(latitude) {
  var denom, sinlatitude;
  sinlatitude = Math.sin(latitude);
  denom = Math.sqrt(1 - e * e * sinlatitude * sinlatitude);
  return a / denom;
};

print([-2694044.411163704, -4266368.805505009, 3888310.602231939]);

print(project(37.8043722, -122.2708026, 0.0));
//# sourceMappingURL=ecef-projector.js.map
