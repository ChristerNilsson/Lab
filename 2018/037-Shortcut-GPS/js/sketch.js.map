{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# file:///C:/Lab/2018/037-GPS-Shortcut/index.html?radius=50&level=3&seed=0.5&nr=1\r\n\r\n# translate, rotate och scale visade sig olämpliga här.\r\n# Bl a då det gällde att detektera krock med röda halvcirklar.\r\n\r\nRUNNING = 0\r\nREADY = 1\r\nDEAD = 2 \r\nstate = RUNNING\r\n\r\nreleased = true\r\ngps = null\r\n\r\nrotation1 = 0 # degrees\r\nrotation2 = 0 # degrees\r\n\r\n[xo,yo] = [null,null] # origo i mitten av skärmen\r\n\r\nSCALE = null\r\nparams = null\r\nTRACKED = 5 # circles shows the player's position\r\n\r\nbuttons = []\r\nhist = []\r\nposition = null # gps position\r\ntrack = [] # positions\r\n\r\n[a,b] = [null,null]\r\ncount = 0\r\n[start,stopp] = [null,null]\r\ndump = null\r\n\r\nclass GPS # hanterar GPS konvertering\r\n\tconstructor : (@lat,@lon,@w,@h) ->\r\n\t\tp0 = LatLon @lat,@lon\r\n\t\tp1 = p0.destinationPoint @h/2, 0\r\n\t\t@lat2 = p1.lat\r\n\t\tp2 = p0.destinationPoint @w/2, 90\r\n\t\t@lon2 = p2.lon\r\n\t\tp3 = p0.destinationPoint @h/2, 180\r\n\t\t@lat1 = p3.lat\r\n\t\tp4 = p0.destinationPoint @w/2, 270\r\n\t\t@lon1 = p4.lon\r\n\ttoXY : (lat,lon) ->\r\n\t\tx = xo + SCALE * map lon, @lon1, @lon2, -@w/2, @w/2\r\n\t\ty = yo + SCALE * map lat, @lat2, @lat1, -@h/2, @h/2 # turned\r\n\t\t{x,y}\r\n\ttoWGS84 : (x,y) -> # not used\r\n\t\tlon = map (x-xo)/SCALE, -@w/2, @w/2, @lon1, @lon2\r\n\t\tlat = map (y-yo)/SCALE, -@h/2, @h/2, @lat1, @lat2\r\n\t\t{lat,lon}\r\n\r\nclass Text\r\n\tconstructor : (@txt,@x,@y,@r=1,@g=1,@b=1) ->\r\n\tdraw : ->\r\n\t\tfc @r,@g,@b\r\n\t\ttext @txt,@x,@y\r\n\texecute : ->\r\n\r\nclass Button\r\n\tconstructor : (@vinkel1,@radius1,@radius2,@txt,@r=1,@g=1,@b=1) ->\r\n\t\t@active = false\r\n\t\t@setVinkel1 @vinkel1\r\n\t\t@setVinkel2 0\r\n\r\n\tsetVinkel1 : (v1) ->\r\n\t\t@vinkel1 = v1\r\n\t\t@x = xo + @radius1 * cos @vinkel1\r\n\t\t@y = yo + @radius1 * sin @vinkel1\r\n\r\n\tsetVinkel2 : (v2) -> @v2 = v2\r\n\r\n\tdraw : ->\r\n\t\tsc()\r\n\t\t@active = @inCircle()\r\n\t\tif @radius2 > 0\t\t\t\r\n\t\t\tif params.speed2 > 0 and @radius1 > 0\r\n\t\t\t\tif @inZone() and state == RUNNING then state = DEAD\r\n\t\t\t\td = 2 * @radius2\r\n\t\t\t\tfc 0.75,0.75,0.75,0.5\r\n\t\t\t\tarc @x,@y,d,d,@v2,180+@v2\r\n\t\t\t\tfc 1,0,0,0.5\r\n\t\t\t\tarc @x,@y,d,d,180+@v2,@v2\r\n\t\t\telse\r\n\t\t\t\tfc 0.75\r\n\t\t\t\tcircle @x,@y,@radius2\r\n\t\tsc 1\r\n\t\tfc()\r\n\t\tcircle @x,@y,@radius2\r\n\r\n\t\tsc()\r\n\t\tfc @r,@g,@b\r\n\r\n\t\tpush()\r\n\t\ttranslate @x,@y\r\n\t\tif params.speed2>0 and @radius1>0 then rotate rotation2\r\n\t\ttext @txt,0,0\r\n\t\tpop()\r\n\r\n\t\tif @active \r\n\t\t\tfc 1,1,0,0.5 # yellow\r\n\t\t\tcircle @x,@y,@radius2\r\n\r\n\texecute : ->\r\n\t\tif @inCircle()\r\n\t\t\t@event()\r\n\t\t\tif a==b\r\n\t\t\t\tstate = READY \r\n\t\t\t\tstopp = millis()\r\n\r\n\tinCircle : -> @radius2 > dist position.x,position.y,@x,@y\r\n\r\n\tinZone : -> # the red half circle \r\n\t\tx1 = @x + @radius2 * cos rotation2-90\r\n\t\ty1 = @y + @radius2 * sin rotation2-90\r\n\t\tx2 = @x + @radius2 * cos rotation2+90\r\n\t\ty2 = @y + @radius2 * sin rotation2+90\r\n\t\tdist1 = dist position.x,position.y,x1,y1\r\n\t\tdist2 = dist position.x,position.y,x2,y2\r\n\t\t@inCircle() and dist1 < dist2 \r\n\r\nspara = (value) ->\r\n\tcount++\r\n\thist.push a\r\n\ta = value\r\n\tbuttons[9].txt = params.level - count\r\n\tbuttons[0].txt = a\r\n\r\nlocationUpdate = (p) ->\r\n\t#dump = p.timestamp\r\n\tlat = p.coords.latitude\r\n\tlon = p.coords.longitude\r\n\tif gps == null then gps = new GPS lat,lon,width,height\r\n\tposition = gps.toXY lat,lon\r\n\ttrack.push position\r\n\tif track.length > TRACKED then track.shift()\r\n\r\nlocationUpdateFail = (error) ->\r\n\t#dump = error.code\r\n\r\nsetup = ->\r\n\tcreateCanvas windowWidth,windowHeight\r\n\r\n\t[xo,yo] = [width/2,height/2]\r\n\r\n\tparams = {}\r\n\tif '?' in window.location.href\r\n\t\targs = getParameters()\r\n\t\tparams.nr = if args.nr? then args.nr\r\n\t\tparams.level = if args.level? then parseInt args.level\r\n\t\tparams.seed = if args.seed? then parseFloat args.seed\r\n\t\tparams.radius1 = if args.radius1? then parseInt args.radius1 \r\n\t\tparams.radius2 = if args.radius2? then parseInt args.radius2 \r\n\t\tparams.speed1 = if args.speed1? then parseFloat args.speed1 \r\n\t\tparams.speed2 = if args.speed2? then parseFloat args.speed2 \r\n\t\tparams.cost = if args.cost? then parseInt args.cost \r\n\t\tprint params\r\n\r\n\tif not params.nr? then params.nr = '0'\r\n\tif not params.level? then params.level = 3 \r\n\tif not params.seed? then params.seed = 0.0\r\n\tif not params.radius1? then params.radius1 = 50\r\n\tif not params.radius2? then params.radius2 = 0.3 * params.radius1\r\n\tif not params.speed1? then params.speed1 = 0.5/params.radius1\r\n\tif not params.speed2? then params.speed2 = 0.1/params.radius2\r\n\tif not params.cost? then params.cost = params.radius1\r\n\tprint params \r\n\r\n\td = new Date()\r\n\tparams.seed += 31 * d.getMonth() + d.getDate() + 0.1 * params.level + 0.01 * params.radius1\r\n\t[a,b] = createProblem params.level,params.seed\r\n\r\n\tSCALE = min(width,height)/params.radius1/3\r\n\r\n\tposition = {x:xo, y:yo}\r\n\ttrack = [position]\r\n\r\n\tstart = millis()\r\n\r\n\tangleMode DEGREES\r\n\ttextAlign CENTER,CENTER\r\n\ttextSize 80\r\n\r\n\tws = 0.35*width\r\n\ths = 0.43*height\r\n\r\n\tbuttons.push new Text a,xo-ws,yo-hs,1,0,0 # a\r\n\tbuttons.push new Text b,xo+ws,yo-hs,0,1,0 # b\r\n\tbuttons.push new Text params.nr,xo-ws,yo+hs\r\n\tbuttons.push new Text '0',xo,yo+hs # sekunder\r\n\tbuttons.push new Text '0',xo+ws,yo+hs # count\r\n\tbuttons.push new Text params.radius1 + 'm',xo,yo-hs # radius1\r\n\r\n\tlabels = \"+2 *2 /2\".split ' '\r\n\tn = labels.length\r\n\tfor txt,i in labels\r\n\t\tbutton = new Button i*360/n,SCALE*params.radius1,SCALE*params.radius2,txt\r\n\t\tbuttons.push button\r\n\tbuttons[6].event = -> spara a+2\r\n\tbuttons[7].event = -> spara a*2\r\n\tbuttons[8].event = -> if a%2==0 then spara a//2\r\n\r\n\tbuttons.push new Button 0,0,SCALE*params.radius2,params.level # undo\r\n\tbuttons[9].event = ->\r\n\t\tif hist.length > 0\r\n\t\t\ta = hist.pop()\r\n\t\t\tbuttons[0].txt = a\r\n\r\n\tnavigator.geolocation.watchPosition locationUpdate, locationUpdateFail, \r\n\t\tenableHighAccuracy: true\r\n\t\tmaximumAge: 30000\r\n\t\ttimeout: 27000\r\n\r\n\tstate = RUNNING\r\n\r\ndraw = ->\r\n\tbg 0\r\n\tfc()\r\n\tsc 1\r\n\tsw 2\r\n\tcircle xo,yo,SCALE*params.radius1\r\n\r\n\tbuttons[9].txt = params.level - hist.length \r\n\tif state==READY   then buttons[3].txt = round(stopp-start)/1000 + params.cost*count\r\n\tif state==RUNNING then buttons[3].txt = round (millis()-start)/1000 + params.cost*count\r\n\tbuttons[4].txt = count\r\n\r\n\tfor button in buttons\r\n\t\tbutton.draw()\r\n\r\n\tfactor = 60 / constrain frameRate(),1,60\r\n\trotation1 = (rotation1 + factor * params.speed1) %% 360\r\n\trotation2 = (rotation2 - factor * params.speed2/0.3) %% 360\r\n\r\n\tfor i in range 6,9\r\n\t\tbutton = buttons[i]\r\n\t\tbutton.setVinkel1 rotation1+i*120\r\n\t\tbutton.setVinkel2 rotation2\r\n\r\n\tif state == READY \r\n\t\tfc 0,1,0,0.5\r\n\t\trect 0,0,width,height\r\n\tif state == DEAD\r\n\t\tfc 1,0,0,0.5\r\n\t\trect 0,0,width,height\r\n\r\n\tfc()\r\n\tsw 2\r\n\tfor p,i in track\r\n\t\tif personOverActive() then sc 0 else sc 1,1,0\r\n\t\tcircle p.x, p.y, 5*(track.length-i)\r\n\r\n\tfc 1\r\n\tpush()\r\n\ttextSize 20\r\n\tif dump then text dump,100,200\r\n\r\n\tpop()\r\n\r\npersonOverActive = ->\r\n\tfor i in [6,7,8,9]\r\n\t\tbutton = buttons[i]\r\n\t\tif button.inCircle() then return true\r\n\tfalse  \r\n\r\ncreateProblem = (level,seed) ->\r\n\tn = int Math.pow 2, 4+level/3 # nodes\r\n\ta = myrandom 1,n/2\r\n\tlst = [a]\r\n\ttree = [a]\r\n\tlst2 = []\r\n\tsave = (item) ->\r\n\t\tif item <= n and item not in tree\r\n\t\t\tlst2.push item\r\n\t\t\ttree.push item\r\n\tfor j in range params.level\r\n\t\tlst2 = []\r\n\t\tfor item in lst\r\n\t\t\tsave item + 2 \r\n\t\t\tsave item * 2\r\n\t\t\tif item%2 == 0 then save item / 2\r\n\t\tlst = lst2\r\n\ti = myrandom 0,lst.length\r\n\tb = lst[i]\r\n\t[a,b]\r\n\r\nmyrandom = (a,b) ->\r\n  x = 10000 * Math.sin params.seed\r\n  x = x - Math.floor x\r\n  params.seed = x \r\n  int a+x*(b-a)\r\n\r\nmouseReleased = -> # to make Android work\r\n\treleased = true\r\n\tfalse\r\n\r\nmousePressed = ->\r\n\tif not released then return # to make Android work\r\n\treleased = false\r\n\tif state != RUNNING then return\r\n\tfor button in buttons\r\n\t\tbutton.execute()\r\n"
  ]
}