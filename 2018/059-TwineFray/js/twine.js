'use strict';

// Generated by CoffeeScript 2.0.3
var button,
    data,
    display,
    draw,
    enemy,
    events,
    goto,
    mousePressed,
    person,
    rand,
    setup,
    t,
    indexOf = [].indexOf;

person = {};

enemy = {};

events = {};

data = []; // texts and buttons

t = function t(txt) {
  return data.push({ txt: txt });
};

button = function button(name) {
  var txt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  return data.push({ name: name, txt: txt });
};

display = function display(txt) {
  return events[txt]();
};

goto = function goto(loc) {
  return display(loc);
};

rand = function rand(a, b) {
  return int(a + random(b - a));
};

setup = function setup() {
  createCanvas(600, 600);
  textSize(16);
  return events.Start();
};

draw = function draw() {
  var i, item, j, len, results, s;
  bg(0.75);
  results = [];
  for (i = j = 0, len = data.length; j < len; i = ++j) {
    item = data[i];
    if ('name' in item) {
      // button
      s = item.txt;
      if (s === '') {
        s = item.name;
      }
      fc(0, 0, 1);
      results.push(text(s, 20, 20 + 20 * i)); // text
    } else {
      fc(0);
      results.push(text(item.txt, 20, 20 + 20 * i));
    }
  }
  return results;
};

mousePressed = function mousePressed() {
  var i, item, j, len;
  for (i = j = 0, len = data.length; j < len; i = ++j) {
    item = data[i];
    if (indexOf.call(_.keys(item), 'name') >= 0) {
      if (20 * i < mouseY && mouseY < 20 + 20 * i) {
        data = [];
        events[item.name]();
      }
    }
  }
  return print(JSON.stringify(person));
};
//# sourceMappingURL=twine.js.map
