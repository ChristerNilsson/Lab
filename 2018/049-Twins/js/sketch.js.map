{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": ";;;;;AAAA,IAAA,QAAA,MAAA,GAAA,MAAA,MAAA,GAAA,QAAA,MAAA,SAAA,QAAA,SAAA,OAAA,UAAA,SAAA,cAAA,UAAA,OAAA;;AAAA,OAAO;;AACP,OAAO;;AACP,OAAO,CAAC;;AACR,IAHA,AAGI;;AACJ,IAAI;;AACJ,SAAS,AAAwD,yDAAxD,AAAyD,MAAzD,AAA+D;;AAExE,WAAW;;AACX,UAAU;;AAEV,QAAQ;AACP,eAAA,AAAa,KAAb,AAAiB;AACjB,WAAA,AAAS;AACT,WAAS,MAAT,AAAe;SAHR,AAIP;;;AAED,WAAW,oBACV;MAAA,YAAA,GAAA,GAAA,GAAA,GAAA,KAAA,MAAA,KAAA,MAAA;AAAA,eAAa,AACb;;AAAA,OAAA,kCAAA;;AACC,AAAU,eAAV,AAAW,KAAK,IADjB,AACC,AAAoB;;AACrB,eAAa,AAAC,EAAD,AAAE,QAAF,AAAU;AAEvB,MAAI,IAAA,AAAI,MAAJ,AAAU,AACd;eAAA;;AAAA,OAAA,qCAAA;;AACC,AAAE,MAAF,AAAE,KAAK,IAAA,AAAI,MAAJ,AAAU;;yBACjB;mBAAA;;AAAA,WAAA,qCAAA;;AACC,YAAG,MAAA,AAAM,KAAN,AAAQ,MAAA,OAAR,AAAQ,AAAK,AAAM,CAAnB,IAAmB,MAAA,AAAM,KAAN,AAAQ,MAAA,OAA9B,AAAsB,AAAQ,AAAK;wBAClC,AAAE,EAAA,AAAG,GAAL,AAAK,KADN,AACW;AADX,eAAA;wBAGC,AAAE,EAAA,AAAG,GAAL,AAAK,KAAK,AAAU,WAHrB,AAGW,AAAW;AAJvB;AAAA;;AAFD;AAAA;SAPU;;;AAeX,OAAO,gBACN;MAAA,MAAA,GAAA,GAAA,GAAA,GAAA,KAAA,MAAA,MAAA,GAAA,KAAA,MAAA;AAAA,KAAA,AAAG;AACH,YAAA,AAAU,MAAV,AAAe;AACf,YAAA,AAAU,QAAV,AAAiB;AACjB,KAAA,AAAG;AACH,KAAA,AAAG,AACH;;AAAA,OAAA,kCAAA;YACC;;AAAA,SAAA,qCAAA;;AACC,SAAA,AAAG;AACH,SAAA,AAAG;AACH,WAAK,OAAL,AAAU,GAAE,OAAZ,AAAiB,GAAjB,AAAmB,MAAnB,AAAwB;AACxB,aAAO,AAAE,EAAA,AAAG,GAAA;AACZ,UAAG,QAAH,AAAW;AACV,aAAK,AAAO,OAAZ,AAAY;AACZ;AACA,aAAK,AAAE,EAAA,AAAG,GAAV,AAAU,IAAG,OAAb,AAAkB,GAAE,OAHrB,AAGC,AAAyB;AAR3B;AADD;;AAUA,OAAA,AAAK,UAAL,AAAc,IAAG,OAAjB,AAAsB,AACtB;;AAAA,OAAA,yCAAA;AAAI;;AAAA,AAAC;AAAD,AAAG;;AACN,OAAA,AAAG,GAAH,AAAK,GAAL,AAAO,GAAP,AAAS;AACT;iBACA,OAAO,OAAP,AAAY,GAAE,OAAd,AAAmB,GAAE,OAAA,AAAK,IAH3B,AAGC,AAA4B;AAH7B;SAjBM;;;AAsBP,SAAS,gBAAA,AAAC,GAAD,AAAG;SAAM,KAAA,AAAK,KAAL,AAAK,IAAL,AAAS,AAAS,IAAlB,IAAkB,KAAA,AAAK,KAAL,AAAK,IAAhC,AAA2B,AAAS;;;AAE7C,eAAe;MACd,GAAA,IAAA,GAAA;AAAA,aAAQ,YAAC,CAAC,SAAO,OAAR,AAAa,KAAd,AAAkB,kBAAK,CAAC,SAAO,OAAR,AAAa,KAApC,AAAwC;AAAhD,AAAC;AAAD,AAAG;;AACH,MAAG,CAAI,OAAA,AAAO,GAAd,AAAO,AAAS,IAAO;AAAvB;;AACA,MAAG,AAAQ,SAAR,AAAS,WAAZ,AAAsB;AACrB,QAAG,AAAE,EAAA,AAAG,GAAL,AAAK,OAAR,AAAc;aAAU,AAAQ,SAAR,AAAS,KAAK,CAAA,AAAC,GAAvC,AAAwB,AAAc,AAAG;AAD1C;AAAA;AAAA,AAGC,oCAAU,AAAS,SAAA;;AAAnB,AAAC;AAAD,AAAI;;AACJ,QAAG,MAAA,AAAG,MAAO,MAAb,AAAgB,IAAQ;aAAO,AAAQ,SAAvC,AAA+B,AAAS;;AACxC,QAAG,AAAE,EAAA,AAAG,GAAL,AAAK,KAAK,AAAE,EAAA,AAAI,IAAhB,AAAgB,QAAO,IAA1B,AAA4B;AAC3B,UAAG,MAAA,AAAM,GAAN,AAAQ,GAAR,AAAU,IAAV,AAAa,OAAO,OAAA,AAAO,GAAP,AAAS,GAAT,AAAW,IAAlC,AAAuB,AAAc;AACpC,AAAE,UAAA,AAAG,GAAL,AAAK,KAAK,AAAE,EAAA,AAAI,IAAN,AAAM,MAAM;eACtB,AAAQ,SAFT,AAEC,AAAS;AAHX;AALD;AAHc;AAvDf;;;;AAsEA,QAAQ,eAAA,AAAC,IAAD,AAAI,IAAJ,AAAO,IAAP,AAAU,IACjB;MAAA,OAAA,IAAA,IAAA,OAAA,OAAA,QAAA,GAAA,KAAA,GAAA,KAAA,MAAA,MAAA,SAAA,KAAA,OAAA,OAAA,QAAA,GAAA,IAAA,GAAA;AAAA,UAAQ,CAAA,AAAC,GAAD,AAAG,IAAH,AAAM,IAAG,CAAT,AAAU;AAClB,UAAQ;AACR,AAAK,QAAL,AAAM,KAAN,AAAW;AACX,YAAU;AACV,AAAQ,UAAA,CAAA,AAAC,IAAT,AAAQ,AAAI,OAAO,AACnB;SAAM,AAAK,MAAL,AAAM,SAAZ,AAAqB;AACpB,YAAQ;AACR,AAAK,UAAL,AAAM,KAAK,UAAA,AAAC,GAAD,AAAG;aAAM,AAAE,EAAF,AAAE,KAAG,AAAE,EAAhB,AAAgB;AAA3B;AACA,YAAQ;AACR,SAAA,oCAAA;AAAI,0CACH;;AADG,AAAC;AAAD,AAAQ;AAAR,AAAW;AAAX,AAAc;;;AACjB,WAAA,sDAAA;AAAI,4CACH;;AADG,AAAC;AAAD,AAAI;AACP,AAAC,YAAQ,KAAD,AAAI;AAAZ,AAAG,AAAK,YAAO,KAAP,AAAU;;AAClB,cAAM,CAAA,AAAC,GAAD,AAAG;AACT,gBAAQ;AACR,YAAG,UAAA,AAAS,UAAW,WAAU,CAAjC,AAAkC;AAAlC,AAAyC;;AACzC,eAAO,CAAA,AAAC,OAAD,AAAO,GAAP,AAAS,GAAT,AAAW;AAClB,YAAG,MAAA,AAAG,MAAO,MAAb,AAAgB,IAAQ;iBAAO,KAA/B,AAAoC;;AACpC,YAAG,OAAA,AAAO,GAAV,AAAG,AAAS;AACX,cAAG,AAAE,EAAA,AAAG,GAAL,AAAK,OAAR,AAAY;AACX,gBAAG,EAAA,OAAA,AAAW,YAAW,AAAQ,QAAA,AAAK,KAAb,AAAa,KAAK,AAAK,KAAhD,AAAgD;AAC/C,AAAQ,sBAAR,AAAQ,OAAO;AACf,AAAK,oBAAL,AAAM,KAFP,AAEC,AAAW;AAHb;AADD;AAPD;AADD;AAJD;;SANO,AAuBP;;;AAED,SAAS,gBAAA,AAAC,IAAD,AAAI,IAAJ,AAAO,IAAP,AAAU;MAClB,MAAA,MAAA,GAAA;AAAA,SAAO;AACP,SAAO,AACP;AAAA,AAAC,GAFD,GAES,KAAD,AAAI;AAAZ,AAAG,AAAK,MAAO,KAAP,AAAU,AAClB;;SAAM,OAAA,AAAO,GAAb,AAAM,AAAS;AACd,QAAG,AAAE,EAAA,AAAG,GAAL,AAAK,OAAR,AAAc,MAAU;aAAO,CAAA,AAAC,MAAhC,AAA+B,AAAM;;AACrC,AAAI,SAAJ,AAAK,KAAL,AAAU;AACV,AAAI,SAAJ,AAAK,KAAL,AAAU,AACV;gBAAQ,CAAC,IAAD,AAAG,IAAG,IAJf,AAIS,AAAQ;AAAhB,AAAC;AAAD,AAAG;;SACJ,CAAA,AAAC,MATO,AASR,AAAM;;;AAEP,UAAU,iBAAA,AAAC,IAAD,AAAI,IACb;MAAA,OAAA,GAAA,GAAA,KAAA,MAAA,KAAA,MAAA,KAAA,GAAA;AAAA,QAAM,AACN;;AAAA,OAAA,kCAAA;;AACC,YAAQ,AACR;;AAAA,SAAA,qCAAA;;AACC,UAAG,AAAE,EAAA,AAAG,GAAL,AAAK,OAAR,AAAc;AAAU,gBAAxB,AAAgC;AADjC;;AAEA,QAAG,CAAH,AAAO;AAAW,AAAG,UAAH,AAAI,KAAtB,AAAkB,AAAS;AAJ5B;;SAFS,AAOT;;;AAED,UAAU,iBAAA,AAAC,IAAD,AAAI,IACb;MAAA,OAAA,GAAA,GAAA,KAAA,MAAA,KAAA,MAAA,KAAA,GAAA;AAAA,QAAM,AACN;;AAAA,OAAA,kCAAA;;AACC,YAAQ,AACR;;AAAA,SAAA,qCAAA;;AACC,UAAG,AAAE,EAAA,AAAG,GAAL,AAAK,OAAR,AAAc;AAAU,gBAAxB,AAAgC;AADjC;;AAEA,QAAG,CAAH,AAAO;AAAW,AAAG,UAAH,AAAI,KAAtB,AAAkB,AAAS;AAJ5B;;SAFS,AAOT;;;AAED,SAAS,gBAAA,AAAC,IAAD,AAAI,IAAJ,AAAO,IAAP,AAAU,IAClB;MAAA,MAAA,MAAA,MAAA,MAAA;AAAA,SAAO,OAAA,AAAO,IAAP,AAAU,IAAV,AAAa,GAAE,CAAf,AAAgB,AAAG,GAAA,AAAE,GAArB,AAAsB,OAAO,OAAA,AAAO,IAAP,AAAU,IAAV,AAAa,GAAb,AAAe,AAAG,GAA/C,AAA+C;AACtD,SAAO,OAAA,AAAO,IAAP,AAAU,IAAV,AAAa,GAAE,CAAf,AAAgB,AAAG,GAAA,AAAE,GAArB,AAAsB,OAAO,OAAA,AAAO,IAAP,AAAU,IAAV,AAAa,GAAb,AAAe,AAAG,GAA/C,AAA+C;AACtD,SAAO,QAAQ,AAAC,EAAD,AAAE,IAAI,CAAA,AAAC,IAAP,AAAM,AAAI,OAAlB,AAAuB,GAAE,AAAC,EAAD,AAAE,IAAI,CAAA,AAAC,IAAhC,AAAyB,AAAM,AAAI;AAC1C,SAAO,AAAC,EAAD,AAAE,aAAF,AAAe,MAAf,AAAqB,MAArB,AAA2B;AAElC,SAAO,OAAA,AAAO,IAAP,AAAU,IAAG,CAAb,AAAc,GAAd,AAAgB,AAAG,GAAA,AAAE,GAArB,AAAsB,OAAO,OAAA,AAAO,IAAP,AAAU,IAAV,AAAa,GAAb,AAAe,AAAG,GAA/C,AAA+C;AACtD,SAAO,OAAA,AAAO,IAAP,AAAU,IAAG,CAAb,AAAc,GAAd,AAAgB,AAAG,GAAA,AAAE,GAArB,AAAsB,OAAO,OAAA,AAAO,IAAP,AAAU,IAAV,AAAa,GAAb,AAAe,AAAG,GAA/C,AAA+C;AACtD,SAAO,QAAQ,AAAC,EAAD,AAAE,IAAI,CAAA,AAAC,IAAP,AAAM,AAAI,OAAlB,AAAuB,GAAE,AAAC,EAAD,AAAE,IAAI,CAAA,AAAC,IAAhC,AAAyB,AAAM,AAAI;AAC1C,SAAO,AAAC,EAAD,AAAE,aAAF,AAAe,MAAf,AAAqB,MAArB,AAA2B;SAElC,AAAI,KAAJ,AAAK,SAAL,AAAc,KAAK,AAAI,KAAJ,AAAK,SAXhB,AAWyB",
  "sourcesContent": [
    "SIZE = 12\r\nTILE = 60\r\nFREE = -1\r\nN = 10 # 2 3 4 5 6 7 8 9 10\r\nb = null\r\nCOLORS = '#f00 #0f0 #00f #ff0 #000 #fff #f0f #0ff #444 #bbb #123'.split ' '\r\n\r\nselected = []\r\nmessage = ''\r\n\r\nsetup = ->\r\n\tcreateCanvas 800,800\r\n\trectMode CENTER\r\n\ttextSize 0.8 * TILE\r\n\tmakeGame()\r\n\r\nmakeGame = ->\r\n\tcandidates = []\r\n\tfor i in range 100\r\n\t\tcandidates.push i % N\r\n\tcandidates = _.shuffle candidates\r\n\r\n\tb = new Array SIZE\r\n\tfor i in range SIZE\r\n\t\tb[i] = new Array SIZE\r\n\t\tfor j in range SIZE\r\n\t\t\tif i in [0,SIZE-1] or j in [0,SIZE-1]\r\n\t\t\t\tb[i][j] = FREE\r\n\t\t\telse\r\n\t\t\t\tb[i][j] = candidates.pop()\r\n\r\ndraw = ->\r\n\tbg 1 \r\n\ttranslate TILE,TILE\r\n\ttextAlign CENTER,CENTER\r\n\tfc 1\r\n\tsc 0\r\n\tfor i in range SIZE\r\n\t\tfor j in range SIZE\r\n\t\t\tfc 0.5\r\n\t\t\tsc 0\r\n\t\t\trect TILE*i,TILE*j,TILE,TILE\r\n\t\t\tcell = b[i][j]\r\n\t\t\tif cell >= 0 \r\n\t\t\t\tfill COLORS[cell]\r\n\t\t\t\tsc()\r\n\t\t\t\ttext b[i][j],TILE*i,TILE*j\r\n\ttext selected,10,SIZE*TILE\r\n\tfor [i,j] in selected\r\n\t\tfc 1,1,0,0.5\r\n\t\tsc()\r\n\t\tcircle TILE*i,TILE*j,TILE/2-3\r\n\r\nwithin = (i,j) -> 0 <= i < SIZE and 0 <= j < SIZE\r\n\r\nmousePressed = ->\r\n\t[i,j] = [(mouseX-TILE/2)//TILE,(mouseY-TILE/2)//TILE]\r\n\tif not within i,j then return \r\n\tif selected.length == 0 \r\n\t\tif b[i][j] != FREE then selected.push [i,j]\r\n\telse\r\n\t\t[i1,j1] = selected[0]\r\n\t\tif i==i1 and j==j1 then return selected.pop()\r\n\t\tif b[i][j] + b[i1][j1] == N-1 \r\n\t\t\tif legal(i,j,i1,j1) or bridge(i,j,i1,j1)\r\n\t\t\t\tb[i][j] = b[i1][j1] = FREE\r\n\t\t\t\tselected.pop()\r\n\r\n# A*. This algorithm blocks itself sometimes.\r\n# That's why bridge is also used.\r\nlegal = (i0,j0,i1,j1) ->\r\n\tstart = [0,i0,j0,-1]\r\n\tcands = []\r\n\tcands.push start\r\n\treached = {}\r\n\treached[[i0,j0]] = start\r\n\twhile cands.length > 0\r\n\t\tfront = cands\r\n\t\tfront.sort (a,b) -> a[0]-b[0]\r\n\t\tcands = []\r\n\t\tfor [turns0,x0,y0,index0] in front\r\n\t\t\tfor [dx,dy],index in [[-1,0],[1,0],[0,-1],[0,1]]\r\n\t\t\t\t[x,y] = [x0+dx,y0+dy]\r\n\t\t\t\tkey = [x,y]\r\n\t\t\t\tturns = turns0\r\n\t\t\t\tif index != index0 and index0 != -1 then turns++\r\n\t\t\t\tnext = [turns,x,y,index]\r\n\t\t\t\tif x==i1 and y==j1 then return 2 >= turns\r\n\t\t\t\tif within x,y\r\n\t\t\t\t\tif b[x][y]==FREE\r\n\t\t\t\t\t\tif key not of reached or reached[key][0] > next[0]\r\n\t\t\t\t\t\t\treached[key] = next\r\n\t\t\t\t\t\t\tcands.push next\r\n\tfalse\r\n\r\ngetlst = (x0,y0,dx,dy) ->\r\n\tresx = []\r\n\tresy = []\r\n\t[x,y] = [x0+dx,y0+dy]\r\n\twhile within x,y\r\n\t\tif b[x][y] != FREE then return [resx,resy]\r\n\t\tresx.push x\r\n\t\tresy.push y\r\n\t\t[x,y] = [x+dx,y+dy]\r\n\t[resx,resy]\r\n\r\ngetrows = (x0,x1) ->\r\n\tres = []\r\n\tfor y in range SIZE\r\n\t\tfound = false \r\n\t\tfor x in range x0,x1 \r\n\t\t\tif b[x][y] != FREE then found = true \r\n\t\tif not found then res.push y\r\n\tres\r\n\r\ngetcols = (y0,y1) ->\r\n\tres = []\r\n\tfor x in range SIZE\r\n\t\tfound = false \r\n\t\tfor y in range y0,y1 \r\n\t\t\tif b[x][y] != FREE then found = true \r\n\t\tif not found then res.push x\r\n\tres\r\n\r\nbridge = (x0,y0,x1,y1) ->\r\n\tlst1 = getlst(x0,y0,0,-1)[1].concat getlst(x0,y0,0,1)[1]\r\n\tlst2 = getlst(x1,y1,0,-1)[1].concat getlst(x1,y1,0,1)[1]\r\n\tlst3 = getrows _.min([x0,x1])+1,_.max([x0,x1])\r\n\tlst4 = _.intersection lst1, lst2, lst3 \r\n\r\n\tlst1 = getlst(x0,y0,-1,0)[0].concat getlst(x0,y0,1,0)[0]\r\n\tlst2 = getlst(x1,y1,-1,0)[0].concat getlst(x1,y1,1,0)[0]\r\n\tlst3 = getcols _.min([y0,y1])+1,_.max([y0,y1])\r\n\tlst5 = _.intersection lst1, lst2, lst3 \r\n\r\n\tlst4.length > 0 or lst5.length > 0\r\n"
  ]
}