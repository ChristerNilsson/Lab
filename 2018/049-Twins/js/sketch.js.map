{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "SIZE = 12\r\nTILE = 60\r\nFREE = -1\r\nCOLORS = null\r\nKEY = '049-Twins'\r\n\r\nsize = null\r\nlevel = null\r\nmaxLevel=null\r\nnumbers = null\r\n\r\nb = null\r\nselected = []\r\nmessage = ''\r\nbuttons = []\r\npath = []\r\npathTimestamp = null\r\ndeathTimestamp = null\r\nhearts = null\r\nmilliseconds0 = null\r\nmilliseconds1 = null\r\nstate = 'halted' # 'running' 'halted'\r\ndelta = 0\r\nfound = null\r\n\r\nclass Hearts\r\n\tconstructor : (@x,@y,@count=9,@maximum=9) -> \r\n\tdraw : ->\r\n\t\tfor i in range @maximum\r\n\t\t\tx = @x + 60*i\r\n\t\t\tif i < @count\r\n\t\t\t\tfc 1,0,0\r\n\t\t\t\tsc 1,0,0\r\n\t\t\telse\r\n\t\t\t\tfc 0.5\r\n\t\t\t\tsc 0.5\r\n\t\t\tsw 10\r\n\t\t\tline x-15,@y+2, x,@y+20\r\n\t\t\tline x,   @y, x,@y+20\r\n\t\t\tline x+15,@y+2, x,@y+20\r\n\t\t\tsw 1\r\n\t\t\tcircle x-10,@y,10\r\n\t\t\tcircle x+10,@y,10\r\n\r\nclass Button\r\n\tconstructor : (@x,@y,@txt,@click) -> @r=24\r\n\tinside : (x,y) -> @r > dist @x,@y,x,y\r\n\tdraw : ->\r\n\t\tfc 0.5\r\n\t\tif level == maxLevel then sc 1 else sc()\r\n\t\tsw 2\r\n\t\tcircle @x,@y,@r\r\n\t\tfc 0\r\n\t\ttextSize 30\r\n\t\tsc()\r\n\t\ttext @txt,@x,@y\r\n\r\nnewGame = (n) ->\r\n\tif n in [1,maxLevel+1] then return \r\n\tlevel = constrain n,2,maxLevel\r\n\tmakeGame()\r\n\r\nsaveStorage = -> localStorage[KEY] = maxLevel\r\nloadStorage = ->\r\n\tif KEY of localStorage \r\n\t\tmaxLevel = parseInt localStorage[KEY]\r\n\telse\r\n\t\tmaxLevel = 2\r\n\r\nsetup = ->\r\n\tcreateCanvas 30+TILE*SIZE+30,50+TILE*SIZE+TILE\r\n\trectMode CENTER\r\n\tmakeColors()\r\n\tloadStorage()\r\n\tlevel = maxLevel\r\n\tbuttons.push new Button 60,40,'-', -> newGame level-1\r\n\tbuttons.push new Button 120,40,level, -> newGame level\r\n\tbuttons.push new Button 180,40,'+', -> newGame level+1\r\n\thearts = new Hearts 240,35\r\n\tmakeGame()\r\n\tshowMoves()\r\n\r\nmybrightness = (s) ->\r\n\tres = 0\r\n\tfor ch in s\r\n\t\tres += \"0123456789abcdef#\".indexOf ch\r\n\tres\r\n\r\nmakeColors = ->\r\n\tCOLORS = []\r\n\tfor i in \"05af\"\r\n\t\tfor j in \"05af\"\r\n\t\t\tfor k in \"05af\"\r\n\t\t\t\tCOLORS.push \"#\"+i+j+k\r\n\tCOLORS = _.without COLORS, \"#000\", \"#005\", \"#00a\"\r\n\tCOLORS.sort (a,b) -> mybrightness(b) - mybrightness(a)\r\n\r\nmakeGame = ->\r\n\tcandidates = []\r\n\r\n\tmaxLevel += delta\r\n\tlevel += delta\r\n\tdelta = 0\r\n\tsaveStorage()\r\n\r\n\tsize = 5+level//4 \r\n\tif size>12 then size=12\r\n\thearts.count = size-3\r\n\thearts.maximum = size-3\r\n\r\n\tnumbers = (size-2)*(size-2)\r\n\tif numbers%2==1 then numbers -= 1\r\n\r\n\tfor i in range numbers/2\r\n\t\tcandidates.push i % level\r\n\t\tcandidates.push level-1 - i % level\r\n\tcandidates = _.shuffle candidates\r\n\r\n\tb = new Array size\r\n\tfor i in range size\r\n\t\tb[i] = new Array size\r\n\t\tfor j in range size\r\n\t\t\tif i in [0,size-1] or j in [0,size-1] then b[i][j] = FREE\r\n\t\t\telse \r\n\t\t\t\tif size % 2 == 0\r\n\t\t\t\t\tb[i][j] = candidates.pop()\r\n\t\t\t\telse\r\n\t\t\t\t\tif i == size//2 and j == size//2\r\n\t\t\t\t\t\tb[i][j] = FREE\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tb[i][j] = candidates.pop()\r\n\tmilliseconds0 = millis()\r\n\tstate = 'running'\r\n\r\ndraw = ->\r\n\tbg 0.25\r\n\tsw 1\r\n\tbuttons[1].txt = level-1\r\n\r\n\tfor button in buttons\r\n\t\tbutton.draw()\r\n\thearts.draw()\r\n\r\n\ttextSize 0.8 * TILE\r\n\ttranslate TILE,TILE+50\r\n\ttextAlign CENTER,CENTER\r\n\tfc 1\r\n\tsc 0\r\n\tfor i in range size\r\n\t\tfor j in range size\r\n\t\t\tfc 0\r\n\t\t\tsc 1\r\n\t\t\trect TILE*i,TILE*j,TILE,TILE\r\n\t\t\tcell = b[i][j]\r\n\t\t\tif cell >= 0 \r\n\t\t\t\tfill COLORS[cell%%COLORS.length]\r\n\t\t\t\tsc 0\r\n\t\t\t\ttext b[i][j],TILE*i,TILE*j\r\n\tfor [i,j] in selected\r\n\t\tfc 1,1,0,0.5\r\n\t\tsc()\r\n\t\tcircle TILE*i,TILE*j,TILE/2-3\r\n\tdrawPath()\r\n\tif state=='halted'\r\n\t\tfc 1,1,0,0.5\r\n\t\tx = size//2*TILE\r\n\t\ty = size//2*TILE\r\n\t\tw = size*TILE\r\n\t\th = size*TILE\r\n\t\trect x,y,w,h\r\n\t\tms = round(milliseconds1-milliseconds0)/1000\r\n\t\tif ms > 0\r\n\t\t\ty = size*TILE\r\n\t\t\tfc 1\r\n\t\t\tsc()\r\n\t\t\ttextSize 20\r\n\t\t\ttext ms,x,y\r\n\tif millis() < deathTimestamp\r\n\t\tsc 1,0,0\r\n\t\tsw 5\r\n\t\tfc()\r\n\t\tx = size//2*TILE-TILE/2\r\n\t\ty = size//2*TILE-TILE/2\r\n\t\tw = size*TILE\r\n\t\th = size*TILE\r\n\t\trect x,y,w,h\r\n\r\n\t[i0,j0,i1,j1,z,z] = found\t\t\r\n\tfc()\r\n\tcircle TILE*i0,TILE*j0,TILE/2-3\r\n\tcircle TILE*i1,TILE*j1,TILE/2-3\r\n\r\n\r\nwithin = (i,j) -> 0 <= i < size and 0 <= j < size\r\n\r\nmousePressed = ->\r\n\tif state=='halted' \r\n\t\tnewGame level\r\n\t\treturn\r\n\tfor button in buttons\r\n\t\tif button.inside mouseX,mouseY then button.click()\r\n\t[i,j] = [(mouseX-TILE/2)//TILE,(mouseY-50-TILE/2)//TILE]\r\n\tif not within i,j then return\r\n\tif selected.length == 0\r\n\t\tif b[i][j] != FREE then selected.push [i,j]\r\n\telse\r\n\t\t[i1,j1] = selected[0]\r\n\t\tif i==i1 and j==j1 then return selected.pop()\r\n\t\tif b[i][j] + b[i1][j1] == level-1\r\n\t\t\tpath = legal false,i1,j1,i,j\r\n\t\t\tif path.length == 0\r\n\t\t\t\tpath = legal true,i1,j1,i,j\r\n\t\t\t\tif path.length == 0\r\n\t\t\t\t\thearts.count -= 2 # Punish two\r\n\t\t\t\telse\r\n\t\t\t\t\thearts.count -= 1 # Punish one\r\n\t\t\t\tdeathTimestamp = 200 + millis()\r\n\t\t\tb[i][j] = b[i1][j1] = FREE\r\n\t\t\tnumbers -= 2\r\n\t\t\tselected.pop()\r\n\t\t\tif numbers==0\r\n\t\t\t\tmilliseconds1 = millis()\r\n\t\t\t\tstate = 'halted'\r\n\t\t\t\tif level == maxLevel \r\n\t\t\t\t\tif hearts.count >= 0 then delta = 1 else delta = -1\r\n\t\t\telse\r\n\t\t\t\tif level == maxLevel \r\n\t\t\t\t\tif hearts.count < 0 \r\n\t\t\t\t\t\tstate = 'halted'\r\n\t\t\t\t\t\tdelta = -1\r\n\tshowMoves()\r\n\r\nmakeMove = (wrap,x,y) -> if wrap then [x %% size, y %% size] else [x,y]\r\n\r\nmakePath = (wrap,reached,i,j) ->\r\n\tres = []\r\n\tkey = \"#{i},#{j}\"\r\n\t[turns0,i0,j0,indexes0] = reached[key]\r\n\t[i,j] = [i0,j0]\r\n\tres.push [i,j]\r\n\tpathTimestamp = millis()\r\n\tindexes0.reverse()\r\n\tfor index in indexes0\r\n\t\t[di,dj] = [[1,0],[-1,0],[0,1],[0,-1]][index]\r\n\t\t[i,j] = makeMove wrap,i+di,j+dj\r\n\t\tres.push [i,j]\r\n\tres\r\n\r\ndrawPath = ->\r\n\tif path.length == 0 then return \r\n\tsw 3\r\n\tsc 1,1,0\r\n\t[i1,j1] = path[0]\r\n\tfor [i2,j2] in path\r\n\t\tif 1 == dist i1,j1,i2,j2\r\n\t\t\tline TILE*i1,TILE*j1,TILE*i2,TILE*j2\r\n\t\t[i1,j1] = [i2,j2]\r\n\tif millis() > 500 + pathTimestamp then path = []\r\n\r\n# A*\r\nlegal = (wrap,i0,j0,i1,j1) ->\r\n\tstart = [0,i0,j0,[]] # turns,x,y,move\r\n\tcands = []\r\n\tcands.push start\r\n\treached = {}\r\n\treached[[i0,j0]] = start\r\n\twhile cands.length > 0\r\n\t\tfront = cands\r\n\t\tfront.sort (a,b) -> a[0]-b[0]\r\n\t\tcands = []\r\n\t\tfor [turns0,x0,y0,indexes0] in front\r\n\t\t\tfor [dx,dy],index in [[-1,0],[1,0],[0,-1],[0,1]]\r\n\t\t\t\t[x,y] = makeMove wrap,x0+dx,y0+dy\r\n\t\t\t\tkey = \"#{x},#{y}\"\r\n\t\t\t\tturns = turns0\r\n\t\t\t\tif indexes0.length > 0 and index != _.last(indexes0) then turns++\r\n\t\t\t\tnext = [turns,x,y,indexes0.concat [index]]\r\n\t\t\t\tif x==i1 and y==j1 and turns<=2\r\n\t\t\t\t\treached[key] = next\r\n\t\t\t\t\treturn makePath wrap,reached,i1,j1\r\n\t\t\t\tif within x,y\r\n\t\t\t\t\tif b[x][y]==FREE\r\n\t\t\t\t\t\tif key not of reached or reached[key][0] >= next[0]\r\n\t\t\t\t\t\t\tif next[0] < 3\r\n\t\t\t\t\t\t\t\treached[key] = next\r\n\t\t\t\t\t\t\t\tcands.push next\r\n\t[]\r\n\r\nshowMoves = ->\r\n\tres = showMoves1 false\r\n\tif res.length==0\r\n\t\tres = showMoves1 true\r\n\tif res.length>0\r\n\t\tfound = res[0]\r\n\r\nshowMoves1 = (wrap) ->\r\n\tres = []\r\n\tfor i0 in range 1,size-1\r\n\t\tfor j0 in range 1,size-1\r\n\t\t\tif b[i0][j0] != FREE \r\n\t\t\t\tfor i1 in range 1,size-1\r\n\t\t\t\t\tfor j1 in range 1,size-1\r\n\t\t\t\t\t\tif b[i1][j1] != FREE \r\n\t\t\t\t\t\t\tif b[i0][j0] + b[i1][j1] == level-1\r\n\t\t\t\t\t\t\t\tif b[i0][j0] <= b[i1][j1] and (i0!=i1 or j0!=j1)\r\n\t\t\t\t\t\t\t\t\tpath = legal wrap,i0,j0,i1,j1 \r\n\t\t\t\t\t\t\t\t\tif path.length>0\r\n\t\t\t\t\t\t\t\t\t\tres.push [i0,j0,i1,j1,b[i0][j0],b[i1][j1]]\r\n\tres"
  ]
}