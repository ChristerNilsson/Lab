// Generated by CoffeeScript 2.3.2
var Page, addCell, engineering, getElem, getField, hideCanvas, isNumeric, makeButton, makeDiv, makeInput, makeSpan, makeTextArea, showCanvas, storeAndGoto;

Page = class Page {
  constructor(columns, init) {
    this.columns = columns;
    this.init = init;
    this.table = getElem("table");
    this.actions = [];
  }

  addAction(title, f) {
    return this.actions.push([title, f]);
  }

  display() {
    var div, elem, f, i, j, len, ref, title;
    // actions
    if (this.actions.length > 0) {
      if (this.columns === 0) {
        this.columns = this.actions.length;
      }
      if (this.columns === 0) {
        this.columns = 1;
      }
      elem = getElem('myActions');
      elem.innerHTML = "";
      div = null;
      ref = this.actions;
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        [title, f] = ref[i];
        ((f) => {
          if (i % this.columns === 0) {
            div = document.createElement("div");
          }
          div.appendChild(makeButton(title, this.columns, f));
          if (i % this.columns === this.columns - 1) {
            return elem.appendChild(div);
          }
        })(f);
      }
      elem.appendChild(div);
    }
    this.table.innerHTML = "";
    return this.init();
  }

  addRow(a, b = null) {
    var tr;
    tr = document.createElement("tr");
    tr.width = '100%';
    if (b) {
      addCell(tr, a, b);
    } else {
      addCell(tr, a);
    }
    return this.table.appendChild(tr);
  }

};

// storeData = (data) -> localStorage[KEY] = JSON.stringify data
// fetchData = -> JSON.parse if localStorage[KEY] then localStorage[KEY] else '""'
storeAndGoto = function(data, page) {
  //storeData data
  return page.display();
};

isNumeric = function(val) {
  return val === Number(parseFloat(val));
};

getElem = function(id) {
  return document.getElementById(id);
};

hideCanvas = function() {
  var elem;
  elem = document.getElementById('myContainer');
  return elem.style.display = 'none';
};

showCanvas = function() {
  var elem;
  elem = document.getElementById('myContainer');
  return elem.style.display = 'block';
};

makeTextArea = function() {
  var b;
  b = document.createElement('textarea');
  //b.cols = 50
  b.style.position = 'fixed';
  b.style.top = '30px';
  b.style.width = 'calc(50vw - 0px)';
  b.style.height = 'calc(100vh - 30px)';
  b.style.resize = 'none';
  //b.style.whitespace = "nowrap"
  b.style.overflow = "visible";
  b.style.overflowScroll = true;
  //b.style.overflowX = "scroll"
  //b.style.overflowY = "scroll"
  b.nowrap = 'nowrap';
  b.wrap = 'off';
  b.rows = 200;
  b.style.fontSize = "100%";
  return b;
};

makeSpan = function(value) {
  var b;
  b = document.createElement('span');
  b.innerHTML = value;
  return b;
};

makeDiv = function(value) {
  var b;
  b = document.createElement('div');
  b.innerHTML = value;
  return b;
};

makeInput = function(title, value = '', readonly = false) {
  var b;
  b = document.createElement('input');
  b.id = title;
  b.value = value;
  b.placeholder = title;
  if (readonly) {
    b.setAttribute("readonly", true);
  }
  if (title === 'name') {
    b.autofocus = true;
  }
  b.onclick = "this.setSelectionRange(0, this.value.length)";
  return b;
};

makeButton = function(title, n, f) {
  var b;
  b = document.createElement('input');
  if (n === 0) {
    b.style.width = "100%";
    b.style.textAlign = 'left';
  } else {
    b.style.width = `${Math.floor(100 / n)}%`;
  }
  b.style.fontSize = "100%";
  b.style.fontFamily = 'monospace';
  b.style.webkitAppearance = "none";
  b.style.borderRadius = 0;
  b.style.padding = 0;
  b.type = 'button';
  b.value = title;
  b.onclick = f;
  return b;
};

addCell = function(tr, a, b = null) {
  var td;
  td = document.createElement("td");
  td.width = '100%';
  td.appendChild(a);
  if (b) {
    td.appendChild(b);
  }
  return tr.appendChild(td);
};

getField = function(name) {
  var element;
  element = document.getElementById(name);
  if (element) {
    return element.value;
  } else {
    return null;
  }
};

engineering = function(x, digits) {
  var a, b, c, d, e, f, factor;
  if (x === '') {
    return x;
  }
  if (x < 0) {
    return "-" + engineering(-x);
  }
  a = Math.log10(x) / 3;
  b = a;
  c = Math.floor(b);
  d = b - c;
  e = 3 * c;
  f = 3 * d;
  x = 10 ** f;
  factor = 10 ** (digits - 1 - Math.floor(f));
  if (e === 0) {
    return Math.round(x * factor) / factor;
  } else {
    return Math.round(x * factor) / factor + 'E' + e;
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\Lab\2018\008-Kalkyl\coffee\utils.coffee