"use strict";

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Generated by CoffeeScript 2.0.3
// https://github.com/wesbos/JavaScript30/tree/master/15%20-%20LocalStorage
var Page, fetchData, pages, setup, storeData, todos;

todos = [];

pages = {};

Page = function () {
  function Page(init) {
    _classCallCheck(this, Page);

    this.init = init;
    this.table = document.getElementById("table");
    this.actions = [];
  }

  _createClass(Page, [{
    key: "addAction",
    value: function addAction(title, f) {
      return this.actions.push([title, f]);
    }
  }, {
    key: "display",
    value: function display() {
      var _this = this;

      var elem, f, fn, i, len, ref, span, title;
      // actions
      elem = document.getElementById('myActions');
      elem.innerHTML = "";
      span = document.createElement("span");
      ref = this.actions;
      fn = function fn(f) {
        return span.appendChild(makeButton(title, _this.actions.length, function () {
          f();
          storeData();
          return pages.List.display();
        }));
      };
      for (i = 0, len = ref.length; i < len; i++) {
        var _ref$i = _slicedToArray(ref[i], 2);

        title = _ref$i[0];
        f = _ref$i[1];

        fn(f);
      }
      elem.appendChild(span);
      this.table.innerHTML = "";
      return this.init();
    }
  }, {
    key: "addRow",
    value: function addRow(b) {
      var tr;
      tr = document.createElement("tr");
      addCell(tr, b);
      return this.table.appendChild(tr);
    }
  }]);

  return Page;
}();

storeData = function storeData() {
  return localStorage["006"] = JSON.stringify(todos);
};

fetchData = function fetchData() {
  var data;
  data = localStorage["006"];
  if (data) {
    return todos = JSON.parse(data);
  }
};

setup = function setup() {
  fetchData();
  pages.List = new Page(function () {
    var _this2 = this;

    var i, len, results, todo;
    this.addRow(makeInput('todo'));
    results = [];
    for (i = 0, len = todos.length; i < len; i++) {
      todo = todos[i];
      results.push(function (todo) {
        return _this2.addRow(makeButton(todo.name + " " + todo.done, 1, function () {
          todo.done = !todo.done;
          storeData();
          return pages.List.display();
        }));
      }(todo));
    }
    return results;
  });
  pages.List.addAction('Add', function () {
    return todos.push({
      name: document.getElementById("todo").value,
      done: false
    });
  });
  pages.List.addAction('ClearAll', function () {
    return todos = [];
  });
  pages.List.addAction('Clear', function () {
    return todos = todos.filter(function (e) {
      return !e.done;
    });
  });
  return pages.List.display();
};
//# sourceMappingURL=sketch.js.map
