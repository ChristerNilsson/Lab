'use strict';

// Generated by CoffeeScript 2.0.3
var enter, op0, op1, op2, operations, page, setup, stack;

stack = [];

page = null;

enter = null;

operations = {};

op0 = function op0(f) {
  f();
  return storeAndGoto(stack, page);
};

op1 = function op1(f) {
  stack.push(f(stack.pop()));
  return storeAndGoto(stack, page);
};

op2 = function op2(f) {
  var x, y;
  x = stack.pop();
  y = stack.pop();
  stack.push(f(y, x));
  return storeAndGoto(stack, page);
};

setup = function setup() {
  stack = fetchData();
  page = new Page(10, function () {
    var i, item, len;
    for (i = 0, len = stack.length; i < len; i++) {
      item = stack[i];
      this.addRow(makeDiv(item));
    }
    this.addRow(enter = makeInput('enter'));
    //do (enter) ->
    enter.focus();
    return enter.addEventListener("keyup", function (event) {
      //event.preventDefault()
      if (event.keyCode === 13) {
        stack.push(parseFloat(enter.value));
        return storeAndGoto(stack, page);
      }
    });
  });
  page.addAction('Enter', function () {
    return op0(function () {
      return stack.push(parseFloat(enter.value));
    });
  });
  page.addAction('+', function () {
    return op2(function (y, x) {
      return y + x;
    });
  });
  page.addAction('-', function () {
    return op2(function (y, x) {
      return y - x;
    });
  });
  page.addAction('*', function () {
    return op2(function (y, x) {
      return y * x;
    });
  });
  page.addAction('/', function () {
    return op2(function (y, x) {
      return y / x;
    });
  });
  page.addAction('%', function () {
    return op2(function (y, x) {
      return y % x;
    });
  });
  page.addAction('clr', function () {
    return op0(function () {
      return stack = [];
    });
  });
  page.addAction('chs', function () {
    return op1(function (x) {
      return -x;
    });
  });
  page.addAction('drp', function () {
    return op0(function () {
      return stack.pop();
    });
  });
  page.addAction('swp', function () {
    return op0(function () {
      var x, y;
      x = stack.pop();
      y = stack.pop();
      stack.push(x);
      return stack.push(y);
    });
  });
  page.addAction('sin', function () {
    return op1(function (x) {
      return Math.sin(x);
    });
  });
  page.addAction('pi', function () {
    return op0(function () {
      return stack.push(Math.PI);
    });
  });
  return page.display();
};
//# sourceMappingURL=sketch.js.map
