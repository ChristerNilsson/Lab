{
  "version": 3,
  "file": "utils.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\utils.coffee"
  ],
  "names": [],
  "mappings": ";;;AAAA,IAAA;IAAA;IAAA;;AAAA,cAAc,qBAAA,AAAC,OAAD,AAAO,MACpB;MAAA,GAAA,GAAA,GAAA,OAAA,KAAA,MAAA,GAAA,OAAA;AAAA;gBAAS;;AAAA,SAAA,oCAAA;;mBAAA;AAAA;;;AACT,UAAQ;AACR,AAAI,OAAJ,AAAK;AACL,OAAA,mCAAA;;AACC,SAAA,gDAAA;;AACC,AAAM,YAAN,AAAM,KAAK,CAAC,AAAM,MAAN,AAAM,KAAN,AAAS,IAAV,AAAY,SADxB,AACiC;;AACjC,YAHD,AAGS;;AACT,AAAI,OAAJ,AAAK;SARQ,AASb;;;AAED,gBAAgB,uBAAA,AAAC,OAChB;MAAA,MAAA,OAAA,MAAA,GAAA,GAAA,GAAA,KAAA,MAAA,MAAA,UAAA,WAAA,MAAA,QAAA,KAAA,OAAA,QAAA,MAAA,OAAA,OAAA;AAAA,WAAS,CAAA,AAAC,GAAD,AAAG,GAAH,AAAK,GAAL,AAAO,GAAP,AAAS,IAAT,AAAY,IAAZ,AAAe,IAAf,AAAkB;AAC3B,UAAQ,AAAC,EAAD,AAAE,OAAF,AAAS,QAAQ,eAAI,QAArB,AAA8B;AACtC,AAAK,QAAL,AAAM,KAAK,UAAA,AAAC,GAAD,AAAG;WAAM,IAAT,AAAW;AAFtB,AAEA;;AAEA,SAAO;AACP,UAAQ,CAAA,AAAC,AACT;;AAAA,OAAA,kCAAA;;AACC,gBAAY;AACZ,SAAA,sCAAA;;AACC,WAAA,sCAAA;;AACC,mBAAW,OAAK;AAChB,YAAG,aAAA,AAAgB,WAAhB,YAAH;AACC,cAAG,EAAA,YAAH,AAAG,AAAgB;AAClB,AAAK,iBAAL,AAAK,YAAY;AACjB,AAAS,sBAAT,AAAU,KAFX,AAEC,AAAe;AAHjB;AAFD;AADD;;AAOA,YATD,AASS;;AACT,SAAO;AACP,UAAQ,AAAC,EAAD,AAAE,OAAF,AAAS,AACjB;SAAM,QAAN,AAAc;AACb,AAAI,SAAJ,AAAK,KAAL,AAAU;AACV,YAAQ,AAAK,KAFd,AAEc;;AAEd,UAAQ,YAAA,AAAY,OAAZ,AAAkB;AAE1B;AACC,WAAA,AAAQ;AACR,WADA,AACQ;AACR,WAAQ,AAAK,KAFb,AAEa;AACb,WAAQ,AAAI,KAHZ,AAGa;AACb,UAJA,AAIO;AAJP;SA1Bc,AA+Bf",
  "sourcesContent": [
    "createRests = (ticks,path) ->\r\n\trests = (0 for t in ticks)\r\n\tlastp = 0\r\n\tpath.reverse()\r\n\tfor p in path\t\t\r\n\t\tfor t,i in ticks\r\n\t\t\trests[i] = (rests[i]+p-lastp) % t\r\n\t\tlastp = p\r\n\tpath.reverse()\r\n\trests \r\n\r\ncreateProblem = (steps) ->\r\n\tprimes = [2,3,5,7,11,13,17,19]\r\n\tticks = _.sample primes, 2 + steps // 5\r\n\tticks.sort (a,b) -> a-b\r\n\t#ticks = [2,3,5,7,11,13,17,19]\r\n\ttree = {}\r\n\tcands = [0]\r\n\tfor step in range steps \r\n\t\tnextcands = []\r\n\t\tfor cand in cands\r\n\t\t\tfor item in ticks\r\n\t\t\t\tnextcand = cand+item\r\n\t\t\t\tif nextcand not in nextcands\r\n\t\t\t\t\tif nextcand not of tree \r\n\t\t\t\t\t\ttree[nextcand] = cand \r\n\t\t\t\t\t\tnextcands.push nextcand\r\n\t\tcands = nextcands \r\n\tpath = []\r\n\ttotal = _.sample cands\r\n\twhile total > 0\r\n\t\tpath.push total\r\n\t\ttotal = tree[total]\r\n\r\n\trests = createRests ticks,path\r\n\r\n\tresult = \r\n\t\trests : rests \r\n\t\tticks : ticks\r\n\t\ttotal : path[0]\r\n\t\tsteps : path.length\r\n\t\tpath : path\r\n\tresult \r\n"
  ]
}