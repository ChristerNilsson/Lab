{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# Man sparar bara de problem man själv löst till localStorage.\r\n# Problem via url sparas ej.\r\n\r\nbuttons = []\r\nclocks = []\r\ngame = {}\r\nN = 60\r\n\r\nRED   = \"#F00\"\r\nGREEN = \"#0F0\"\r\nBLACK = \"#000\"\r\nWHITE = \"#FFF\"\r\n\r\nDELAY = 60 # seconds per step before Solution is available\r\n\r\nsolutionTimer = null\r\nsolution = \"\"\r\n\r\nreset = ->\r\n\tgame.totalSteps = 0 \r\n\tgame.totalPoints = 0\r\n\tfor clock in clocks\r\n\t\tclock.reset()\r\n\r\nok = ->\r\n\tif @enabled \r\n\t\tif game.steps==game.totalSteps and game.totalPoints==game.total then newGame 1\r\n\t\telse if game.steps==game.totalSteps then newGame 1\r\n\t\telse newGame -1\r\n\r\nsetup = -> \r\n\tcreateCanvas 1200,590\r\n\tangleMode DEGREES\r\n\ttextAlign CENTER,CENTER\r\n\tbuttons.push new Button 'Steps:',120,60,48 \r\n\tbuttons.push new Button 'reset',120,170,48, reset\r\n\tbuttons.push new Button 'ok',120,280,48, ok\r\n\tbuttons.push new Button 'All clocks green',120,360,24\r\n\tbuttons.push new Button 'Use all steps',120,390,24\r\n\tbuttons.push new Button 'Share via clipboard',120,450,24, -> \r\n\t\tcopyToClipboard game.url\r\n\t\t@enabled = false \r\n\tbuttons.push new Button 'Taiwanese Remainder',120,20,20 \r\n\tbuttons.push new Button 'Solution',120,540,20, -> \r\n\t\tif @enabled \r\n\t\t\tsolution = solve game.ticks, game.total, game.steps\r\n\t\t\tsolution = game.solution.join ' '\r\n\t\t\t@enabled = false \r\n\t\t\tsolutionTimer = millis()\r\n\tbuttons.push new Button 'Combinations',120,510,20 \r\n\tbuttons.push new Button 'Level',120,480,20 \r\n\r\n\tbuttons[5].enabled = true\r\n\r\n\tif '?' in window.location.href \r\n\t\tparams = getParameters()\r\n\t\tif 3 == _.size params\r\n\t\t\tgame =\r\n\t\t\t\tlevel : parseInt params.level\r\n\t\t\t\tticks : (parseInt r for r in params.ticks.split ',')\r\n\t\t\t\trests : (parseInt r for r in params.rests.split ',') \r\n\t\t\t\turl : window.location.href\r\n\t\t\tnewGame1()\r\n\t\t\treturn\r\n\telse \r\n\t\ttr = localStorage['TaiwaneseRemainder']\r\n\t\tif tr?  \r\n\t\t\tgame = JSON.parse tr\r\n\t\t\tif game.level?\r\n\t\t\t\tnewGame1()\r\n\t\t\telse\r\n\t\t\t\tgame = {level : 0}\r\n\t\t\t\tnewGame 0\r\n\t\telse\r\n\t\t\tgame = {level : 0}\r\n\t\t\tnewGame 0\r\n\r\nclass Button\r\n\tconstructor : (@txt,@x,@y,@size,@f=->) -> @enabled=false\r\n\tdraw : ->\r\n\t\tfill if @enabled then WHITE else BLACK\r\n\t\tsc()\r\n\t\ttextSize @size\r\n\t\ttext @txt,@x,@y\r\n\r\nclass Clock\r\n\tconstructor : (@rest, @tick, @x, @y) -> @reset()\r\n\r\n\treset : ->\r\n\t\t@count = 0 \r\n\t\t@value = -@rest %% @tick\r\n\t\t@oldValue = @value \r\n\t\t@delta = 0\r\n\t\t@n = N\r\n\r\n\tdraw : ->\r\n\t\tpush()\r\n\t\ttranslate @x,@y\r\n\t\tsw 4\r\n\t\ttwelve = game.totalPoints % @tick == @rest\r\n\t\tfill if twelve then GREEN else RED\r\n\t\tstroke BLACK\r\n\t\tcircle 0,0,50\r\n\t\tfill if twelve then BLACK else WHITE\r\n\t\tsw 1\r\n\t\tsc()\r\n\t\ttextAlign CENTER,CENTER\r\n\t\ttextSize 40\r\n\t\ttext @tick,0,0\r\n\t\tif @tick>30\r\n\t\t\ttextSize 20\r\n\t\t\ttext @rest,0,30\r\n\r\n\t\t# subtract\r\n\t\tif @count>0 \r\n\t\t\tfill   if @count > 0 then WHITE else BLACK\r\n\t\t\tsc()\r\n\t\t\ttextSize 40\r\n\t\t\ttext @count,80,0\r\n\t\t\r\n\t\tif @n < N then @n++\t\t\r\n\t\trotate -90 + (@n * @delta/N) * 360 / @tick\r\n\r\n\t\tstroke WHITE\r\n\t\tfor j in range @tick\r\n\t\t\tsw 2\r\n\t\t\tpoint 50,0\r\n\t\t\tsw 2\r\n\t\t\tif j == @oldValue then line 25,0,46,0\r\n\t\t\trotate 360/@tick\r\n\t\tpop()\r\n\r\n\tadd : (delta) ->\r\n\t\t@delta = delta \r\n\t\t@oldValue = @value\r\n\t\t@value = (@value + delta) %% @tick\r\n\t\t@n = 0\r\n\r\n\tmove : (step) ->\r\n\t\tif @count+step < 0 then return \r\n\t\tbuttons[5].enabled = true \r\n\t\ttick = step * @tick\r\n\t\tgame.totalPoints += tick\r\n\t\tgame.totalSteps += step\r\n\t\t@count += step\r\n\t\tfor clock in clocks\r\n\t\t\tclock.add tick\t\t\r\n\r\nokidoki = -> true\r\n\r\nnewGame = (delta) ->\r\n\tgame.level += delta\r\n\tif game.level < 0 then game.level = 0\r\n\tN = int map game.level,0,100,60,10\r\n\r\n\tgame = createProblem game.level\r\n\tif '?' not in window.location.href\r\n\t\tlocalStorage['TaiwaneseRemainder'] = JSON.stringify game\r\n\tnewGame1()\r\n\r\nnewGame1 = ->\r\n\tgame.steps = game.level % 5 + game.level // 5 + 1\r\n\tgame.combinations = combinations game.steps,game.ticks.length\r\n\tprint \"#{game.steps}, [#{game.ticks}], [#{game.rests}]\"\r\n\treset()\r\n\tclocks = []\r\n\tC = 5\r\n\tfor i in range game.ticks.length\r\n\t\tclock = new Clock game.rests[i], game.ticks[i], 300 + 200*(i//C), 60+110*(i%C)\r\n\t\tclocks.push clock\r\n\t\tclock.forward  = -> @move  1\r\n\t\tclock.backward = -> @move -1\r\n\tsolutionTimer = millis()\r\n\tsolution = ''\r\n\r\ninfo = ->\r\n\tbuttons[0].txt = 'steps: ' + (game.steps - game.totalSteps)\r\n\tbuttons[1].enabled = game.totalSteps > 0\r\n\tbuttons[2].enabled = okidoki()\r\n\tbuttons[8].txt = 'Combinations: ' + short combinations game.steps,game.ticks.length\r\n\tbuttons[9].txt = 'Level: ' + game.level\r\n\tbutton.draw() for button in buttons\r\n\r\ndraw = ->\r\n\tbg 0.5\r\n\tinfo()\r\n\tclock.draw() for clock in clocks\r\n\tbuttons[7].enabled = millis() > solutionTimer + DELAY * 1000 * game.steps \r\n\tfc 0\r\n\ttext solution,width/2,buttons[7].y+30\r\n\r\nmousePressed = ->\r\n\tfor b in buttons\r\n\t\tif 50 > dist mouseX,mouseY,b.x,b.y then b.f() \r\n\tfor c in clocks\r\n\t\tif 50 > dist mouseX,mouseY,c.x,    c.y then c.forward()\r\n\t\tif 50 > dist mouseX,mouseY,c.x+100,c.y then c.backward()\r\n"
  ]
}