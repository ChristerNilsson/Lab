{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": ";;;AAAA,IAAA,SAAA,MAAA,SAAA;;AAAA,UAAU;;AACV,UAAU;;AAEV,QAAQ,iBACP;MAAA;AAAA,eAAA,AAAa,aAAb,AAAyB;AACzB,AAAM,SAAN,AAAO,iBAAP,AAAwB,qBAAqB,UAAA,AAAC;AAC7C,QAAG,AAAK,MAAR,AAAS;aAAW,UAAU,MAAM,AAAI,KAAJ,AAAK,MAAM,AAAK,MAApD,AAAoC,AAAiB;AADT;AAA7C;AAEA,WAAA,AAAS;AACT,YAAA,AAAU,QAJV,AAIA,AAAiB;;AAGjB,qBAAU,AAAS;AAAuB,YAP1C,AAOU,AAA8B,AAAU;AAAV,GAA9B,AAAQ;;iBAGlB,AAAQ,KAAM,UAAA,AAAC,mBAAD;;;;;6BAIb,AAAkB,OAAO,YAGxB;UAAA,gBAAA;;AAAA,2BAAqB,AAAiB,kBAAtC,AAAqB,AAAkB;;AAGvC,uBAAiB,MAAM,AAAkB,mBAHzC,AAG0C;;aAG1C,UATwB,AASd;AAbE,AAIb,KAAA,AAAiB;AAJlB,AAeC,GAfD,AAAO,EAAP,AAeE,MAAM,UAAA,AAAC,cAAD;;WAEP,AAAO,QAAP,AAAQ,IAFD,AAEP,AAAY;AA5BN,AAWP;AAdD;;;AAmCA,OAAO;AACN,KAAA,AAAG;AACH,OAAA,AAAK,SAAS,QAAd,AAAoB,KAAK,SAAzB,AAAgC;AAChC,OAAA,AAAK,SAAS,QAAd,AAAoB,KAAK,SAAzB,AAAgC;AAChC,MAAG,AAAM,OAAT,AAAU;WACT,KAAK,AAAM,OAAX,AAAY,aAAa,QAAzB,AAA+B,KAAK,SADrC,AACC,AAA2C;AAD5C,SAAA;WAGC,KAAA,AAAK,kBAAkB,QAAvB,AAA6B,KAAK,SAHnC,AAGC,AAAyC;AAPpC",
  "sourcesContent": [
    "bearing = 0\r\nheading = 0\r\n\r\nsetup = ->\r\n\tcreateCanvas windowWidth,windowHeight\r\n\twindow.addEventListener \"deviceorientation\", (event) -> \r\n\t\tif event.alpha then\tbearing = 360 - Math.round event.alpha\r\n\ttextSize 100\r\n\ttextAlign CENTER,CENTER\r\n\r\n\t# Obtain a new *world-oriented* Full Tilt JS DeviceOrientation Promise\r\n\tpromise = FULLTILT.getDeviceOrientation { 'type': 'world' }\r\n\r\n\t# Wait for Promise result\r\n\tpromise.then( (deviceOrientation) -> # Device Orientation Events are supported\r\n\r\n\t\t# Register a callback to run every time a new \r\n\t\t# deviceorientation event is fired by the browser.\r\n\t\tdeviceOrientation.listen ->\r\n\r\n\t\t\t# Get the current *screen-adjusted* device orientation angles\r\n\t\t\tcurrentOrientation = deviceOrientation.getScreenAdjustedEuler()\r\n\r\n\t\t\t# Calculate the current compass heading that the user is 'looking at' (in degrees)\r\n\t\t\tcompassHeading = 360 - currentOrientation.alpha\r\n\r\n\t\t\t# Do something with `compassHeading` here...\r\n\t\t\theading = compassHeading\r\n\r\n\t).catch (errorMessage) ->  # Device Orientation Events are not supported\r\n\r\n\t\tconsole.log errorMessage\r\n\r\n\t\t# Implement some fallback controls here...\t\r\n\r\ndraw = ->\r\n\tbg 1\r\n\ttext heading, width*0.5, height*0.2\r\n\ttext bearing, width*0.5, height*0.50\r\n\tif window.orientation\r\n\t\ttext window.orientation, width*0.5, height*0.75\r\n\telse\r\n\t\ttext 'orient unknown', width*0.5, height*0.75\r\n"
  ]
}