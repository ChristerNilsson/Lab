{
  "version": 3,
  "file": "utils.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\utils.coffee"
  ],
  "names": [],
  "mappings": ";;;AAAA;AAAA,IAAA,aAAA;;AACA,oBAAoB,2BAAC,AAAD,MAAO,AAAP,MAAa,AAAb,MAAmB,AAAnB,MAGnB;MAAA,WAAA,KAAA,GAAA,MAAA,MAAA,OAAA,IAAA,IAAA,IAAA,IAAA,IAAA;;;AAAA,SAAO,OAAO,AAAI,KAAC,AAAZ,KAAiB;AACxB,SAAO,OAAO,AAAI,KAAC,AAAZ,KAAiB;AAExB,SAAO,OAAO,AAAI,KAAC,AAAZ,KAAiB;AACxB,SAAO,OAAO,AAAI,KAAC,AAAZ,KAAiB,AAJxB;;;AAOA,MAAI,AAPJ;;;AAUA,SAAO,IAAI,AAAI,KAAC,AAAL,IAAS,AAAT;AACX,OAAK,IAAI,AAAI,KAAC,AAAL,IAAS,AAAT;AACT,OAAK,OAAO,AAAI,KAAC,AAAL,IAAS,AAAT;AACZ,OAAK,OAAO,AAAI,KAAC,AAAL,IAAS,AAAT,AAbZ;;;AAgBA,SAAO,IAAI,AAAI,KAAC,AAAL,IAAS,AAAT;AACX,OAAK,IAAI,AAAI,KAAC,AAAL,IAAS,AAAT;AACT,OAAK,OAAO,AAAI,KAAC,AAAL,IAAS,AAAT;AACZ,OAAK,OAAO,AAAI,KAAC,AAAL,IAAS,AAAT,AAnBZ;;;AAsBA,QAAM,KAAK,AAAL,KAAU,KAAK,AAAf,KAAoB,KAAK;AAC/B,cAAY,AAAM,OAAC,IAAI,AAAL;AAElB,UAAQ,AAAI,KAAC,AAAL,KAAU,AAAV,AAzBR;;;SA4BA,IAAI,AA/Be;AADpB;;;;;;;;;;;;;;AA+CA,cAAc,qBAAC,AAAD,IAAI,AAAJ,IAAO,AAAP,IAAU,AAAV,IACb;MAAA,IAAA;AAAA,OAAK,OAAO,AAAP,IAAU,AAAV;AACL,OAAK,OAAO,AAAP,IAAU,AAAV;SACL,AAAE,GAAC,AAAH,UAAa,AAAb,AAHa",
  "sourcesContent": [
    "# http://www.ridgesolutions.ie/index.php/2013/11/14/algorithm-to-calculate-speed-from-two-gps-latitude-and-longitude-points-and-time-difference/\r\ndistance_on_geoid = (lat1, lon1, lat2, lon2) ->\r\n \r\n\t# Convert degrees to radians\r\n\tlat1 = lat1 * Math.PI / 180.0\r\n\tlon1 = lon1 * Math.PI / 180.0\r\n \r\n\tlat2 = lat2 * Math.PI / 180.0\r\n\tlon2 = lon2 * Math.PI / 180.0\r\n \r\n\t# radius of earth in metres\r\n\tr = 6378100\r\n \r\n\t# P\r\n\trho1 = r * Math.cos lat1\r\n\tz1 = r * Math.sin lat1\r\n\tx1 = rho1 * Math.cos lon1\r\n\ty1 = rho1 * Math.sin lon1\r\n \r\n\t# Q\r\n\trho2 = r * Math.cos lat2 \r\n\tz2 = r * Math.sin lat2\r\n\tx2 = rho2 * Math.cos lon2\r\n\ty2 = rho2 * Math.sin lon2\r\n \r\n\t# Dot product\r\n\tdot = x1 * x2 + y1 * y2 + z1 * z2\r\n\tcos_theta = dot / (r * r)\r\n \r\n\ttheta = Math.acos cos_theta\r\n \r\n\t# Distance in Metres\r\n\tr * theta\r\n\r\n# https://www.movable-type.co.uk/scripts/latlong.html\r\n# calcHeading = (φ1,λ1,φ2,λ2) ->\r\n# \tconsole.log φ1,λ1\r\n# \tconsole.log φ2,λ2 \r\n# \ty = Math.sin(λ2-λ1) * Math.cos(φ2)\r\n# \tx = Math.cos(φ1)*Math.sin(φ2) - Math.sin(φ1)*Math.cos(φ2)*Math.cos(λ2-λ1)\r\n# \tres = Math.atan2(y, x) * 180 / Math.PI\r\n# \tconsole.log res\r\n# \tres = 90-res\r\n# \tif res < 0 then res += 360\r\n# \tconsole.log res \r\n# \tres\r\n\r\ncalcHeading = (φ1,λ1,φ2,λ2) ->\r\n\tp1 = LatLon φ1,λ1\r\n\tp2 = LatLon φ2,λ2\r\n\tp1.bearingTo p2"
  ]
}