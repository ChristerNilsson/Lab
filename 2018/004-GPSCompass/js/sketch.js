'use strict';

// Generated by CoffeeScript 2.0.3
var bearing, draw, heading, setup;

bearing = 0;

heading = 0;

setup = function setup() {
  var promise;
  createCanvas(windowWidth, windowHeight);
  window.addEventListener("deviceorientation", function (event) {
    if (event.alpha) {
      return bearing = 360 - Math.round(event.alpha);
    }
  });
  textSize(100);
  textAlign(CENTER, CENTER);
  // Obtain a new *world-oriented* Full Tilt JS DeviceOrientation Promise
  promise = FULLTILT.getDeviceOrientation({
    'type': 'world'
  });
  // Wait for Promise result
  return promise.then(function (deviceOrientation) {
    // Device Orientation Events are supported

    // Register a callback to run every time a new 
    // deviceorientation event is fired by the browser.
    return deviceOrientation.listen(function () {
      var compassHeading, currentOrientation;
      // Get the current *screen-adjusted* device orientation angles
      currentOrientation = deviceOrientation.getScreenAdjustedEuler();
      // Calculate the current compass heading that the user is 'looking at' (in degrees)
      compassHeading = 360 - currentOrientation.alpha;
      // Do something with `compassHeading` here...
      return heading = compassHeading;
    });
  }).catch(function (errorMessage) {
    // Device Orientation Events are not supported
    return console.log(errorMessage);
  });
};

// Implement some fallback controls here...	
draw = function draw() {
  bg(1);
  text(heading, width * 0.5, height * 0.2);
  text(bearing, width * 0.5, height * 0.50);
  if (window.orientation) {
    return text(window.orientation, width * 0.5, height * 0.75);
  } else {
    return text('orient unknown', width * 0.5, height * 0.75);
  }
};
//# sourceMappingURL=sketch.js.map
