{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# no mouse events works\r\n# rotate relative does not work\r\n# contains does not work\r\n\r\n# `\r\n#   // Code from ContainsPoint function here:\r\n#   // http://polyk.ivank.net\r\n#   contains: function(x, y) {\r\n#     // get stage position\r\n#     var addPos = this.stagepos();\r\n\r\n#     // map array of vectors to flat array of xy numbers\r\n#     // This might be slow, so let's rewrite this at some point.\r\n\r\n#     var p = Utils.flatten(\r\n#       this.state.vectors.map(function(vector) {\r\n#         return [addPos.x + vector.x, addPos.y + vector.y];\r\n#       }, this)\r\n#     );\r\n\r\n#     var n = p.length >> 1;\r\n#     var ax,\r\n#       ay = p[2 * n - 3] - y,\r\n#       bx = p[2 * n - 2] - x,\r\n#       by = p[2 * n - 1] - y;\r\n\r\n#     var lup;\r\n#     for (var i = 0; i < n; i++) {\r\n#       ax = bx;\r\n#       ay = by;\r\n#       bx = p[2 * i] - x;\r\n#       by = p[2 * i + 1] - y;\r\n#       if (ay == by) continue;\r\n#       lup = by > ay;\r\n#     }\r\n\r\n#     var depth = 0;\r\n#     for (var i = 0; i < n; i++) {\r\n#       ax = bx;\r\n#       ay = by;\r\n#       bx = p[2 * i] - x;\r\n#       by = p[2 * i + 1] - y;\r\n#       if (ay < 0 && by < 0) continue; // both \"up\" or both \"down\"\r\n#       if (ay > 0 && by > 0) continue; // both \"up\" or both \"down\"\r\n#       if (ax < 0 && bx < 0) continue; // both points on the left\r\n\r\n#       if (ay == by && Math.min(ax, bx) <= 0) return true;\r\n#       if (ay == by) continue;\r\n\r\n#       var lx = ax + (bx - ax) * -ay / (by - ay);\r\n#       if (lx == 0) return true; // point on edge\r\n#       if (lx > 0) depth++;\r\n#       if (ay == 0 && lup && by > ay) depth--; // hit vertex, both up\r\n#       if (ay == 0 && !lup && by < ay) depth--; // hit vertex, both down\r\n#       lup = by > ay;\r\n#     }\r\n\r\n#     return (depth & 1) == 1;\r\n#   },\r\n# `\r\n\r\n# `\r\n# function inside(v, vs) {\r\n#     // ray-casting algorithm based on\r\n#     // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n\r\n#     //var x = point[0], y = point[1];\r\n\r\n#     var inside = false;\r\n#     for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\r\n#         var xi = vs[i].x, yi = vs[i].y;\r\n#         var xj = vs[j].x, yj = vs[j].y;\r\n\r\n#         var intersect = ((yi > v.y) != (yj > v.y))\r\n#             && (v.x < (xj - xi) * (v.y - yi) / (yj - yi) + xi);\r\n#         if (intersect) inside = !inside;\r\n#     }\r\n\r\n#     return inside;\r\n# };\r\n# `\r\n\r\ninside = (v, vs) ->\r\n\tres = false\r\n\tlst = range vs.length\r\n\tlst.unshift lst.pop()\r\n\tfor j,i in lst\r\n\t\txi = vs[i].x\r\n\t\tyi = vs[i].y\r\n\t\txj = vs[j].x\r\n\t\tyj = vs[j].y\r\n\t\tintersect = ((yi > v.y) != (yj > v.y)) and (v.x < (xj - xi) * (v.y - yi) / (yj - yi) + xi)\r\n\t\tif intersect then res = !res\r\n\tres\r\n\r\ngroup = null\r\n\r\nr = new Rune\r\n\tcontainer: \"body\"\r\n\twidth: 600\r\n\theight: 600\r\n\r\ndist = (x1,y1,x2,y2) ->\r\n\tdx = x1-x2\r\n\tdy = y1-y2\r\n\tMath.sqrt(dx*dx+dy*dy)\r\n\r\n# halfCircle = (x,y,radius,cr,cg,cb,group) ->\r\n# \tp = r.polygon x,y,group\r\n# \tp.fill cr,cg,cb\r\n# \tp.lineTo -50,0\r\n# \tp.lineTo -50,radius\r\n# \tp.lineTo 50,radius\r\n# \tp.lineTo 50,0\r\n# \tp\r\n\r\nhalfCircle = (x0,y0,radius,cr,cg,cb,group) ->\r\n\tp = r.polygon x0,y0,group\r\n\tp.fill cr,cg,cb\r\n\tfor v in range 0,190,10\r\n\t\tx = radius*Math.cos Rune.radians v\r\n\t\ty = radius*Math.sin Rune.radians v\r\n\t\tp.lineTo x,y\r\n\tp\r\n\r\ngroup = r.group 300,300\r\nc = r.circle 0,0,200,group\r\nc.fill 0,255,0\r\n\r\nfor i in range 4\r\n\tx = 200 * Math.cos Rune.radians 90*i\r\n\ty = 200 * Math.sin Rune.radians 90*i\r\n\thalfCircle x,y,-50,255,255,0,group\r\n\thalfCircle x,y,+50,255,  0,0,group\r\n\r\nr.on 'update', =>\r\n\t{x,y,rotation} = group.state\r\n\tgroup.rotate rotation+0.1,x,y\r\n\tfor child,i in group.children\r\n\t\tif i>0\r\n\t\t\t{x,y,rotation} = child.state\r\n\t\t\tchild.rotate rotation+0.1,x,y\r\n\r\nr.el.addEventListener 'mousemove', (mouse) ->\t\r\n\tm = new Rune.Vector mouse.x,mouse.y\r\n\tp1 = new Rune.Vector 300,300\r\n\tfor child,i in group.children\r\n\t\tif i>0\r\n\t\t\t{x,y} = child.state\r\n\t\t\tp2 = p1.add new Rune.Vector(x,y).rotate group.state.rotation\r\n\t\t\tp3 = m.sub p2\r\n\t\t\tp4 = p3.rotate -group.state.rotation-child.state.rotation\r\n\t\t\tchild.fill if inside p4, child.state.vectors then 0 else 255\r\n\r\nr.play()"
  ]
}