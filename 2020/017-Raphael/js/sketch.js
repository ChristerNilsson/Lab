// Generated by CoffeeScript 2.4.1
var Box, boxes, p, startup;

boxes = [];

//values that define the graphical properties of the page
p = null;

Box = class Box {
  constructor(x, y, w, h, name) {
    var Rect, SIZE, Text;
    //deal with this individual box, position it and show a status based on color
    Rect = p.rect(x, y, w, h).attr({
      fill: '#aaa'
    });
    Text = p.text(x + w / 2, y + h / 2, name).attr({
      font: '12px Arial',
      fill: '#000'
    });
    
    //create the drag icon for this box
    SIZE = h * 0.5;
    Rect.resizer = p.rect(x + w - SIZE, y + h - SIZE, SIZE, SIZE).attr({
      fill: '#0ab',
      stroke: 'solid',
      opacity: 1
    });
    
    //define relations and functions for moving and positioning
    //move the boxes
    Rect.drag(this.move_drag, this.move_start, this.move_up);
    Rect.boxtext = Text;
    
    //resize the boxes
    Rect.resizer.drag(this.resize_drag, this.resize_start, this.resize_up);
    Rect.resizer.resizer = Rect;
    Rect.resizer.boxtext = Text;
  }

  //start, move, and up are the drag functions
  move_start() {
    //storing original coordinates
    this.ox = this.attr('x');
    this.oy = this.attr('y');
    this.attr({
      opacity: 0.5
    });
    
    //the resizer box
    this.resizer.ox = this.resizer.attr('x');
    this.resizer.oy = this.resizer.attr('y');
    this.resizer.attr({
      opacity: 0.5
    });
    
    //the box text
    this.boxtext.ox = this.attr('x') + this.attr('width') / 2;
    this.boxtext.oy = this.attr('y') + this.attr('height') / 2;
    return this.boxtext.attr({
      opacity: 0.5
    });
  }

  //visually change the box when it is being moved
  move_drag(dx, dy) {
    //move will be called with dx and dy
    this.attr({
      x: this.ox + dx,
      y: this.oy + dy
    });
    this.resizer.attr({
      x: this.resizer.ox + dx,
      y: this.resizer.oy + dy
    });
    return this.boxtext.attr({
      x: this.boxtext.ox + dx,
      y: this.boxtext.oy + dy
    });
  }

  //when the user lets go of the mouse button, reset the square's properties
  move_up() {
    //restoring the visual state
    this.attr({
      opacity: 1
    });
    this.resizer.attr({
      opacity: 1
    });
    return this.boxtext.attr({
      opacity: 1
    });
  }

  
  //here is where you would update the box's position externally
  //...
  resize_start() {
    //storing original coordinates
    this.ox = this.attr('x');
    this.oy = this.attr('y');
    
    //the resizer box
    this.resizer.ow = this.resizer.attr('width');
    this.resizer.oh = this.resizer.attr('height');
    
    //the box text
    this.boxtext.ox = this.resizer.attr('x') + this.resizer.attr('width') / 2;
    return this.boxtext.oy = this.resizer.attr('y') + this.resizer.attr('height') / 2;
  }

  resize_drag(dx, dy) {
    // move will be called with dx and dy
    this.attr({
      x: this.ox + dx,
      y: this.oy + dy
    });
    this.resizer.attr({
      width: this.resizer.ow + dx,
      height: this.resizer.oh + dy
    });
    return this.boxtext.attr({
      x: this.boxtext.ox + (dx / 2),
      y: this.boxtext.oy + (dy / 2)
    });
  }

  resize_up() {}

};

//here is where you would update the box's position externally
//...
startup = function() {
  p = Raphael('canvasdiv', window.innerWidth, window.innerHeight);
  p.rect(0, 0, window.innerWidth, window.innerHeight).attr({
    fill: '#ff0'
  });
  boxes.push(new Box(100, 100, 100, 100, 'A'));
  boxes.push(new Box(200, 200, 200, 200, 'B'));
  boxes.push(new Box(400, 400, 300, 300, 'C'));
  return boxes.push(new Box(700, 700, 400, 400, 'D'));
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\Lab\2020\017-Raphael\coffee\sketch.coffee