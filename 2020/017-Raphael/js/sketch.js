// Generated by CoffeeScript 2.4.1
//define 4 boxes to draw on screen
var boxes, dragIconSize, drawBoxes, move_drag, move_start, move_up, p, resize_drag, resize_start, resize_up, startup;

boxes = [
  {
    x: 10,
    y: 10,
    w: 70,
    h: 70,
    boxname: 'Box 1'
  },
  {
    x: 110,
    y: 10,
    w: 70,
    h: 70,
    boxname: 'Box 2'
  },
  {
    x: 210,
    y: 10,
    w: 80,
    h: 80,
    boxname: 'Box 3'
  },
  {
    x: 310,
    y: 10,
    w: 90,
    h: 90,
    boxname: 'Box 4'
  }
];

//values that define the graphical properties of the page
p = null;

dragIconSize = 20;

//the primary function of this page
startup = function() {
  console.log('startup');
  //initialize the main graphics object that is used to draw the box icons
  p = Raphael('canvasdiv', 1000, 752);
  return drawBoxes();
};

//start, move, and up are the drag functions
move_start = function() {
  console.log('move_start');
  //storing original coordinates
  this.ox = this.attr('x');
  this.oy = this.attr('y');
  this.attr({
    opacity: 0.5
  });
  
  //the resizer box
  this.resizer.ox = this.resizer.attr('x');
  this.resizer.oy = this.resizer.attr('y');
  this.resizer.attr({
    opacity: 0.5
  });
  
  //the box text
  this.boxtext.ox = this.attr('x') + parseInt(this.attr('width')) / 2;
  this.boxtext.oy = this.attr('y') + parseInt(this.attr('height')) / 2;
  return this.boxtext.attr({
    opacity: 0.5
  });
};

//visually change the box when it is being moved
move_drag = function(dx, dy) {
  console.log('move_drag');
  //move will be called with dx and dy
  this.attr({
    x: this.ox + dx,
    y: this.oy + dy
  });
  this.resizer.attr({
    x: this.resizer.ox + dx,
    y: this.resizer.oy + dy
  });
  return this.boxtext.attr({
    x: this.boxtext.ox + dx,
    y: this.boxtext.oy + dy
  });
};

//when the user lets go of the mouse button, reset the square's properties
move_up = function() {
  console.log('move_up');
  //restoring the visual state
  this.attr({
    opacity: 1
  });
  this.resizer.attr({
    opacity: 1
  });
  return this.boxtext.attr({
    opacity: 1
  });
};


//here is where you would update the box's position externally
//...
resize_start = function() {
  console.log('resize_start');
  //storing original coordinates
  this.ox = this.attr('x');
  this.oy = this.attr('y');
  
  //the resizer box
  this.resizer.ow = this.resizer.attr('width');
  this.resizer.oh = this.resizer.attr('height');
  
  //the box text
  this.boxtext.ox = this.resizer.attr('x') + (parseInt(this.resizer.attr('width')) / 2);
  return this.boxtext.oy = this.resizer.attr('y') + (parseInt(this.resizer.attr('height')) / 2);
};

resize_drag = function(dx, dy) {
  console.log('resize_drag');
  // move will be called with dx and dy
  this.attr({
    x: this.ox + dx,
    y: this.oy + dy
  });
  this.resizer.attr({
    width: this.resizer.ow + dx,
    height: this.resizer.oh + dy
  });
  return this.boxtext.attr({
    x: this.boxtext.ox + (dx / 2),
    y: this.boxtext.oy + (dy / 2)
  });
};

resize_up = function() {
  return console.log('resize_up');
};

//here is where you would update the box's position externally
//...

//draw all of the boxes in the json object
drawBoxes = function() {
  var box, boxList, boxListDrag, boxListText, dragBoxX, dragBoxY, h, i, j, len, results, textx, texty, w, x, y;
  console.log('drawBoxes');
  //working arrays
  boxList = [];
  boxListText = [];
  boxListDrag = [];

//loop through all boxes in the json object
  results = [];
  for (i = j = 0, len = boxes.length; j < len; i = ++j) {
    box = boxes[i];
    //extract the positional data from the json array
    ({x, y, w, h} = box);
    
    //position text in the center of the box
    textx = x + w / 2;
    texty = y + h / 2;
    //deal with this individual box, position it and show a status based on color
    boxList[i] = p.rect(x, y, w, h).attr({
      fill: '#aaa'
    });
    boxListText[i] = p.text(textx, texty, box.boxname).attr({
      font: '12px Arial',
      fill: '#000'
    });
    
    //position the drag icon
    dragBoxX = x + w - dragIconSize;
    dragBoxY = y + h - dragIconSize;
    
    //create the drag icon for this box
    boxListDrag[i] = p.rect(dragBoxX, dragBoxY, dragIconSize, dragIconSize).attr({
      fill: '#0ab',
      stroke: 'solid',
      opacity: 1
    });
    
    //define relations and functions for moving and positioning
    //move the boxes
    boxList[i].drag(move_drag, move_start, move_up);
    boxList[i].resizer = boxListDrag[i];
    boxList[i].boxtext = boxListText[i];
    
    //resize the boxes
    boxListDrag[i].drag(resize_drag, resize_start, resize_up);
    boxListDrag[i].resizer = boxList[i];
    results.push(boxListDrag[i].boxtext = boxListText[i]);
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\Lab\2020\017-Raphael\coffee\sketch.coffee