// Generated by CoffeeScript 2.4.1
var DIAG, F1, F2, H, S, S2, S4, W, block, canvas, carries, checkbox, drawRect, factors, recalculate, results, ripple, setup, x0;

F1 = '19';

F2 = '8';

S = 36 * 1.055;

S2 = S / 2;

S4 = S / 4;

DIAG = true;

W = null;

H = null;

x0 = null;

factors = [];

checkbox = null;

carries = null;

results = null;

canvas = null;

ripple = function() {
  var i, k, len, ref, results1;
  ref = range(W + H);
  results1 = [];
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    results[i] += carries[i];
    carries[i + 1] = floor(results[i] / 10);
    results1.push(results[i] %= 10);
  }
  return results1;
};

drawRect = function() {
  push();
  rectMode(CORNER);
  fc();
  sc(0);
  sw(3);
  rect((x0 - 1) * S, S, S * W, S * H);
  return pop();
};

recalculate = function() {
  var digit, ental, i, int0, int1, j, k, l, len, len1, len2, len3, len4, len5, len6, len7, m, o, p, prod, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, tiotal, v;
  carries = [];
  results = [];
  F1 = factors[0].value();
  F2 = factors[1].value();
  W = F1.length;
  H = F2.length;
  x0 = H + 1 + 1;
  canvas = createCanvas((x0 + W) * S + 1, (H + 2) * S + 1);
  ref = range(W + H);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    carries.push(0);
    results.push(0);
  }
  bg(1);
  sc(0);
  fc(0);
  sc();
  textAlign(CENTER, CENTER);
  textSize(32);
  rectMode(CENTER);
  ref1 = range(H + 2);
  for (l = 0, len1 = ref1.length; l < len1; l++) {
    j = ref1[l];
    ref2 = range(x0 + W + 1 - 1);
    for (m = 0, len2 = ref2.length; m < len2; m++) {
      i = ref2[m];
      block("", i, j);
    }
  }
  for (i = o = 0, len3 = F1.length; o < len3; i = ++o) {
    digit = F1[i];
    block(digit, i + x0 - 1, 0);
  }
  for (j = p = 0, len4 = F2.length; p < len4; j = ++p) {
    digit = F2[j];
    block(digit, x0 + W - 1, j + 1);
  }
  textSize(16);
  ref3 = range(H);
  for (q = 0, len5 = ref3.length; q < len5; q++) {
    j = ref3[q];
    int1 = parseInt(F2[j]);
    ref4 = range(W);
    for (r = 0, len6 = ref4.length; r < len6; r++) {
      i = ref4[r];
      int0 = parseInt(F1[i]);
      prod = int0 * int1;
      tiotal = floor(prod / 10);
      ental = prod % 10;
      results[W + H - i - j - 1] += tiotal;
      results[W + H - i - j - 2] += ental;
      prod = str(int0 * int1);
      if (prod.length === 1) {
        prod = '0' + prod;
      }
      block(prod, x0 + i - 1, j + 1);
    }
  }
  ripple();
  ref5 = range(W + H);
  for (t = 0, len7 = ref5.length; t < len7; t++) {
    i = ref5[t];
    v = str(10 * carries[i + 1] + results[i]);
    if (v.length === 1) {
      v = '0' + v;
    }
    block(v, W + H - i - 1, H + 1);
  }
  return drawRect();
};

setup = function() {
  var button;
  factors.push(createInput(F1));
  factors.push(createInput(F2));
  factors[0].input(recalculate);
  factors[1].input(recalculate);
  button = createButton('Save bitmap');
  button.mousePressed(function() {
    return saveCanvas(canvas, `${F1}x${F2}`, 'bmp');
  });
  checkbox = createCheckbox('Diagonals', true);
  checkbox.changed(function() {
    DIAG = !DIAG;
    return recalculate();
  });
  return recalculate();
};

block = function(s, i, j) {
  var n;
  push();
  translate(S2, S2);
  fc(0.9);
  sc();
  rect(i * S - S4, j * S + S4, S2, S2);
  rect(i * S + S4, j * S - S4, S2, S2);
  fc();
  sc(0);
  rect(i * S, j * S, S, S);
  fc(0);
  if (DIAG && s.length === 0) {
    if ((0 < j && j <= H + 1) && i + j + 1 >= x0 && i < x0 + W - 1) {
      line(i * S - S2, j * S + S2, i * S + S2, j * S - S2);
    }
  }
  sc();
  n = s.length;
  if (n === 1) {
    text(s[0], i * S, j * S + 2);
  }
  if (n === 2) {
    if (s[0] !== '0') {
      text(s[0], i * S - S4, j * S - S4 + 2);
    }
    text(s[1], i * S + S4, j * S + S4 + 2);
    sc(0);
    if (DIAG) {
      line(i * S - S2, j * S + S2, i * S + S2, j * S - S2);
    }
  }
  if (n > 2) {
    text(s.substring(0, n - 1), i * S - S4, j * S - S4 + 2);
    text(s[n - 1], i * S + S4, j * S + S4 + 2);
    sc(0);
    if (DIAG) {
      line(i * S - S2, j * S + S2, i * S + S2, j * S - S2);
    }
  }
  return pop();
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\Lab\2020\008-LatticeMultInteractive\coffee\sketch.coffee