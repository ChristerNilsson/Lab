// Generated by CoffeeScript 2.4.1
var Button, button, cx, draw, maximum, mouseDragged, mousePressed, results, setup, speed, start, startX, target;

maximum = 3600;

speed = 1;

startX = 0;

button = null;

target = maximum / 2;

results = [];

start = new Date();

cx = 0;

Button = class Button {
  constructor(x, y, r, click) {
    this.x = x;
    this.y = y;
    this.r = r;
    this.click = click;
  }

  inside(mx, my) {
    return dist(mx, my, this.x, this.y) < this.r;
  }

  draw() {
    fc();
    circle(this.x, this.y, this.r);
    fc(0);
    return text(target, this.x, this.y);
  }

};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  button = new Button(width / 2, 0.25 * height, 50, function() {
    var stopp;
    if (target === int(cx)) {
      stopp = new Date();
      results.push(stopp - start);
      target = _.random(0, maximum);
      button.prompt = target;
      return start = new Date();
    }
  });
  textSize(32);
  textAlign(CENTER, CENTER);
  fc(0);
  return target = _.random(0, maximum);
};

draw = function() {
  var i, j, len, res, result, results1;
  bg(0.5);
  fc(0);
  text(int(cx), width / 2, height / 2);
  button.draw();
  results1 = [];
  for (i = j = 0, len = results.length; j < len; i = ++j) {
    result = results[i];
    res = result / 1000;
    if (res < 10) {
      fc(0);
    } else {
      fc(1, 0, 0);
    }
    results1.push(text(result / 1000, 100, (i + 1) * height / 10));
  }
  return results1;
};

mousePressed = function() {
  if (button.inside(mouseX, mouseY)) {
    return button.click();
  } else {
    startX = mouseX;
    return speed = 0.2 + maximum / width * abs(mouseX - width / 2) / (width / 2);
  }
};

mouseDragged = function() {
  if (button.inside(mouseX, mouseY)) {

  } else {
    cx += speed * (mouseX - startX);
    cx = constrain(cx, 0, maximum);
    return startX = mouseX;
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsTUFBQSxFQUFBLE1BQUEsRUFBQSxFQUFBLEVBQUEsSUFBQSxFQUFBLE9BQUEsRUFBQSxZQUFBLEVBQUEsWUFBQSxFQUFBLE9BQUEsRUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQSxNQUFBLEVBQUE7O0FBQUEsT0FBQSxHQUFVOztBQUNWLEtBQUEsR0FBUTs7QUFDUixNQUFBLEdBQVM7O0FBQ1QsTUFBQSxHQUFTOztBQUNULE1BQUEsR0FBUyxPQUFBLEdBQVE7O0FBQ2pCLE9BQUEsR0FBVTs7QUFDVixLQUFBLEdBQVEsSUFBSSxJQUFKLENBQUE7O0FBQ1IsRUFBQSxHQUFLOztBQUVDLFNBQU4sTUFBQSxPQUFBO0VBQ0MsV0FBYyxFQUFBLEdBQUEsR0FBQSxPQUFBLENBQUE7SUFBQyxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7RUFBWDs7RUFDZCxNQUFTLENBQUMsRUFBRCxFQUFJLEVBQUosQ0FBQTtXQUFXLElBQUEsQ0FBSyxFQUFMLEVBQVEsRUFBUixFQUFXLElBQUMsQ0FBQSxDQUFaLEVBQWMsSUFBQyxDQUFBLENBQWYsQ0FBQSxHQUFvQixJQUFDLENBQUE7RUFBaEM7O0VBQ1QsSUFBTyxDQUFBLENBQUE7SUFDTixFQUFBLENBQUE7SUFDQSxNQUFBLENBQU8sSUFBQyxDQUFBLENBQVIsRUFBVSxJQUFDLENBQUEsQ0FBWCxFQUFhLElBQUMsQ0FBQSxDQUFkO0lBQ0EsRUFBQSxDQUFHLENBQUg7V0FDQSxJQUFBLENBQUssTUFBTCxFQUFZLElBQUMsQ0FBQSxDQUFiLEVBQWUsSUFBQyxDQUFBLENBQWhCO0VBSk07O0FBSFI7O0FBU0EsS0FBQSxHQUFRLFFBQUEsQ0FBQSxDQUFBO0VBQ1AsWUFBQSxDQUFhLFdBQWIsRUFBeUIsWUFBekI7RUFDQSxNQUFBLEdBQVMsSUFBSSxNQUFKLENBQVcsS0FBQSxHQUFNLENBQWpCLEVBQW1CLElBQUEsR0FBSyxNQUF4QixFQUErQixFQUEvQixFQUFtQyxRQUFBLENBQUEsQ0FBQTtBQUMzQyxRQUFBO0lBQUEsSUFBRyxNQUFBLEtBQVUsR0FBQSxDQUFJLEVBQUosQ0FBYjtNQUNDLEtBQUEsR0FBUSxJQUFJLElBQUosQ0FBQTtNQUNSLE9BQU8sQ0FBQyxJQUFSLENBQWEsS0FBQSxHQUFRLEtBQXJCO01BQ0EsTUFBQSxHQUFTLENBQUMsQ0FBQyxNQUFGLENBQVMsQ0FBVCxFQUFXLE9BQVg7TUFDVCxNQUFNLENBQUMsTUFBUCxHQUFnQjthQUNoQixLQUFBLEdBQVEsSUFBSSxJQUFKLENBQUEsRUFMVDs7RUFEMkMsQ0FBbkM7RUFPVCxRQUFBLENBQVMsRUFBVDtFQUNBLFNBQUEsQ0FBVSxNQUFWLEVBQWlCLE1BQWpCO0VBQ0EsRUFBQSxDQUFHLENBQUg7U0FDQSxNQUFBLEdBQVMsQ0FBQyxDQUFDLE1BQUYsQ0FBUyxDQUFULEVBQVcsT0FBWDtBQVpGOztBQWNSLElBQUEsR0FBTyxRQUFBLENBQUEsQ0FBQTtBQUNOLE1BQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLE1BQUEsRUFBQTtFQUFBLEVBQUEsQ0FBRyxHQUFIO0VBQ0EsRUFBQSxDQUFHLENBQUg7RUFDQSxJQUFBLENBQUssR0FBQSxDQUFJLEVBQUosQ0FBTCxFQUFhLEtBQUEsR0FBTSxDQUFuQixFQUFxQixNQUFBLEdBQU8sQ0FBNUI7RUFDQSxNQUFNLENBQUMsSUFBUCxDQUFBO0FBQ0E7RUFBQSxLQUFBLGlEQUFBOztJQUNDLEdBQUEsR0FBTSxNQUFBLEdBQU87SUFDYixJQUFHLEdBQUEsR0FBTSxFQUFUO01BQWlCLEVBQUEsQ0FBRyxDQUFILEVBQWpCO0tBQUEsTUFBQTtNQUEyQixFQUFBLENBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLEVBQTNCOztrQkFDQSxJQUFBLENBQUssTUFBQSxHQUFPLElBQVosRUFBaUIsR0FBakIsRUFBcUIsQ0FBQyxDQUFBLEdBQUUsQ0FBSCxDQUFBLEdBQU0sTUFBTixHQUFhLEVBQWxDO0VBSEQsQ0FBQTs7QUFMTTs7QUFVUCxZQUFBLEdBQWUsUUFBQSxDQUFBLENBQUE7RUFDZCxJQUFHLE1BQU0sQ0FBQyxNQUFQLENBQWMsTUFBZCxFQUFxQixNQUFyQixDQUFIO1dBQ0MsTUFBTSxDQUFDLEtBQVAsQ0FBQSxFQUREO0dBQUEsTUFBQTtJQUdDLE1BQUEsR0FBUztXQUNULEtBQUEsR0FBUSxHQUFBLEdBQU0sT0FBQSxHQUFRLEtBQVIsR0FBZ0IsR0FBQSxDQUFJLE1BQUEsR0FBUyxLQUFBLEdBQU0sQ0FBbkIsQ0FBaEIsR0FBd0MsQ0FBQyxLQUFBLEdBQU0sQ0FBUCxFQUp2RDs7QUFEYzs7QUFPZixZQUFBLEdBQWUsUUFBQSxDQUFBLENBQUE7RUFDZCxJQUFHLE1BQU0sQ0FBQyxNQUFQLENBQWMsTUFBZCxFQUFxQixNQUFyQixDQUFIO0FBQUE7R0FBQSxNQUFBO0lBRUMsRUFBQSxJQUFNLEtBQUEsR0FBUSxDQUFDLE1BQUEsR0FBUyxNQUFWO0lBQ2QsRUFBQSxHQUFLLFNBQUEsQ0FBVSxFQUFWLEVBQWEsQ0FBYixFQUFlLE9BQWY7V0FDTCxNQUFBLEdBQVMsT0FKVjs7QUFEYyIsInNvdXJjZXNDb250ZW50IjpbIm1heGltdW0gPSAzNjAwXHJcbnNwZWVkID0gMVxyXG5zdGFydFggPSAwXHJcbmJ1dHRvbiA9IG51bGxcclxudGFyZ2V0ID0gbWF4aW11bS8yXHJcbnJlc3VsdHMgPSBbXVxyXG5zdGFydCA9IG5ldyBEYXRlKClcclxuY3ggPSAwXHJcblxyXG5jbGFzcyBCdXR0b24gXHJcblx0Y29uc3RydWN0b3IgOiAoQHgsQHksQHIsQGNsaWNrKSAtPlxyXG5cdGluc2lkZSA6IChteCxteSkgLT4gZGlzdChteCxteSxAeCxAeSkgPCBAclxyXG5cdGRyYXcgOiAtPlxyXG5cdFx0ZmMoKVxyXG5cdFx0Y2lyY2xlIEB4LEB5LEByIFxyXG5cdFx0ZmMgMFxyXG5cdFx0dGV4dCB0YXJnZXQsQHgsQHlcclxuXHJcbnNldHVwID0gLT5cclxuXHRjcmVhdGVDYW52YXMgd2luZG93V2lkdGgsd2luZG93SGVpZ2h0XHJcblx0YnV0dG9uID0gbmV3IEJ1dHRvbiB3aWR0aC8yLDAuMjUqaGVpZ2h0LDUwLCAtPlxyXG5cdFx0aWYgdGFyZ2V0ID09IGludCBjeFxyXG5cdFx0XHRzdG9wcCA9IG5ldyBEYXRlKClcclxuXHRcdFx0cmVzdWx0cy5wdXNoIHN0b3BwIC0gc3RhcnRcclxuXHRcdFx0dGFyZ2V0ID0gXy5yYW5kb20gMCxtYXhpbXVtXHJcblx0XHRcdGJ1dHRvbi5wcm9tcHQgPSB0YXJnZXRcclxuXHRcdFx0c3RhcnQgPSBuZXcgRGF0ZSgpXHJcblx0dGV4dFNpemUgMzJcclxuXHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5cdGZjIDBcclxuXHR0YXJnZXQgPSBfLnJhbmRvbSAwLG1heGltdW1cclxuXHJcbmRyYXcgPSAtPlxyXG5cdGJnIDAuNVxyXG5cdGZjIDBcclxuXHR0ZXh0IGludChjeCksd2lkdGgvMixoZWlnaHQvMlxyXG5cdGJ1dHRvbi5kcmF3KClcclxuXHRmb3IgcmVzdWx0LGkgaW4gcmVzdWx0c1xyXG5cdFx0cmVzID0gcmVzdWx0LzEwMDBcclxuXHRcdGlmIHJlcyA8IDEwIHRoZW4gZmMgMCBlbHNlIGZjIDEsMCwwXHJcblx0XHR0ZXh0IHJlc3VsdC8xMDAwLDEwMCwoaSsxKSpoZWlnaHQvMTBcclxuXHJcbm1vdXNlUHJlc3NlZCA9IC0+XHJcblx0aWYgYnV0dG9uLmluc2lkZSBtb3VzZVgsbW91c2VZIFxyXG5cdFx0YnV0dG9uLmNsaWNrKClcclxuXHRlbHNlXHJcblx0XHRzdGFydFggPSBtb3VzZVhcclxuXHRcdHNwZWVkID0gMC4yICsgbWF4aW11bS93aWR0aCAqIGFicyhtb3VzZVggLSB3aWR0aC8yKSAvICh3aWR0aC8yKVxyXG5cclxubW91c2VEcmFnZ2VkID0gLT5cclxuXHRpZiBidXR0b24uaW5zaWRlIG1vdXNlWCxtb3VzZVkgXHJcblx0ZWxzZVxyXG5cdFx0Y3ggKz0gc3BlZWQgKiAobW91c2VYIC0gc3RhcnRYKVxyXG5cdFx0Y3ggPSBjb25zdHJhaW4gY3gsMCxtYXhpbXVtXHJcblx0XHRzdGFydFggPSBtb3VzZVhcclxuIl19
//# sourceURL=c:\Lab\2020\016-ScrollVideos\coffee\sketch.coffee