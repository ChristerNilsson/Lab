// Generated by CoffeeScript 2.4.1
var Button, SCALE, VERSION, bakgrund, buttons, cx, cy, draw, msg0, msg1, msg2, setup, startX, startY, touchEnded, touchStarted;

VERSION = 12;

bakgrund = '#888';

SCALE = 1;

cx = 0;

cy = 0;

msg0 = VERSION;

msg1 = "";

msg2 = "";

buttons = [];

startX = 0;

startY = 0;

Button = class Button {
  constructor(prompt, x1, y1, click) {
    this.prompt = prompt;
    this.x = x1;
    this.y = y1;
    this.click = click;
    this.r = 50;
  }

  draw() {
    circle(this.x, this.y, this.r);
    return text(this.prompt, this.x, this.y);
  }

  inside(x, y) {
    return this.r > dist(x, y, this.x, this.y);
  }

};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  textAlign(CENTER, CENTER);
  textSize(50);
  cx = width / 2;
  return cy = height / 2;
};

draw = function() {
  var button, i, len;
  background(bakgrund);
  push();
  translate(cx, cy);
  scale(SCALE);
  circle(0, 0, 100);
  pop();
  for (i = 0, len = buttons.length; i < len; i++) {
    button = buttons[i];
    button.draw();
  }
  text(msg0, width / 2, height / 2);
  text(SCALE, width / 2, height / 2 + 100);
  return text(msg2, width / 2, height / 2 + 200);
};

touchStarted = function(event) {
  event.preventDefault();
  startX = mouseX;
  startY = mouseY;
  return false;
};

touchEnded = function(event) {
  var button, i, len;
  event.preventDefault();
  for (i = 0, len = buttons.length; i < len; i++) {
    button = buttons[i];
    if (button.inside(mouseX, mouseY)) {
      return button.click();
    }
  }
  if (startX === mouseX && startY === mouseY) {
    buttons = [];
    buttons.push(new Button('+', 50, 50, function() {
      SCALE *= 1.5;
      return buttons = [];
    }));
    buttons.push(new Button('-', 150, 50, function() {
      SCALE /= 1.5;
      return buttons = [];
    }));
  }
  cx += mouseX - startX;
  cy += mouseY - startY;
  startX = 0;
  startY = 0;
  return false;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoMi5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxza2V0Y2gyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxNQUFBLEVBQUEsS0FBQSxFQUFBLE9BQUEsRUFBQSxRQUFBLEVBQUEsT0FBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxNQUFBLEVBQUEsTUFBQSxFQUFBLFVBQUEsRUFBQTs7QUFBQSxPQUFBLEdBQVU7O0FBQ1YsUUFBQSxHQUFXOztBQUNYLEtBQUEsR0FBUTs7QUFDUixFQUFBLEdBQUs7O0FBQ0wsRUFBQSxHQUFLOztBQUNMLElBQUEsR0FBTzs7QUFDUCxJQUFBLEdBQU87O0FBQ1AsSUFBQSxHQUFPOztBQUNQLE9BQUEsR0FBVTs7QUFDVixNQUFBLEdBQVM7O0FBQ1QsTUFBQSxHQUFTOztBQUVILFNBQU4sTUFBQSxPQUFBO0VBQ0MsV0FBYyxPQUFBLElBQUEsSUFBQSxPQUFBLENBQUE7SUFBQyxJQUFDLENBQUE7SUFBTyxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBVSxJQUFDLENBQUEsQ0FBRCxHQUFHO0VBQTdCOztFQUNkLElBQU8sQ0FBQSxDQUFBO0lBQ04sTUFBQSxDQUFPLElBQUMsQ0FBQSxDQUFSLEVBQVUsSUFBQyxDQUFBLENBQVgsRUFBYSxJQUFDLENBQUEsQ0FBZDtXQUNBLElBQUEsQ0FBSyxJQUFDLENBQUEsTUFBTixFQUFhLElBQUMsQ0FBQSxDQUFkLEVBQWdCLElBQUMsQ0FBQSxDQUFqQjtFQUZNOztFQUdQLE1BQVMsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFBO1dBQVMsSUFBQyxDQUFBLENBQUQsR0FBSyxJQUFBLENBQUssQ0FBTCxFQUFPLENBQVAsRUFBUyxJQUFDLENBQUEsQ0FBVixFQUFZLElBQUMsQ0FBQSxDQUFiO0VBQWQ7O0FBTFY7O0FBT0EsS0FBQSxHQUFRLFFBQUEsQ0FBQSxDQUFBO0VBQ1AsWUFBQSxDQUFhLFdBQWIsRUFBeUIsWUFBekI7RUFDQSxTQUFBLENBQVUsTUFBVixFQUFpQixNQUFqQjtFQUNBLFFBQUEsQ0FBUyxFQUFUO0VBQ0EsRUFBQSxHQUFLLEtBQUEsR0FBTTtTQUNYLEVBQUEsR0FBSyxNQUFBLEdBQU87QUFMTDs7QUFPUixJQUFBLEdBQU8sUUFBQSxDQUFBLENBQUE7QUFDTixNQUFBLE1BQUEsRUFBQSxDQUFBLEVBQUE7RUFBQSxVQUFBLENBQVcsUUFBWDtFQUNBLElBQUEsQ0FBQTtFQUNBLFNBQUEsQ0FBVSxFQUFWLEVBQWEsRUFBYjtFQUNBLEtBQUEsQ0FBTSxLQUFOO0VBQ0EsTUFBQSxDQUFPLENBQVAsRUFBUyxDQUFULEVBQVcsR0FBWDtFQUNBLEdBQUEsQ0FBQTtFQUNBLEtBQUEseUNBQUE7O0lBQ0MsTUFBTSxDQUFDLElBQVAsQ0FBQTtFQUREO0VBRUEsSUFBQSxDQUFLLElBQUwsRUFBVSxLQUFBLEdBQU0sQ0FBaEIsRUFBa0IsTUFBQSxHQUFPLENBQXpCO0VBQ0EsSUFBQSxDQUFLLEtBQUwsRUFBVyxLQUFBLEdBQU0sQ0FBakIsRUFBbUIsTUFBQSxHQUFPLENBQVAsR0FBUyxHQUE1QjtTQUNBLElBQUEsQ0FBSyxJQUFMLEVBQVUsS0FBQSxHQUFNLENBQWhCLEVBQWtCLE1BQUEsR0FBTyxDQUFQLEdBQVMsR0FBM0I7QUFYTTs7QUFhUCxZQUFBLEdBQWUsUUFBQSxDQUFDLEtBQUQsQ0FBQTtFQUNkLEtBQUssQ0FBQyxjQUFOLENBQUE7RUFDQSxNQUFBLEdBQVM7RUFDVCxNQUFBLEdBQVM7U0FDVDtBQUpjOztBQU1mLFVBQUEsR0FBYSxRQUFBLENBQUMsS0FBRCxDQUFBO0FBQ1osTUFBQSxNQUFBLEVBQUEsQ0FBQSxFQUFBO0VBQUEsS0FBSyxDQUFDLGNBQU4sQ0FBQTtFQUNBLEtBQUEseUNBQUE7O0lBQ0MsSUFBRyxNQUFNLENBQUMsTUFBUCxDQUFjLE1BQWQsRUFBcUIsTUFBckIsQ0FBSDtBQUFvQyxhQUFPLE1BQU0sQ0FBQyxLQUFQLENBQUEsRUFBM0M7O0VBREQ7RUFFQSxJQUFHLE1BQUEsS0FBUSxNQUFSLElBQW1CLE1BQUEsS0FBUSxNQUE5QjtJQUNDLE9BQUEsR0FBVTtJQUNWLE9BQU8sQ0FBQyxJQUFSLENBQWEsSUFBSSxNQUFKLENBQVcsR0FBWCxFQUFlLEVBQWYsRUFBa0IsRUFBbEIsRUFBc0IsUUFBQSxDQUFBLENBQUE7TUFDbEMsS0FBQSxJQUFTO2FBQ1QsT0FBQSxHQUFVO0lBRndCLENBQXRCLENBQWI7SUFHQSxPQUFPLENBQUMsSUFBUixDQUFhLElBQUksTUFBSixDQUFXLEdBQVgsRUFBZSxHQUFmLEVBQW1CLEVBQW5CLEVBQXVCLFFBQUEsQ0FBQSxDQUFBO01BQ25DLEtBQUEsSUFBUzthQUNULE9BQUEsR0FBVTtJQUZ5QixDQUF2QixDQUFiLEVBTEQ7O0VBUUEsRUFBQSxJQUFNLE1BQUEsR0FBTztFQUNiLEVBQUEsSUFBTSxNQUFBLEdBQU87RUFDYixNQUFBLEdBQVM7RUFDVCxNQUFBLEdBQVM7U0FDVDtBQWhCWSIsInNvdXJjZXNDb250ZW50IjpbIlZFUlNJT04gPSAxMlxyXG5iYWtncnVuZCA9ICcjODg4J1xyXG5TQ0FMRSA9IDFcclxuY3ggPSAwXHJcbmN5ID0gMFxyXG5tc2cwID0gVkVSU0lPTlxyXG5tc2cxID0gXCJcIlxyXG5tc2cyID0gXCJcIlxyXG5idXR0b25zID0gW11cclxuc3RhcnRYID0gMFxyXG5zdGFydFkgPSAwIFxyXG5cclxuY2xhc3MgQnV0dG9uXHJcblx0Y29uc3RydWN0b3IgOiAoQHByb21wdCxAeCxAeSxAY2xpY2spIC0+IEByPTUwXHJcblx0ZHJhdyA6IC0+XHJcblx0XHRjaXJjbGUgQHgsQHksQHJcclxuXHRcdHRleHQgQHByb21wdCxAeCxAeVxyXG5cdGluc2lkZSA6ICh4LHkpIC0+IEByID4gZGlzdCB4LHksQHgsQHlcclxuXHJcbnNldHVwID0gLT5cclxuXHRjcmVhdGVDYW52YXMgd2luZG93V2lkdGgsd2luZG93SGVpZ2h0XHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHR0ZXh0U2l6ZSA1MFxyXG5cdGN4ID0gd2lkdGgvMlxyXG5cdGN5ID0gaGVpZ2h0LzJcclxuXHJcbmRyYXcgPSAtPlxyXG5cdGJhY2tncm91bmQgYmFrZ3J1bmRcclxuXHRwdXNoKClcclxuXHR0cmFuc2xhdGUgY3gsY3lcclxuXHRzY2FsZSBTQ0FMRVxyXG5cdGNpcmNsZSAwLDAsMTAwXHJcblx0cG9wKClcclxuXHRmb3IgYnV0dG9uIGluIGJ1dHRvbnNcclxuXHRcdGJ1dHRvbi5kcmF3KClcclxuXHR0ZXh0IG1zZzAsd2lkdGgvMixoZWlnaHQvMlxyXG5cdHRleHQgU0NBTEUsd2lkdGgvMixoZWlnaHQvMisxMDBcclxuXHR0ZXh0IG1zZzIsd2lkdGgvMixoZWlnaHQvMisyMDBcclxuXHJcbnRvdWNoU3RhcnRlZCA9IChldmVudCkgLT5cclxuXHRldmVudC5wcmV2ZW50RGVmYXVsdCgpXHJcblx0c3RhcnRYID0gbW91c2VYXHJcblx0c3RhcnRZID0gbW91c2VZXHJcblx0ZmFsc2VcclxuXHJcbnRvdWNoRW5kZWQgPSAoZXZlbnQpIC0+XHJcblx0ZXZlbnQucHJldmVudERlZmF1bHQoKVxyXG5cdGZvciBidXR0b24gaW4gYnV0dG9uc1xyXG5cdFx0aWYgYnV0dG9uLmluc2lkZSBtb3VzZVgsbW91c2VZIHRoZW4gcmV0dXJuIGJ1dHRvbi5jbGljaygpXHJcblx0aWYgc3RhcnRYPT1tb3VzZVggYW5kIHN0YXJ0WT09bW91c2VZXHJcblx0XHRidXR0b25zID0gW11cclxuXHRcdGJ1dHRvbnMucHVzaCBuZXcgQnV0dG9uICcrJyw1MCw1MCwgLT5cclxuXHRcdFx0U0NBTEUgKj0gMS41XHJcblx0XHRcdGJ1dHRvbnMgPSBbXVxyXG5cdFx0YnV0dG9ucy5wdXNoIG5ldyBCdXR0b24gJy0nLDE1MCw1MCwgLT5cclxuXHRcdFx0U0NBTEUgLz0gMS41XHJcblx0XHRcdGJ1dHRvbnMgPSBbXVxyXG5cdGN4ICs9IG1vdXNlWC1zdGFydFhcclxuXHRjeSArPSBtb3VzZVktc3RhcnRZXHJcblx0c3RhcnRYID0gMFxyXG5cdHN0YXJ0WSA9IDBcclxuXHRmYWxzZVxyXG5cclxuIl19
//# sourceURL=c:\Lab\2020\015-ZoomPan\coffee\sketch2.coffee