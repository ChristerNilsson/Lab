// Generated by CoffeeScript 2.4.1
var bakgrund, clearLog, draw, enableLog, handle_pinch_zoom, logga, loggaEvents, setup, touchEnded, touchMoved, touchStarted, tpCache, update_background;

loggaEvents = false;

tpCache = [];

bakgrund = '#888';

setup = function() {
  createCanvas(windowWidth, windowHeight / 2);
  return logga("Hej HÃ¤pp 30!");
};

draw = function() {
  return background(bakgrund);
};

enableLog = function() {
  return loggaEvents = !loggaEvents;
};

logga = function(name, printTargetIds = false) {
  var o, t;
  if (!loggaEvents) {
    return;
  }
  o = document.getElementsByTagName('output')[0];
  o.innerHTML += `${name}: touches = ${touches.length} <br>`;
  if (printTargetIds) {
    return o.innerHTML += ((function() {
      var j, len, results;
      results = [];
      for (j = 0, len = touches.length; j < len; j++) {
        t = touches[j];
        results.push(`... id = ${t.id}`);
      }
      return results;
    })()).join('<br>');
  }
};

clearLog = function() {
  var o;
  o = document.getElementsByTagName('output')[0];
  return o.innerHTML = "";
};

update_background = function(ev) {
  var n;
  n = touches.length;
  bakgrund = "lightblue";
  if (n === 1) {
    bakgrund = "yellow";
  }
  if (n === 2) {
    bakgrund = "pink";
  }
  return logga(`update_background ${bakgrund}`);
};

handle_pinch_zoom = function(ev) {
  var PINCH_THRESHHOLD, diff0, diff1, e, i, index0, index1, j, len, ref;
  try {
    logga(`--HPZ ${tpCache.length} ${touches.length}`);
    if (touches.length === 2) {
      // Check if the two target touches are the same ones that started the 2-touch
      index0 = -1;
      index1 = -1;
      ref = range(tpCache.length);
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        if (tpCache[i].id === touches[0].id) {
          index0 = i;
        }
        if (tpCache[i].id === touches[1].id) {
          index1 = i;
        }
      }
      logga(`----index ${index0} ${index1}`);
      if (index0 >= 0 && index1 >= 0) {
        // Calculate the difference between the start and move coordinates
        diff0 = int(dist(tpCache[index0].x, tpCache[index0].y, touches[0].x, touches[0].y));
        diff1 = int(dist(tpCache[index1].x, tpCache[index1].y, touches[1].x, touches[1].y));
        // This threshold is device dependent as well as application specific
        PINCH_THRESHHOLD = ev.target.clientWidth / 10;
        logga(`----diff ${diff0} ${diff1} ${PINCH_THRESHHOLD}`);
        if (diff0 >= PINCH_THRESHHOLD && diff1 >= PINCH_THRESHHOLD) {
          bakgrund = "green";
        }
        return logga(`----bakgrund ${bakgrund}`);
      } else {
        return tpCache = [];
      }
    }
  } catch (error) {
    e = error;
    return logga(`error in HPZ ${e}`);
  }
};

touchStarted = function(ev) {
  var e, j, len, t;
  try {
    logga('touchStarted', true);
    ev.preventDefault();
    if (touches.length === 2) {
      for (j = 0, len = touches.length; j < len; j++) {
        t = touches[j];
        tpCache.push(t);
      }
    }
    return update_background(ev);
  } catch (error) {
    e = error;
    return logga("error in Started");
  }
};

touchMoved = function(ev) {
  try {
    logga('touchMoved');
    ev.preventDefault();
    if (!touches.length === 2) {
      update_background(ev);
    }
    ev.target.style.outline = "dashed";
    return handle_pinch_zoom(ev);
  } catch (error) {
    return logga("error in Moved");
  }
};

touchEnded = function(ev) {
  var e;
  try {
    logga('touchEnded');
    ev.preventDefault();
    if (touches.length === 0) {
      // Restore background and outline to original values
      ev.target.style.background = "white";
      return ev.target.style.outline = "1px solid black";
    }
  } catch (error) {
    e = error;
    return logga("error in Ended");
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\Lab\2020\015-ZoomPan\coffee\sketch2.coffee