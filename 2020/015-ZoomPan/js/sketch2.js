// Generated by CoffeeScript 2.4.1
var bakgrund, clearLog, draw, enableLog, handle_pinch_zoom, logga, loggaEvents, setup, touchEnded, touchMoved, touchStarted, tpCache, update_background;

loggaEvents = true;

tpCache = [];

bakgrund = '#888';

setup = function() {
  createCanvas(windowWidth, windowHeight / 2);
  return logga("Hej HÃ¤pp 26!");
};

draw = function() {
  return background(bakgrund);
};

enableLog = function() {
  return loggaEvents = !loggaEvents;
};

logga = function(name, printTargetIds = false) {
  var o, t;
  if (!loggaEvents) {
    return;
  }
  o = document.getElementsByTagName('output')[0];
  o.innerHTML += `${name}: touches = ${touches.length} <br>`;
  if (printTargetIds) {
    return o.innerHTML += ((function() {
      var j, len, results;
      results = [];
      for (j = 0, len = touches.length; j < len; j++) {
        t = touches[j];
        results.push(`... id = ${t.id} <br>`);
      }
      return results;
    })()).join('<br>');
  }
};

clearLog = function() {
  var o;
  o = document.getElementsByTagName('output')[0];
  return o.innerHTML = "";
};

update_background = function(ev) {
  var n;
  n = touches.length;
  if (n === 1) {
    bakgrund = "yellow";
  } else if (n === 2) {
    bakgrund = "pink";
  } else {
    bakgrund = "lightblue";
  }
  return logga(`update_background ${bakgrund}`);
};

handle_pinch_zoom = function(ev) {
  var PINCH_THRESHHOLD, diff1, diff2, e, i, j, len, point1, point2, ref;
  try {
    logga(`  HPZ ${tpCache.length} ${touches.length}`);
    if (touches.length === 2) {
      // Check if the two target touches are the same ones that started the 2-touch
      point1 = -1;
      point2 = -1;
      ref = range(tpCache.length);
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        if (tpCache[i].id === touches[0].id) {
          point1 = i;
        }
        if (tpCache[i].id === touches[1].id) {
          point2 = i;
        }
      }
      if (point1 >= 0 && point2 >= 0) {
        // Calculate the difference between the start and move coordinates
        diff1 = Math.abs(tpCache[point1].clientX - touches[0].clientX);
        diff2 = Math.abs(tpCache[point2].clientX - touches[1].clientX);
        // This threshold is device dependent as well as application specific
        PINCH_THRESHHOLD = ev.target.clientWidth / 10;
        if (diff1 >= PINCH_THRESHHOLD && diff2 >= PINCH_THRESHHOLD) {
          return bakgrund = "green";
        }
      } else {
        return tpCache = [];
      }
    }
  } catch (error) {
    e = error;
    return logga(`error in HPZ ${e}`);
  }
};

touchStarted = function(ev) {
  var e, j, len, t;
  try {
    logga('touchStarted', true);
    ev.preventDefault();
    if (touches.length === 2) {
      for (j = 0, len = touches.length; j < len; j++) {
        t = touches[j];
        tpCache.push(t);
      }
    }
    return update_background(ev);
  } catch (error) {
    e = error;
    return logga("error in Started");
  }
};

touchMoved = function(ev) {
  try {
    logga('touchMoved');
    ev.preventDefault();
    if (!touches.length === 2) {
      update_background(ev);
    }
    ev.target.style.outline = "dashed";
    return handle_pinch_zoom(ev);
  } catch (error) {
    return logga("error in Moved");
  }
};

touchEnded = function(ev) {
  var e;
  try {
    logga('touchEnded');
    ev.preventDefault();
    if (touches.length === 0) {
      // Restore background and outline to original values
      ev.target.style.background = "white";
      return ev.target.style.outline = "1px solid black";
    }
  } catch (error) {
    e = error;
    return logga("error in Ended");
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\Lab\2020\015-ZoomPan\coffee\sketch2.coffee