// Generated by CoffeeScript 2.4.1
var bakgrund, clearLog, draw, enableLog, handle_pinch_zoom, logga, loggaEvents, setup, touchEnded, touchMoved, touchStarted, tpCache, update_background;

loggaEvents = true;

tpCache = [];

bakgrund = '#888';

setup = function() {
  createCanvas(windowWidth, windowHeight / 2);
  return logga("Hej HÃ¤pp 25!");
};

draw = function() {
  return background(bakgrund);
};

enableLog = function() {
  return loggaEvents = !loggaEvents;
};

logga = function(name, printTargetIds = false) {
  var j, len, o, s, t;
  if (!loggaEvents) {
    return;
  }
  o = document.getElementsByTagName('output')[0];
  o.innerHTML += `${name}: touches = ${touches.length
  // + "  ; targetTouches = " + ev.targetTouches.length + " ; changedTouches = " + ev.changedTouches.length
} <br>`;
  if (printTargetIds) {
    s = "";
    for (j = 0, len = touches.length; j < len; j++) {
      t = touches[j];
      s += `... id = ${t.id
    // t.id
} <br>`;
    }
    return o.innerHTML += s;
  }
};

clearLog = function() {
  var o;
  o = document.getElementsByTagName('output')[0];
  return o.innerHTML = "";
};

update_background = function(ev) {
  var n;
  n = touches.length;
  if (n === 1) {
    bakgrund = "yellow";
  } else if (n === 2) {
    bakgrund = "pink";
  } else {
    bakgrund = "lightblue";
  }
  return logga(`update_background ${bakgrund}`);
};

handle_pinch_zoom = function(ev) {
  var PINCH_THRESHHOLD, diff1, diff2, e, i, j, len, point1, point2, ref;
  try {
    logga("HPZ");
    if (touches.length === 2) {
      // Check if the two target touches are the same ones that started the 2-touch
      point1 = -1;
      point2 = -1;
      ref = range(tpCache.length);
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        if (tpCache[i].id === touches[0].id) {
          point1 = i;
        }
        if (tpCache[i].id === touches[1].id) {
          point2 = i;
        }
      }
      if (point1 >= 0 && point2 >= 0) {
        // Calculate the difference between the start and move coordinates
        diff1 = Math.abs(tpCache[point1].clientX - touches[0].clientX);
        diff2 = Math.abs(tpCache[point2].clientX - touches[1].clientX);
        // This threshold is device dependent as well as application specific
        PINCH_THRESHHOLD = ev.target.clientWidth / 10;
        if (diff1 >= PINCH_THRESHHOLD && diff2 >= PINCH_THRESHHOLD) {
          return bakgrund = "green";
        }
      } else {
        return tpCache = [];
      }
    }
  } catch (error) {
    e = error;
    return logga(`error in HPZ ${e}`);
  }
};

touchStarted = function(ev) {
  var e, j, len, t;
  try {
    logga('touchStarted', true);
    ev.preventDefault();
    if (touches.length === 2) {
      for (j = 0, len = touches.length; j < len; j++) {
        t = touches[j];
        tpCache.push(t);
      }
    }
    return update_background(ev);
  } catch (error) {
    e = error;
    return logga("error in Started");
  }
};

touchMoved = function(ev) {
  try {
    logga('touchMoved');
    ev.preventDefault();
    if (!touches.length === 2) {
      update_background(ev);
    }
    ev.target.style.outline = "dashed";
    return handle_pinch_zoom(ev);
  } catch (error) {
    return logga("error in Moved");
  }
};

touchEnded = function(ev) {
  var e;
  try {
    logga('touchEnded');
    ev.preventDefault();
    if (touches.length === 0) {
      // Restore background and outline to original values
      ev.target.style.background = "white";
      return ev.target.style.outline = "1px solid black";
    }
  } catch (error) {
    e = error;
    return logga("error in Ended");
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoMi5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxza2V0Y2gyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxRQUFBLEVBQUEsUUFBQSxFQUFBLElBQUEsRUFBQSxTQUFBLEVBQUEsaUJBQUEsRUFBQSxLQUFBLEVBQUEsV0FBQSxFQUFBLEtBQUEsRUFBQSxVQUFBLEVBQUEsVUFBQSxFQUFBLFlBQUEsRUFBQSxPQUFBLEVBQUE7O0FBQUEsV0FBQSxHQUFjOztBQUNkLE9BQUEsR0FBVTs7QUFDVixRQUFBLEdBQVc7O0FBRVgsS0FBQSxHQUFRLFFBQUEsQ0FBQSxDQUFBO0VBQ1AsWUFBQSxDQUFhLFdBQWIsRUFBeUIsWUFBQSxHQUFhLENBQXRDO1NBQ0EsS0FBQSxDQUFNLGNBQU47QUFGTzs7QUFJUixJQUFBLEdBQU8sUUFBQSxDQUFBLENBQUE7U0FDTixVQUFBLENBQVcsUUFBWDtBQURNOztBQUdQLFNBQUEsR0FBWSxRQUFBLENBQUEsQ0FBQTtTQUFHLFdBQUEsR0FBYyxDQUFJO0FBQXJCOztBQUVaLEtBQUEsR0FBUSxRQUFBLENBQUMsSUFBRCxFQUFPLGlCQUFlLEtBQXRCLENBQUE7QUFDUCxNQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQTtFQUFBLElBQUcsQ0FBSSxXQUFQO0FBQXdCLFdBQXhCOztFQUNBLENBQUEsR0FBSSxRQUFRLENBQUMsb0JBQVQsQ0FBOEIsUUFBOUIsQ0FBd0MsQ0FBQSxDQUFBO0VBQzVDLENBQUMsQ0FBQyxTQUFGLElBQWUsQ0FBQSxDQUFBLENBQUcsSUFBSCxDQUFRLFlBQVIsQ0FBQSxDQUFzQixPQUFPLENBQUMsTUFBOUI7O0NBQXFDLEtBQXJDO0VBRWYsSUFBRyxjQUFIO0lBQ0MsQ0FBQSxHQUFJO0lBQ0osS0FBQSx5Q0FBQTs7TUFDQyxDQUFBLElBQUssQ0FBQSxTQUFBLENBQUEsQ0FBWSxDQUFDLENBQUMsRUFBZDs7Q0FBaUIsS0FB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Y0FBSCxDQUFBO0lBQ0EsSUFBRyxDQUFJLE9BQU8sQ0FBQyxNQUFaLEtBQXNCLENBQXpCO01BQWdDLGlCQUFBLENBQWtCLEVBQWxCLEVBQWhDOztJQUNBLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQWhCLEdBQTBCO1dBQzFCLGlCQUFBLENBQWtCLEVBQWxCLEVBTEQ7R0FBQSxhQUFBO1dBT0MsS0FBQSxDQUFNLGdCQUFOLEVBUEQ7O0FBRFk7O0FBVWIsVUFBQSxHQUFhLFFBQUEsQ0FBQyxFQUFELENBQUE7QUFDWixNQUFBO0FBQUE7SUFDQyxLQUFBLENBQU0sWUFBTjtJQUNBLEVBQUUsQ0FBQyxjQUFILENBQUE7SUFDQSxJQUFHLE9BQU8sQ0FBQyxNQUFSLEtBQWtCLENBQXJCOztNQUVDLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFVBQWhCLEdBQTZCO2FBQzdCLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQWhCLEdBQTBCLGtCQUgzQjtLQUhEO0dBQUEsYUFBQTtJQU9NO1dBQ0wsS0FBQSxDQUFNLGdCQUFOLEVBUkQ7O0FBRFkiLCJzb3VyY2VzQ29udGVudCI6WyJsb2dnYUV2ZW50cyA9IHRydWVcclxudHBDYWNoZSA9IFtdXHJcbmJha2dydW5kID0gJyM4ODgnXHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIHdpbmRvd1dpZHRoLHdpbmRvd0hlaWdodC8yXHJcblx0bG9nZ2EgXCJIZWogSMOkcHAgMjUhXCJcclxuXHJcbmRyYXcgPSAtPlxyXG5cdGJhY2tncm91bmQgYmFrZ3J1bmRcclxuXHJcbmVuYWJsZUxvZyA9IC0+IGxvZ2dhRXZlbnRzID0gbm90IGxvZ2dhRXZlbnRzXHJcblxyXG5sb2dnYSA9IChuYW1lLCBwcmludFRhcmdldElkcz1mYWxzZSkgLT5cclxuXHRpZiBub3QgbG9nZ2FFdmVudHMgdGhlbiByZXR1cm5cclxuXHRvID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ291dHB1dCcpWzBdXHJcblx0by5pbm5lckhUTUwgKz0gXCIje25hbWV9OiB0b3VjaGVzID0gI3t0b3VjaGVzLmxlbmd0aH0gPGJyPlwiICMgKyBcIiAgOyB0YXJnZXRUb3VjaGVzID0gXCIgKyBldi50YXJnZXRUb3VjaGVzLmxlbmd0aCArIFwiIDsgY2hhbmdlZFRvdWNoZXMgPSBcIiArIGV2LmNoYW5nZWRUb3VjaGVzLmxlbmd0aFxyXG5cclxuXHRpZiBwcmludFRhcmdldElkc1xyXG5cdFx0cyA9IFwiXCJcclxuXHRcdGZvciB0IGluIHRvdWNoZXNcclxuXHRcdFx0cyArPSBcIi4uLiBpZCA9ICN7dC5pZH0gPGJyPlwiICMgdC5pZFxyXG5cdFx0by5pbm5lckhUTUwgKz0gc1xyXG5cclxuY2xlYXJMb2cgPSAtPlxyXG5cdG8gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnb3V0cHV0JylbMF1cclxuXHRvLmlubmVySFRNTCA9IFwiXCJcclxuXHJcbnVwZGF0ZV9iYWNrZ3JvdW5kID0gKGV2KSAtPlxyXG5cdG4gPSB0b3VjaGVzLmxlbmd0aFxyXG5cdGlmIG49PTEgdGhlbiBiYWtncnVuZCA9IFwieWVsbG93XCJcclxuXHRlbHNlIGlmIG49PTIgdGhlbiBiYWtncnVuZCA9IFwicGlua1wiXHJcblx0ZWxzZSBiYWtncnVuZCA9IFwibGlnaHRibHVlXCJcclxuXHRsb2dnYSBcInVwZGF0ZV9iYWNrZ3JvdW5kICN7YmFrZ3J1bmR9XCJcclxuXHJcbmhhbmRsZV9waW5jaF96b29tID0gKGV2KSAtPlxyXG5cdHRyeVxyXG5cdFx0bG9nZ2EgXCJIUFpcIlxyXG5cdFx0aWYgdG91Y2hlcy5sZW5ndGggPT0gMlxyXG5cdFx0XHQjIENoZWNrIGlmIHRoZSB0d28gdGFyZ2V0IHRvdWNoZXMgYXJlIHRoZSBzYW1lIG9uZXMgdGhhdCBzdGFydGVkIHRoZSAyLXRvdWNoXHJcblx0XHRcdHBvaW50MSA9IC0xXHJcblx0XHRcdHBvaW50MiA9IC0xXHJcblx0XHRcdGZvciBpIGluIHJhbmdlIHRwQ2FjaGUubGVuZ3RoXHJcblx0XHRcdFx0aWYgdHBDYWNoZVtpXS5pZCA9PSB0b3VjaGVzWzBdLmlkIHRoZW4gcG9pbnQxID0gaVxyXG5cdFx0XHRcdGlmIHRwQ2FjaGVbaV0uaWQgPT0gdG91Y2hlc1sxXS5pZCB0aGVuIHBvaW50MiA9IGlcclxuXHRcdFx0aWYgcG9pbnQxID49MCBhbmQgcG9pbnQyID49IDBcclxuXHRcdFx0XHQjIENhbGN1bGF0ZSB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBzdGFydCBhbmQgbW92ZSBjb29yZGluYXRlc1xyXG5cdFx0XHRcdGRpZmYxID0gTWF0aC5hYnModHBDYWNoZVtwb2ludDFdLmNsaWVudFggLSB0b3VjaGVzWzBdLmNsaWVudFgpXHJcblx0XHRcdFx0ZGlmZjIgPSBNYXRoLmFicyh0cENhY2hlW3BvaW50Ml0uY2xpZW50WCAtIHRvdWNoZXNbMV0uY2xpZW50WClcclxuXHJcblx0XHRcdFx0IyBUaGlzIHRocmVzaG9sZCBpcyBkZXZpY2UgZGVwZW5kZW50IGFzIHdlbGwgYXMgYXBwbGljYXRpb24gc3BlY2lmaWNcclxuXHRcdFx0XHRQSU5DSF9USFJFU0hIT0xEID0gZXYudGFyZ2V0LmNsaWVudFdpZHRoIC8gMTBcclxuXHRcdFx0XHRpZiBkaWZmMSA+PSBQSU5DSF9USFJFU0hIT0xEIGFuZCBkaWZmMiA+PSBQSU5DSF9USFJFU0hIT0xEIHRoZW4gYmFrZ3J1bmQgPSBcImdyZWVuXCJcclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdHRwQ2FjaGUgPSBbXVxyXG5cdGNhdGNoIGVcclxuXHRcdGxvZ2dhIFwiZXJyb3IgaW4gSFBaICN7ZX1cIlxyXG5cclxudG91Y2hTdGFydGVkID0gKGV2KSAtPlxyXG5cdHRyeVxyXG5cdFx0bG9nZ2EgJ3RvdWNoU3RhcnRlZCcsIHRydWVcclxuXHRcdGV2LnByZXZlbnREZWZhdWx0KClcclxuXHRcdGlmIHRvdWNoZXMubGVuZ3RoID09IDJcclxuXHRcdFx0Zm9yIHQgaW4gdG91Y2hlc1xyXG5cdFx0XHRcdHRwQ2FjaGUucHVzaCB0XHJcblx0XHR1cGRhdGVfYmFja2dyb3VuZCBldlxyXG5cdGNhdGNoIGVcclxuXHRcdGxvZ2dhIFwiZXJyb3IgaW4gU3RhcnRlZFwiXHJcblxyXG50b3VjaE1vdmVkID0gKGV2KSAtPlxyXG5cdHRyeVxyXG5cdFx0bG9nZ2EgJ3RvdWNoTW92ZWQnXHJcblx0XHRldi5wcmV2ZW50RGVmYXVsdCgpXHJcblx0XHRpZiBub3QgdG91Y2hlcy5sZW5ndGggPT0gMiB0aGVuIHVwZGF0ZV9iYWNrZ3JvdW5kIGV2XHJcblx0XHRldi50YXJnZXQuc3R5bGUub3V0bGluZSA9IFwiZGFzaGVkXCJcclxuXHRcdGhhbmRsZV9waW5jaF96b29tIGV2XHJcblx0Y2F0Y2ggXHJcblx0XHRsb2dnYSBcImVycm9yIGluIE1vdmVkXCJcclxuXHJcbnRvdWNoRW5kZWQgPSAoZXYpIC0+XHJcblx0dHJ5XHRcclxuXHRcdGxvZ2dhICd0b3VjaEVuZGVkJ1xyXG5cdFx0ZXYucHJldmVudERlZmF1bHQoKVxyXG5cdFx0aWYgdG91Y2hlcy5sZW5ndGggPT0gMFxyXG5cdFx0XHQjIFJlc3RvcmUgYmFja2dyb3VuZCBhbmQgb3V0bGluZSB0byBvcmlnaW5hbCB2YWx1ZXNcclxuXHRcdFx0ZXYudGFyZ2V0LnN0eWxlLmJhY2tncm91bmQgPSBcIndoaXRlXCJcclxuXHRcdFx0ZXYudGFyZ2V0LnN0eWxlLm91dGxpbmUgPSBcIjFweCBzb2xpZCBibGFja1wiXHJcblx0Y2F0Y2ggZVxyXG5cdFx0bG9nZ2EgXCJlcnJvciBpbiBFbmRlZFwiXHJcbiJdfQ==
//# sourceURL=c:\Lab\2020\015-ZoomPan\coffee\sketch2.coffee