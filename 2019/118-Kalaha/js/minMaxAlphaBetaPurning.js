// Generated by CoffeeScript 2.4.1
var MaxValueAlphaBetaPruning, MinMaxDecisionAlphaBetaPruning, MinValueAlphaBetaPruning;

MinMaxDecisionAlphaBetaPruning = function(depthMax, player) {
  var alpha, beta, house, i, k, len, playerShop, ref;
  alpha = -1000;
  beta = 1000;
  house = [];
  ref = range(14);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    house[i] = parseInt(document.getElementById("house" + i.toString()).innerHTML);
  }
  playerShop = 6;
  if (player === 1) {
    playerShop = 13;
  }
  return MaxValueAlphaBetaPruning(house, depthMax, 0, alpha, beta, playerShop);
};

MaxValueAlphaBetaPruning = function(house, depthMax, depth, alpha, beta, playerShop) {
  var action, i, j, k, l, len, len1, ref, ref1, tempHouse, tempValue;
  if (HasSuccessors(house) === false) {
    FinalScoring(house);
    return Evaluate(house, playerShop, (playerShop + 7) % 14);
  } else if (depth >= depthMax) {
    return Evaluate(house, playerShop, (playerShop + 7) % 14);
  } else {
    action = null;
    ref = range(playerShop - 6, playerShop);
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      if (house[i] === 0) {
        continue;
      }
      tempHouse = [];
      tempValue = null;
      ref1 = range(14);
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        j = ref1[l];
        tempHouse[j] = house[j];
      }
      if (Relocation(tempHouse, i)) {
        tempValue = MaxValueAlphaBetaPruning(tempHouse, depthMax, depth + 2, alpha, beta, playerShop);
      } else {
        tempValue = MinValueAlphaBetaPruning(tempHouse, depthMax, depth + 1, alpha, beta, playerShop);
      }
      if (alpha < tempValue) {
        alpha = tempValue;
        action = i;
      }
      if (alpha >= beta) {
        break;
      }
    }
    if (depth === 0) {
      return action;
    } else {
      return alpha;
    }
  }
};

MinValueAlphaBetaPruning = function(house, depthMax, depth, alpha, beta, playerShop) {
  var i, j, k, l, len, len1, opponentShop, ref, ref1, tempHouse, tempValue;
  if (HasSuccessors(house) === false) {
    FinalScoring(house);
    return Evaluate(house, playerShop, (playerShop + 7) % 14);
  } else if (depth >= depthMax) {
    return Evaluate(house, playerShop, (playerShop + 7) % 14);
  } else {
    opponentShop = (playerShop + 7) % 14;
    ref = range(opponentShop - 6, opponentShop);
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      if (house[i] === 0) {
        continue;
      }
      tempHouse = [];
      tempValue = null;
      ref1 = range(14);
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        j = ref1[l];
        tempHouse[j] = house[j];
      }
      if (Relocation(tempHouse, i)) {
        tempValue = MinValueAlphaBetaPruning(tempHouse, depthMax, depth + 2, alpha, beta, playerShop);
      } else {
        tempValue = MaxValueAlphaBetaPruning(tempHouse, depthMax, depth + 1, alpha, beta, playerShop);
      }
      if (beta > tempValue) {
        beta = tempValue;
      }
      if (alpha >= beta) {
        break;
      }
    }
    return beta;
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWluTWF4QWxwaGFCZXRhUHVybmluZy5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxtaW5NYXhBbHBoYUJldGFQdXJuaW5nLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSx3QkFBQSxFQUFBLDhCQUFBLEVBQUE7O0FBQUEsOEJBQUEsR0FBaUMsUUFBQSxDQUFDLFFBQUQsRUFBVyxNQUFYLENBQUE7QUFDaEMsTUFBQSxLQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxVQUFBLEVBQUE7RUFBQSxLQUFBLEdBQVEsQ0FBQztFQUNULElBQUEsR0FBTztFQUVQLEtBQUEsR0FBUTtBQUVSO0VBQUEsS0FBQSxxQ0FBQTs7SUFDQyxLQUFNLENBQUEsQ0FBQSxDQUFOLEdBQVcsUUFBQSxDQUFTLFFBQVEsQ0FBQyxjQUFULENBQXdCLE9BQUEsR0FBVSxDQUFDLENBQUMsUUFBRixDQUFBLENBQWxDLENBQStDLENBQUMsU0FBekQ7RUFEWjtFQUdBLFVBQUEsR0FBYTtFQUNiLElBQUcsTUFBQSxLQUFVLENBQWI7SUFBb0IsVUFBQSxHQUFhLEdBQWpDOztBQUVBLFNBQU8sd0JBQUEsQ0FBeUIsS0FBekIsRUFBZ0MsUUFBaEMsRUFBMEMsQ0FBMUMsRUFBNkMsS0FBN0MsRUFBb0QsSUFBcEQsRUFBMEQsVUFBMUQ7QUFaeUI7O0FBY2pDLHdCQUFBLEdBQTJCLFFBQUEsQ0FBQyxLQUFELEVBQVEsUUFBUixFQUFrQixLQUFsQixFQUF5QixLQUF6QixFQUFnQyxJQUFoQyxFQUFzQyxVQUF0QyxDQUFBO0FBQzFCLE1BQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsU0FBQSxFQUFBO0VBQUEsSUFBRyxhQUFBLENBQWMsS0FBZCxDQUFBLEtBQXdCLEtBQTNC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LEdBQVEsQ0FBdEQsRUFBeUQsS0FBekQsRUFBZ0UsSUFBaEUsRUFBc0UsVUFBdEUsRUFIYjs7TUFLQSxJQUFHLElBQUEsR0FBTyxTQUFWO1FBQXlCLElBQUEsR0FBTyxVQUFoQzs7TUFFQSxJQUFHLEtBQUEsSUFBUyxJQUFaO0FBQXNCLGNBQXRCOztJQWZEO0FBZ0JBLFdBQU8sS0FwQkg7O0FBSnFCIiwic291cmNlc0NvbnRlbnQiOlsiTWluTWF4RGVjaXNpb25BbHBoYUJldGFQcnVuaW5nID0gKGRlcHRoTWF4LCBwbGF5ZXIpIC0+XHJcblx0YWxwaGEgPSAtMTAwMFxyXG5cdGJldGEgPSAxMDAwXHJcblxyXG5cdGhvdXNlID0gW11cclxuXHJcblx0Zm9yIGkgaW4gcmFuZ2UgMTRcclxuXHRcdGhvdXNlW2ldID0gcGFyc2VJbnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJob3VzZVwiICsgaS50b1N0cmluZygpKS5pbm5lckhUTUwpXHJcblxyXG5cdHBsYXllclNob3AgPSA2XHJcblx0aWYgcGxheWVyID09IDEgdGhlbiBwbGF5ZXJTaG9wID0gMTNcclxuXHJcblx0cmV0dXJuIE1heFZhbHVlQWxwaGFCZXRhUHJ1bmluZyhob3VzZSwgZGVwdGhNYXgsIDAsIGFscGhhLCBiZXRhLCBwbGF5ZXJTaG9wKVxyXG5cclxuTWF4VmFsdWVBbHBoYUJldGFQcnVuaW5nID0gKGhvdXNlLCBkZXB0aE1heCwgZGVwdGgsIGFscGhhLCBiZXRhLCBwbGF5ZXJTaG9wKSAtPlxyXG5cdGlmIEhhc1N1Y2Nlc3NvcnMoaG91c2UpID09IGZhbHNlXHJcblx0XHRGaW5hbFNjb3JpbmcoaG91c2UpXHJcblx0XHRyZXR1cm4gRXZhbHVhdGUoaG91c2UsIHBsYXllclNob3AsIChwbGF5ZXJTaG9wICsgNykgJSAxNClcclxuXHRlbHNlIGlmIGRlcHRoID49IGRlcHRoTWF4XHJcblx0XHRyZXR1cm4gRXZhbHVhdGUoaG91c2UsIHBsYXllclNob3AsIChwbGF5ZXJTaG9wICsgNykgJSAxNClcclxuXHRlbHNlXHJcblx0XHRhY3Rpb24gPSBudWxsXHJcblx0XHRmb3IgaSBpbiByYW5nZSBwbGF5ZXJTaG9wIC0gNiwgcGxheWVyU2hvcFxyXG5cdFx0XHRpZiBob3VzZVtpXSA9PSAwIHRoZW4gY29udGludWVcclxuXHJcblx0XHRcdHRlbXBIb3VzZSA9IFtdXHJcblx0XHRcdHRlbXBWYWx1ZSA9IG51bGxcclxuXHRcdFx0Zm9yIGogaW4gcmFuZ2UgMTRcclxuXHRcdFx0XHR0ZW1wSG91c2Vbal0gPSBob3VzZVtqXVxyXG5cclxuXHRcdFx0aWYgUmVsb2NhdGlvbih0ZW1wSG91c2UsIGkpXHJcblx0XHRcdFx0dGVtcFZhbHVlID0gTWF4VmFsdWVBbHBoYUJldGFQcnVuaW5nKHRlbXBIb3VzZSwgZGVwdGhNYXgsIGRlcHRoICsgMiwgYWxwaGEsIGJldGEsIHBsYXllclNob3ApXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHR0ZW1wVmFsdWUgPSBNaW5WYWx1ZUFscGhhQmV0YVBydW5pbmcodGVtcEhvdXNlLCBkZXB0aE1heCwgZGVwdGggKyAxLCBhbHBoYSwgYmV0YSwgcGxheWVyU2hvcClcclxuXHJcblx0XHRcdGlmIGFscGhhIDwgdGVtcFZhbHVlXHJcblx0XHRcdFx0YWxwaGEgPSB0ZW1wVmFsdWVcclxuXHRcdFx0XHRhY3Rpb24gPSBpXHJcblxyXG5cdFx0XHRpZiBhbHBoYSA+PSBiZXRhIHRoZW4gYnJlYWtcclxuXHJcblx0XHRpZiBkZXB0aCA9PSAwXHJcblx0XHRcdHJldHVybiBhY3Rpb25cclxuXHRcdGVsc2VcclxuXHRcdFx0cmV0dXJuIGFscGhhXHJcblxyXG5NaW5WYWx1ZUFscGhhQmV0YVBydW5pbmcgPSAoaG91c2UsIGRlcHRoTWF4LCBkZXB0aCwgYWxwaGEsIGJldGEsIHBsYXllclNob3ApIC0+XHJcblx0aWYgSGFzU3VjY2Vzc29ycyhob3VzZSkgPT0gZmFsc2VcclxuXHRcdEZpbmFsU2NvcmluZyhob3VzZSlcclxuXHRcdHJldHVybiBFdmFsdWF0ZShob3VzZSwgcGxheWVyU2hvcCwgKHBsYXllclNob3AgKyA3KSAlIDE0KVxyXG5cdGVsc2UgaWYgZGVwdGggPj0gZGVwdGhNYXhcclxuXHRcdHJldHVybiBFdmFsdWF0ZShob3VzZSwgcGxheWVyU2hvcCwgKHBsYXllclNob3AgKyA3KSAlIDE0KVxyXG5cdGVsc2UgXHJcblx0XHRvcHBvbmVudFNob3AgPSAocGxheWVyU2hvcCArIDcpICUgMTRcclxuXHRcdGZvciBpIGluIHJhbmdlIG9wcG9uZW50U2hvcCAtIDYsIG9wcG9uZW50U2hvcFxyXG5cdFx0XHRpZiBob3VzZVtpXSA9PSAwIHRoZW4gY29udGludWVcclxuXHJcblx0XHRcdHRlbXBIb3VzZSA9IFtdXHJcblx0XHRcdHRlbXBWYWx1ZSA9IG51bGxcclxuXHRcdFx0Zm9yIGogaW4gcmFuZ2UgMTRcclxuXHRcdFx0XHR0ZW1wSG91c2Vbal0gPSBob3VzZVtqXVxyXG5cdFx0XHRcclxuXHRcdFx0aWYgUmVsb2NhdGlvbih0ZW1wSG91c2UsIGkpXHJcblx0XHRcdFx0dGVtcFZhbHVlID0gTWluVmFsdWVBbHBoYUJldGFQcnVuaW5nKHRlbXBIb3VzZSwgZGVwdGhNYXgsIGRlcHRoICsgMiwgYWxwaGEsIGJldGEsIHBsYXllclNob3ApXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHR0ZW1wVmFsdWUgPSBNYXhWYWx1ZUFscGhhQmV0YVBydW5pbmcodGVtcEhvdXNlLCBkZXB0aE1heCwgZGVwdGggKyAxLCBhbHBoYSwgYmV0YSwgcGxheWVyU2hvcClcclxuXHJcblx0XHRcdGlmIGJldGEgPiB0ZW1wVmFsdWUgdGhlbiBiZXRhID0gdGVtcFZhbHVlXHJcblxyXG5cdFx0XHRpZiBhbHBoYSA+PSBiZXRhIHRoZW4gYnJlYWtcclxuXHRcdHJldHVybiBiZXRhXHJcbiJdfQ==
//# sourceURL=c:\Lab\2019\118-Kalaha\coffee\minMaxAlphaBetaPurning.coffee