// Generated by CoffeeScript 2.4.1
var mValueNormal, minimax;

minimax = function(depthMax, player) {
  var house, playerShop;
  house = buttons.map(function(button) {
    return button.value;
  });
  playerShop = 6;
  if (player === 1) {
    playerShop = 13;
  }
  return mValueNormal(house, depthMax, 0, playerShop);
};

mValueNormal = function(house, depthMax, depth, playerShop) {
  var action, i, j, k, len, len1, max, min, opponentShop, ref, ref1, tempHouse, tempValue;
  if (HasSuccessors(house) === false) {
    FinalScoring(house);
    return Evaluate(house, playerShop, (playerShop + 7) % 14);
  } else if (depth >= depthMax) {
    return Evaluate(house, playerShop, (playerShop + 7) % 14);
  } else if (depth % 2) {
    opponentShop = (playerShop + 7) % 14;
    min = 1000;
    ref = range(opponentShop - 6, opponentShop);
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      if (house[i] === 0) {
        continue;
      }
      tempHouse = house.slice();
      tempValue = null;
      if (Relocation(tempHouse, i)) {
        tempValue = mValueNormal(tempHouse, depthMax, depth + 2, playerShop);
      } else {
        tempValue = mValueNormal(tempHouse, depthMax, depth + 1, playerShop);
      }
      if (min > tempValue) {
        min = tempValue;
      }
    }
    return min;
  } else {
    action = null;
    max = -1000;
    ref1 = range(playerShop - 6, playerShop);
    for (k = 0, len1 = ref1.length; k < len1; k++) {
      i = ref1[k];
      if (house[i] === 0) {
        continue;
      }
      tempHouse = house.slice();
      tempValue = null;
      if (Relocation(tempHouse, i)) {
        tempValue = mValueNormal(tempHouse, depthMax, depth + 2, playerShop);
      } else {
        tempValue = mValueNormal(tempHouse, depthMax, depth + 1, playerShop);
      }
      if (max < tempValue) {
        max = tempValue;
        action = i;
      }
    }
    if (depth === 0) {
      return action;
    } else {
      return max;
    }
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWluaW1heC5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxtaW5pbWF4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxZQUFBLEVBQUE7O0FBQUEsT0FBQSxHQUFVLFFBQUEsQ0FBQyxRQUFELEVBQVcsTUFBWCxDQUFBO0FBQ1QsTUFBQSxLQUFBLEVBQUE7RUFBQSxLQUFBLEdBQVEsT0FBTyxDQUFDLEdBQVIsQ0FBWSxRQUFBLENBQUMsTUFBRCxDQUFBO1dBQVksTUFBTSxDQUFDO0VBQW5CLENBQVo7RUFDUixVQUFBLEdBQWE7RUFDYixJQUFHLE1BQUEsS0FBVSxDQUFiO0lBQW9CLFVBQUEsR0FBYSxHQUFqQzs7U0FDQSxZQUFBLENBQWEsS0FBYixFQUFvQixRQUFwQixFQUE4QixDQUE5QixFQUFpQyxVQUFqQztBQUpTOztBQU1WLFlBQUEsR0FBZSxRQUFBLENBQUMsS0FBRCxFQUFRLFFBQVIsRUFBa0IsS0FBbEIsRUFBeUIsVUFBekIsQ0FBQTtBQUNkLE1BQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQSxZQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxTQUFBLEVBQUE7RUFBQSxJQUFHLGFBQUEsQ0FBYyxLQUFkLENBQUEsS0FBd0IsS0FBM0I7SUFDQyxZQUFBLENBQWEsS0FBYjtBQUNBLFdBQU8sUUFBQSxDQUFTLEtBQVQsRUFBZ0IsVUFBaEIsRUFBNEIsQ0FBQyxVQUFBLEdBQWEsQ0FBZCxDQUFBLEdBQW1CLEVBQS9DLEVBRlI7R0FBQSxNQUdLLElBQUcsS0FBQSxJQUFTLFFBQVo7QUFDSixXQUFPLFFBQUEsQ0FBUyxLQUFULEVBQWdCLFVBQWhCLEVBQTRCLENBQUMsVUFBQSxHQUFhLENBQWQsQ0FBQSxHQUFtQixFQUEvQyxFQURIO0dBQUEsTUFFQSxJQUFHLEtBQUEsR0FBUSxDQUFYO0lBQ0osWUFBQSxHQUFlLENBQUMsVUFBQSxHQUFhLENBQWQsQ0FBQSxHQUFtQjtJQUNsQyxHQUFBLEdBQU07QUFDTjtJQUFBLEtBQUEscUNBQUE7O01BQ0MsSUFBRyxLQUFNLENBQUEsQ0FBQSxDQUFOLEtBQVksQ0FBZjtBQUFzQixpQkFBdEI7O01BRUEsU0FBQSxHQUFZLEtBQUssQ0FBQyxLQUFOLENBQUE7TUFDWixTQUFBLEdBQVk7TUFFWixJQUFHLFVBQUEsQ0FBVyxTQUFYLEVBQXNCLENBQXRCLENBQUg7UUFDQyxTQUFBLEdBQVksWUFBQSxDQUFhLFNBQWIsRUFBd0IsUUFBeEIsRUFBa0MsS0FBQSxHQUFRLENBQTFDLEVBQTZDLFVBQTdDLEVBRGI7T0FBQSxNQUFBO1FBR0MsU0FBQSxHQUFZLFlBQUEsQ0FBYSxTQUFiLEVBQXdCLFFBQXhCLEVBQWtDLEtBQUEsR0FBUSxDQUExQyxFQUE2QyxVQUE3QyxFQUhiOztNQUtBLElBQUcsR0FBQSxHQUFNLFNBQVQ7UUFBd0IsR0FBQSxHQUFNLFVBQTlCOztJQVhEO0FBWUEsV0FBTyxJQWZIO0dBQUEsTUFBQTtJQWtCSixNQUFBLEdBQVM7SUFDVCxHQUFBLEdBQU0sQ0FBQztBQUVQO0lBQUEsS0FBQSx3Q0FBQTs7TUFDQyxJQUFHLEtBQU0sQ0FBQSxDQUFBLENBQU4sS0FBWSxDQUFmO0FBQXNCLGlCQUF0Qjs7TUFFQSxTQUFBLEdBQVksS0FBSyxDQUFDLEtBQU4sQ0FBQTtNQUNaLFNBQUEsR0FBWTtNQUVaLElBQUcsVUFBQSxDQUFXLFNBQVgsRUFBc0IsQ0FBdEIsQ0FBSDtRQUNDLFNBQUEsR0FBWSxZQUFBLENBQWEsU0FBYixFQUF3QixRQUF4QixFQUFrQyxLQUFBLEdBQVEsQ0FBMUMsRUFBNkMsVUFBN0MsRUFEYjtPQUFBLE1BQUE7UUFHQyxTQUFBLEdBQVksWUFBQSxDQUFhLFNBQWIsRUFBd0IsUUFBeEIsRUFBa0MsS0FBQSxHQUFRLENBQTFDLEVBQTZDLFVBQTdDLEVBSGI7O01BS0EsSUFBRyxHQUFBLEdBQU0sU0FBVDtRQUNDLEdBQUEsR0FBTTtRQUNOLE1BQUEsR0FBUyxFQUZWOztJQVhEO0lBZUEsSUFBRyxLQUFBLEtBQVMsQ0FBWjtBQUFtQixhQUFPLE9BQTFCO0tBQUEsTUFBQTtBQUFzQyxhQUFPLElBQTdDO0tBcENJOztBQU5TIiwic291cmNlc0NvbnRlbnQiOlsibWluaW1heCA9IChkZXB0aE1heCwgcGxheWVyKSAtPlxyXG5cdGhvdXNlID0gYnV0dG9ucy5tYXAgKGJ1dHRvbikgLT4gYnV0dG9uLnZhbHVlXHJcblx0cGxheWVyU2hvcCA9IDZcclxuXHRpZiBwbGF5ZXIgPT0gMSB0aGVuIHBsYXllclNob3AgPSAxM1xyXG5cdG1WYWx1ZU5vcm1hbCBob3VzZSwgZGVwdGhNYXgsIDAsIHBsYXllclNob3BcclxuXHJcbm1WYWx1ZU5vcm1hbCA9IChob3VzZSwgZGVwdGhNYXgsIGRlcHRoLCBwbGF5ZXJTaG9wKSAtPlxyXG5cdGlmIEhhc1N1Y2Nlc3NvcnMoaG91c2UpID09IGZhbHNlXHJcblx0XHRGaW5hbFNjb3JpbmcoaG91c2UpXHJcblx0XHRyZXR1cm4gRXZhbHVhdGUoaG91c2UsIHBsYXllclNob3AsIChwbGF5ZXJTaG9wICsgNykgJSAxNClcclxuXHRlbHNlIGlmIGRlcHRoID49IGRlcHRoTWF4XHJcblx0XHRyZXR1cm4gRXZhbHVhdGUoaG91c2UsIHBsYXllclNob3AsIChwbGF5ZXJTaG9wICsgNykgJSAxNClcclxuXHRlbHNlIGlmIGRlcHRoICUgMlxyXG5cdFx0b3Bwb25lbnRTaG9wID0gKHBsYXllclNob3AgKyA3KSAlIDE0XHJcblx0XHRtaW4gPSAxMDAwXHJcblx0XHRmb3IgaSBpbiByYW5nZSBvcHBvbmVudFNob3AgLSA2LCBvcHBvbmVudFNob3BcclxuXHRcdFx0aWYgaG91c2VbaV0gPT0gMCB0aGVuIGNvbnRpbnVlXHJcblxyXG5cdFx0XHR0ZW1wSG91c2UgPSBob3VzZS5zbGljZSgpXHJcblx0XHRcdHRlbXBWYWx1ZSA9IG51bGxcclxuXHRcdFx0XHJcblx0XHRcdGlmIFJlbG9jYXRpb24odGVtcEhvdXNlLCBpKVxyXG5cdFx0XHRcdHRlbXBWYWx1ZSA9IG1WYWx1ZU5vcm1hbCh0ZW1wSG91c2UsIGRlcHRoTWF4LCBkZXB0aCArIDIsIHBsYXllclNob3ApXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHR0ZW1wVmFsdWUgPSBtVmFsdWVOb3JtYWwodGVtcEhvdXNlLCBkZXB0aE1heCwgZGVwdGggKyAxLCBwbGF5ZXJTaG9wKVxyXG5cclxuXHRcdFx0aWYgbWluID4gdGVtcFZhbHVlIHRoZW4gbWluID0gdGVtcFZhbHVlXHJcblx0XHRyZXR1cm4gbWluXHJcblx0ZWxzZVxyXG5cclxuXHRcdGFjdGlvbiA9IG51bGxcclxuXHRcdG1heCA9IC0xMDAwXHJcblxyXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgcGxheWVyU2hvcCAtIDYsIHBsYXllclNob3BcclxuXHRcdFx0aWYgaG91c2VbaV0gPT0gMCB0aGVuIGNvbnRpbnVlXHJcblxyXG5cdFx0XHR0ZW1wSG91c2UgPSBob3VzZS5zbGljZSgpXHJcblx0XHRcdHRlbXBWYWx1ZSA9IG51bGxcclxuXHRcdFx0XHJcblx0XHRcdGlmIFJlbG9jYXRpb24odGVtcEhvdXNlLCBpKVxyXG5cdFx0XHRcdHRlbXBWYWx1ZSA9IG1WYWx1ZU5vcm1hbCh0ZW1wSG91c2UsIGRlcHRoTWF4LCBkZXB0aCArIDIsIHBsYXllclNob3ApXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHR0ZW1wVmFsdWUgPSBtVmFsdWVOb3JtYWwodGVtcEhvdXNlLCBkZXB0aE1heCwgZGVwdGggKyAxLCBwbGF5ZXJTaG9wKVxyXG5cclxuXHRcdFx0aWYgbWF4IDwgdGVtcFZhbHVlXHJcblx0XHRcdFx0bWF4ID0gdGVtcFZhbHVlXHJcblx0XHRcdFx0YWN0aW9uID0gaVxyXG5cclxuXHRcdGlmIGRlcHRoID09IDAgdGhlbiByZXR1cm4gYWN0aW9uIGVsc2UgcmV0dXJuIG1heFxyXG4iXX0=
//# sourceURL=c:\Lab\2019\118-Kalaha\coffee\minimax.coffee