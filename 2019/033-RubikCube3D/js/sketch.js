// Generated by CoffeeScript 2.3.2
var ALPHABET, COLORS, R, SWAPS, backup, change, cube, draw, i, last, mouseDragged, mousePressed, rot, setup, turn;

COLORS = "#FFF #00F #FF0 #0F0 #FA5 #F00".split(' ');

R = 60;

//       U T S
//       V   Z                       Orange
//       W X Y 
// J Q P a h g j q p A H G 
// K   O b   f k   o B   F     Green White Blue Yellow
// L M N c d e l m n C D E    
//       y x w
//       z   v                       Red
//       s t u 

//           White    Blue     Yellow   Green    Orange   Red
ALPHABET = 'abcdefgh jklmnopq ABCDEFGH JKLMNOPQ STUVWXYZ stuvwxyz';

SWAPS = {
  W: 'aceg bdfh wjWN xkXO ylYP',
  B: 'lnpj moqk euAY fvBZ gwCS',
  Y: 'GECA HFDB nsJS otKT puLU',
  G: 'PNLJ QOMK EyaU FzbV GscW',
  R: 'suwy tvxz LClc MDmd NEne',
  O: 'YWUS ZXVT ajGJ hqHQ gpAP'
};

cube = (function() {
  var len, m, ref, results;
  ref = range(54);
  results = [];
  for (m = 0, len = ref.length; m < len; m++) {
    i = ref[m];
    results.push(Math.floor(i / 9));
  }
  return results;
})();

backup = cube.slice();

rot = [50, 50];

last = [0, 0];

turn = function(letters) {
  var LETTER, a, b, c, d, j, k, l, len, len1, letter, m, n, w, word, words;
  cube = backup.slice();
  for (m = 0, len = letters.length; m < len; m++) {
    letter = letters[m];
    LETTER = letter.toUpperCase();
    if (!(LETTER in SWAPS)) {
      return;
    }
    words = SWAPS[LETTER].split(' ');
    for (n = 0, len1 = words.length; n < len1; n++) {
      word = words[n];
      [i, j, k, l] = (function() {
        var len2, o, results;
        results = [];
        for (o = 0, len2 = word.length; o < len2; o++) {
          w = word[o];
          results.push(ALPHABET.indexOf(w));
        }
        return results;
      })();
      [a, b, c, d] = LETTER === letter ? [l, i, j, k] : [j, k, l, i];
      [cube[a], cube[b], cube[c], cube[d]] = [cube[i], cube[j], cube[k], cube[l]];
    }
  }
};

setup = function() {
  return createCanvas(800, 800, WEBGL);
};

draw = function() {
  var index, j, len, m, ref, results, side;
  rotateX(-rot[1] * 0.01);
  rotateY(-rot[0] * 0.01);
  background(0);
  index = 0;
  ref = range(6);
  results = [];
  for (m = 0, len = ref.length; m < len; m++) {
    side = ref[m];
    rotateX(HALF_PI * [1, 1, 1, 1, 0, 0][side]);
    rotateZ(HALF_PI * [0, 0, 0, 0, 1, 2][side]);
    results.push((function() {
      var len1, n, ref1, results1;
      ref1 = [[-1, -1], [0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [0, 0]];
      results1 = [];
      for (n = 0, len1 = ref1.length; n < len1; n++) {
        [i, j] = ref1[n];
        push();
        translate(2 * R * i, 2 * R, 2 * R * j);
        beginShape();
        fill(COLORS[cube[index]]);
        vertex(-R, R, -R);
        vertex(+R, R, -R);
        vertex(+R, R, +R);
        vertex(-R, R, +R);
        endShape(CLOSE);
        pop();
        results1.push(index += 1);
      }
      return results1;
    })());
  }
  return results;
};

change = function(s) {
  return turn(s);
};

mousePressed = function() {
  return last = [mouseX, mouseY];
};

mouseDragged = function() {
  rot = [rot[0] + mouseX - last[0], rot[1] + mouseY - last[1]];
  return last = [mouseX, mouseY];
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsUUFBQSxFQUFBLE1BQUEsRUFBQSxDQUFBLEVBQUEsS0FBQSxFQUFBLE1BQUEsRUFBQSxNQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLFlBQUEsRUFBQSxZQUFBLEVBQUEsR0FBQSxFQUFBLEtBQUEsRUFBQTs7QUFBQSxNQUFBLEdBQVMsK0JBQStCLENBQUMsS0FBaEMsQ0FBc0MsR0FBdEM7O0FBQ1QsQ0FBQSxHQUFJLEdBREo7Ozs7Ozs7Ozs7Ozs7QUFjQSxRQUFBLEdBQVc7O0FBQ1gsS0FBQSxHQUNDO0VBQUEsQ0FBQSxFQUFHLDBCQUFIO0VBQ0EsQ0FBQSxFQUFHLDBCQURIO0VBRUEsQ0FBQSxFQUFHLDBCQUZIO0VBR0EsQ0FBQSxFQUFHLDBCQUhIO0VBSUEsQ0FBQSxFQUFHLDBCQUpIO0VBS0EsQ0FBQSxFQUFHO0FBTEg7O0FBT0QsSUFBQTs7QUFBYTtBQUFBO0VBQUEsS0FBQSxxQ0FBQTs7NEJBQUwsSUFBRztFQUFFLENBQUE7Ozs7QUFDYixNQUFBLEdBQVMsSUFBSSxDQUFDLEtBQUwsQ0FBQTs7QUFDVCxHQUFBLEdBQU0sQ0FBQyxFQUFELEVBQUksRUFBSjs7QUFDTixJQUFBLEdBQU8sQ0FBQyxDQUFELEVBQUcsQ0FBSDs7QUFFUCxJQUFBLEdBQU8sUUFBQSxDQUFDLE9BQUQsQ0FBQTtBQUNOLE1BQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxJQUFBLEVBQUE7RUFBQSxJQUFBLEdBQU8sTUFBTSxDQUFDLEtBQVAsQ0FBQTtFQUNQ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LENBQUE7U0FBTyxJQUFBLENBQUssQ0FBTDtBQUFQOztBQUVULFlBQUEsR0FBZSxRQUFBLENBQUEsQ0FBQTtTQUFHLElBQUEsR0FBTyxDQUFDLE1BQUQsRUFBUSxNQUFSO0FBQVY7O0FBRWYsWUFBQSxHQUFlLFFBQUEsQ0FBQSxDQUFBO0VBQ2QsR0FBQSxHQUFNLENBQUMsR0FBSSxDQUFBLENBQUEsQ0FBSixHQUFTLE1BQVQsR0FBZ0IsSUFBSyxDQUFBLENBQUEsQ0FBdEIsRUFBMEIsR0FBSSxDQUFBLENBQUEsQ0FBSixHQUFTLE1BQVQsR0FBZ0IsSUFBSyxDQUFBLENBQUEsQ0FBL0M7U0FDTixJQUFBLEdBQU8sQ0FBQyxNQUFELEVBQVEsTUFBUjtBQUZPIiwic291cmNlc0NvbnRlbnQiOlsiQ09MT1JTID0gXCIjRkZGICMwMEYgI0ZGMCAjMEYwICNGQTUgI0YwMFwiLnNwbGl0ICcgJ1xyXG5SID0gNjBcclxuXHJcbiMgICAgICAgVSBUIFNcclxuIyAgICAgICBWICAgWiAgICAgICAgICAgICAgICAgICAgICAgT3JhbmdlXHJcbiMgICAgICAgVyBYIFkgXHJcbiMgSiBRIFAgYSBoIGcgaiBxIHAgQSBIIEcgXHJcbiMgSyAgIE8gYiAgIGYgayAgIG8gQiAgIEYgICAgIEdyZWVuIFdoaXRlIEJsdWUgWWVsbG93XHJcbiMgTCBNIE4gYyBkIGUgbCBtIG4gQyBEIEUgICAgXHJcbiMgICAgICAgeSB4IHdcclxuIyAgICAgICB6ICAgdiAgICAgICAgICAgICAgICAgICAgICAgUmVkXHJcbiMgICAgICAgcyB0IHUgXHJcblxyXG4jICAgICAgICAgICBXaGl0ZSAgICBCbHVlICAgICBZZWxsb3cgICBHcmVlbiAgICBPcmFuZ2UgICBSZWRcclxuQUxQSEFCRVQgPSAnYWJjZGVmZ2ggamtsbW5vcHEgQUJDREVGR0ggSktMTU5PUFEgU1RVVldYWVogc3R1dnd4eXonIFxyXG5TV0FQUyA9IFxyXG5cdFc6ICdhY2VnIGJkZmggd2pXTiB4a1hPIHlsWVAnIFxyXG5cdEI6ICdsbnBqIG1vcWsgZXVBWSBmdkJaIGd3Q1MnXHJcblx0WTogJ0dFQ0EgSEZEQiBuc0pTIG90S1QgcHVMVSdcclxuXHRHOiAnUE5MSiBRT01LIEV5YVUgRnpiViBHc2NXJ1xyXG5cdFI6ICdzdXd5IHR2eHogTENsYyBNRG1kIE5FbmUnICBcclxuXHRPOiAnWVdVUyBaWFZUIGFqR0ogaHFIUSBncEFQJ1xyXG5cclxuY3ViZSA9IChpLy85IGZvciBpIGluIHJhbmdlIDU0KVxyXG5iYWNrdXAgPSBjdWJlLnNsaWNlKClcclxucm90ID0gWzUwLDUwXVxyXG5sYXN0ID0gWzAsMF1cclxuXHJcbnR1cm4gPSAobGV0dGVycykgLT4gXHJcblx0Y3ViZSA9IGJhY2t1cC5zbGljZSgpXHJcblx0Zm9yIGxldHRlciBpbiBsZXR0ZXJzXHJcblx0XHRMRVRURVIgPSBsZXR0ZXIudG9VcHBlckNhc2UoKSBcclxuXHRcdGlmIExFVFRFUiBub3Qgb2YgU1dBUFMgdGhlbiByZXR1cm4gXHJcblx0XHR3b3JkcyA9IFNXQVBTW0xFVFRFUl0uc3BsaXQgJyAnXHJcblx0XHRmb3Igd29yZCBpbiB3b3Jkc1xyXG5cdFx0XHRbaSxqLGssbF0gPSAoQUxQSEFCRVQuaW5kZXhPZiB3IGZvciB3IGluIHdvcmQpXHJcblx0XHRcdFthLGIsYyxkXSA9IGlmIExFVFRFUiA9PSBsZXR0ZXIgdGhlbiBbbCxpLGosa10gZWxzZSBbaixrLGwsaV1cclxuXHRcdFx0W2N1YmVbYV0sY3ViZVtiXSxjdWJlW2NdLGN1YmVbZF1dID0gW2N1YmVbaV0sY3ViZVtqXSxjdWJlW2tdLGN1YmVbbF1dXHJcblxyXG5zZXR1cCA9IC0+IGNyZWF0ZUNhbnZhcyA4MDAsODAwLCBXRUJHTFxyXG5cclxuZHJhdyA9IC0+XHJcblx0cm90YXRlWCAtcm90WzFdICogMC4wMVxyXG5cdHJvdGF0ZVkgLXJvdFswXSAqIDAuMDFcclxuXHRiYWNrZ3JvdW5kIDBcclxuXHJcblx0aW5kZXggPSAwXHJcblx0Zm9yIHNpZGUgaW4gcmFuZ2UgNlxyXG5cdFx0cm90YXRlWCBIQUxGX1BJICogWzEsMSwxLDEsMCwwXVtzaWRlXVxyXG5cdFx0cm90YXRlWiBIQUxGX1BJICogWzAsMCwwLDAsMSwyXVtzaWRlXVxyXG5cdFx0Zm9yIFtpLGpdIGluIFtbLTEsLTFdLFswLC0xXSxbMSwtMV0sWzEsMF0sWzEsMV0sWzAsMV0sWy0xLDFdLFstMSwwXSxbMCwwXV1cclxuXHRcdFx0cHVzaCgpXHJcblx0XHRcdHRyYW5zbGF0ZSAyKlIqaSwgMipSLCAyKlIqalxyXG5cclxuXHRcdFx0YmVnaW5TaGFwZSgpXHJcblx0XHRcdGZpbGwgQ09MT1JTW2N1YmVbaW5kZXhdXVxyXG5cdFx0XHR2ZXJ0ZXggLVIsUiwtUlxyXG5cdFx0XHR2ZXJ0ZXggK1IsUiwtUlxyXG5cdFx0XHR2ZXJ0ZXggK1IsUiwrUlxyXG5cdFx0XHR2ZXJ0ZXggLVIsUiwrUlxyXG5cdFx0XHRlbmRTaGFwZShDTE9TRSlcclxuXHJcblx0XHRcdHBvcCgpXHJcblx0XHRcdGluZGV4ICs9IDFcclxuXHJcbmNoYW5nZSA9IChzKSAtPlx0dHVybiBzXHJcblxyXG5tb3VzZVByZXNzZWQgPSAtPiBsYXN0ID0gW21vdXNlWCxtb3VzZVldXHJcblxyXG5tb3VzZURyYWdnZWQgPSAtPlxyXG5cdHJvdCA9IFtyb3RbMF0gKyBtb3VzZVgtbGFzdFswXSwgcm90WzFdICsgbW91c2VZLWxhc3RbMV1dXHJcblx0bGFzdCA9IFttb3VzZVgsbW91c2VZXSJdfQ==
//# sourceURL=C:\Lab\2019\033-RubikCube3D\coffee\sketch.coffee