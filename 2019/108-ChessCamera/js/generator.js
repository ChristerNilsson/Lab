// Generated by CoffeeScript 2.4.1
  // en passant saknas
  // bondeförvandling saknas
  // rockad saknas
var BLACK, Generator, WHITE, board, generator, index, position, res0, res1,
  indexOf = [].indexOf;

BLACK = 0;

WHITE = 1;

index = function(row, col) {
  return 8 * row + col;
};

position = function(index) {
  return [Math.floor(index / 8), index % 8];
};

Generator = class Generator {
  constructor(player1, board1) { // player: 0=black 1=white
    this.player = player1;
    this.board = board1;
    assert(this.board.length, 64);
    this.dirs = {
      K: [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]],
      Q: [[-1, 0], [1, 0], [0, -1], [0, 1], [-1, -1], [1, 1], [1, -1], [-1, 1]],
      R: [[-1, 0], [0, -1], [0, 1], [1, 0]],
      B: [[-1, -1], [1, 1], [1, -1], [-1, 1]],
      N: [[-2, -1], [-2, 1], [-1, -2], [-1, 2], [1, -2], [1, 2], [2, -1], [2, 1]]
    };
  }

  handleKN(index0, res0, res1, dirs) {
    var c, c1, col, index1, j, len, r, r1, ref, results, row;
    [row, col] = position(index0);
    results = [];
    for (j = 0, len = dirs.length; j < len; j++) {
      [r, c] = dirs[j];
      [r1, c1] = [row + r, col + c];
      if ((0 <= r1 && r1 <= 7) && (0 <= c1 && c1 <= 7)) {
        index1 = index(r1, c1);
        if (ref = this.board[index1], indexOf.call('KQRBNP', ref) < 0) {
          res0.push(index0);
          results.push(res1.push(index1));
        } else {
          results.push(void 0);
        }
      } else {
        results.push(void 0);
      }
    }
    return results;
  }

  handleBRQ(index0, res0, res1, dirs) {
    var c, col, dc, dr, index1, j, len, r, ref, row;
    [row, col] = position(index0);
    for (j = 0, len = dirs.length; j < len; j++) {
      [dr, dc] = dirs[j];
      [r, c] = [row, col];
      while (true) {
        [r, c] = [r + dr, c + dc];
        if ((0 <= r && r <= 7) && (0 <= c && c <= 7)) {
          index1 = index(r, c);
          if (ref = this.board[index1], indexOf.call(' kqrbnp', ref) >= 0) {
            res0.push(index0);
            res1.push(index1);
          }
          if (this.board[index1] !== ' ') {
            break;
          }
        } else {
          break;
        }
      }
    }
    return res1.sort(function(a, b) {
      return a - b;
    });
  }

  handleP(index0, res0, res1, player) {
    var col, ref, ref1, ref2, ref3, row;
    [row, col] = position(index0);
    if (player === WHITE) {
      if (ref = this.board[index0 - 9], indexOf.call('kqrbnp', ref) >= 0) { // snett vänster
        res0.push(index0);
        res1.push(index0 - 9);
      }
      if (this.board[index0 - 8] === ' ') { // ett steg
        res0.push(index0);
        res1.push(index0 - 8);
      }
      if (ref1 = this.board[index0 - 7], indexOf.call('kqrbnp', ref1) >= 0) { // snett höger
        res0.push(index0);
        res1.push(index0 - 7);
      }
      if (row === 6 && this.board[index0 - 8] === ' ' && this.board[index0 - 16] === ' ') { // två steg
        res0.push(index0);
        res1.push(index0 - 16);
      }
    }
    if (player === BLACK) {
      if (ref2 = this.board[index0 + 9], indexOf.call('kqrbnp', ref2) >= 0) { // snett höger
        res0.push(index0);
        res1.push(index0 + 9);
      }
      if (this.board[index0 + 8] === ' ') { // ett steg
        res0.push(index0);
        res1.push(index0 + 8);
      }
      if (ref3 = this.board[index0 + 7], indexOf.call('kqrbnp', ref3) >= 0) { // snett vänster
        res0.push(index0);
        res1.push(index0 + 7);
      }
      if (row === 1 && this.board[index0 + 8] === ' ' && this.board[index0 + 16] === ' ') { // två steg
        res0.push(index0);
        return res1.push(index0 + 16);
      }
    }
  }

  handleK(index0, res0, res1) {
    return this.handleKN(index0, res0, res1, this.dirs.K);
  }

  handleN(index0, res0, res1) {
    return this.handleKN(index0, res0, res1, this.dirs.N);
  }

  handleB(index0, res0, res1) {
    return this.handleBRQ(index0, res0, res1, this.dirs.B);
  }

  handleR(index0, res0, res1) {
    return this.handleBRQ(index0, res0, res1, this.dirs.R);
  }

  handleQ(index0, res0, res1) {
    return this.handleBRQ(index0, res0, res1, this.dirs.Q);
  }

  moves(player) {
    var i, j, len, p, p0, p1, q, q0, q1, ref, ref1, result;
    p = this.player;
    q = 1 - p;
    [p0, p1] = this.createMoves(player);
    [q0, q1] = this.createMoves(1 - player);
    // tag bort de drag som innebär att kungen kan tas.
    result = [];
    ref = range(p1.length);
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      if (ref1 = p1[i], indexOf.call(q1, ref1) < 0) {
        result.push([p0[i], p1[i]]);
      }
    }
    return result;
  }

  createMoves(player) {
    var i, j, len, piece, ref, res0, res1;
    res0 = [];
    res1 = [];
    ref = range(64);
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      piece = this.board[i];
      if (this.board[i] !== ' ') {
        if (player === 'kK'.indexOf(piece)) {
          this.handleK(i, res0, res1);
        }
        if (player === 'nN'.indexOf(piece)) {
          this.handleN(i, res0, res1);
        }
        if (player === 'bB'.indexOf(piece)) {
          this.handleB(i, res0, res1);
        }
        if (player === 'rR'.indexOf(piece)) {
          this.handleR(i, res0, res1);
        }
        if (player === 'qQ'.indexOf(piece)) {
          this.handleQ(i, res0, res1);
        }
        if (player === 'pP'.indexOf(piece)) {
          this.handleP(i, res0, res1);
        }
      }
    }
    return [res0, res1];
  }

};

assert(index(0, 0), 0);

assert(index(7, 7), 63);

assert([0, 0], position(0));

assert([7, 7], position(63));

generator = new Generator(1, 'K                                  k                            ');

res0 = [];

res1 = [];

generator.handleK(0, res0, res1);

assert(res0, [0, 0, 0]);

assert(res1, [1, 8, 9]);

board = '';

board += ' Q B    ';

board += '        ';

board += '  KN    ';

board += '  R     ';

board += '   k    ';

board += '        ';

board += '        ';

board += 'N       ';

generator = new Generator(9, board);

res0 = [];

res1 = [];

generator.handleK(18, res0, res1);

assert(res0, [18, 18, 18, 18, 18, 18]);

assert(res1, [9, 10, 11, 17, 25, 27]);

res0 = [];

res1 = [];

generator.handleN(56, res0, res1);

assert(res0, [56, 56]);

assert(res1, [41, 50]);

res0 = [];

res1 = [];

generator.handleR(26, res0, res1);

assert(res0, [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26]);

assert(res1, [24, 25, 27, 28, 29, 30, 31, 34, 42, 50, 58]);

res0 = [];

res1 = [];

generator.handleB(3, res0, res1);

assert(res0, [3, 3, 3, 3, 3, 3, 3]);

assert(res1, [10, 12, 17, 21, 24, 30, 39]);

res0 = [];

res1 = [];

generator.handleQ(1, res0, res1);

assert(res0, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]);

assert(res1, [0, 2, 8, 9, 10, 17, 25, 33, 41, 49, 57]);

//assert [[18,18,18,18,18,18,18, 19,19,19,19,19,19,19,19, 56,56],[ 9,10,11,17,25,26,27, 2,4,9,13,25,29,34,36, 41,50]], generator.createMoves WHITE
// assert [[35,35,35,35,35,35,35,35],[26,27,28,35,36,42,43,44]], generator.createMoves BLACK

//generator = new Generator 'rnbqkbnkpppppppp                                RNBQKBNR'
//assert generator.moves, 'a2a3 a2a4 b2b3 b2b4 c2c3 c2c4 d2d3 d2d4 e2e3 e2e4 f2f3 f2f4 g2g3 g2g4 h2h3 h2h4 b1a3 b2c3 g1f3 g1h3'
console.log('Ready!');

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\Lab\2019\108-ChessCamera\coffee\generator.coffee