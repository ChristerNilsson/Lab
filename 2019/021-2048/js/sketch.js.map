{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "N = 4\r\nSIZES = [0,128,128,80,64]\r\nCOLORS = '0 #F00 #0F0 #FF0 #0FF #F0F #FFF #08F #0F8 #800 #808 #80F'.split ' '\r\n[WIN,LOSE] =  [1,2]\r\n\r\nts = board = null\r\nscore = state = 0\r\n\r\nmove = (lst)->\r\n\tlst = (item for item in lst when item > 0)\r\n\tfor i in range lst.length\r\n\t\tif i < lst.length-1 and lst[i] == lst[i+1] \r\n\t\t\t[lst[i], lst[i+1]] = [lst[i]+1, 0]\t\r\n\t\t\tscore += 2**lst[i]\r\n\tlst = (item for item in lst when item > 0)\r\n\tlst.unshift 0 for i in range N - lst.length\t\t\r\n\tlst\r\n\r\nclass Board\r\n\tconstructor : ->\r\n\t\t@grid = (0 for i in range N * N)\r\n\t\t@addTile() for i in range 2\r\n\r\n\tmv : (indices) ->\r\n\t\tlst = move (@grid[index] for index in indices)\r\n\t\t@grid[index] = lst[i] for index,i in indices\r\n\r\n\taddTile : ->\r\n\t\tindex = _.sample (index for tile,index in @grid when tile == 0)\r\n\t\t@grid[index] = if random() < 0.9 then 1 else 2\r\n\t\t\r\n\tupdateState : ->\r\n\t\ttmp = new Board()\r\n\t\ttmp.grid = @grid.slice()\r\n\t\tfor m in range N\r\n\t\t\ttmp.mv t for t in ts[m]\r\n\t\tif 11 in @grid then state = WIN # 2**11 = 2048\r\n\t\telse if _.isEqual tmp.grid,@grid then state = LOSE\r\n\t\t\t\t\t\r\n\tmove : (m) -> \r\n\t\tif m not in [0,1,2,3] or state > 0 then return \r\n\t\toriginal = @grid.slice()\r\n\t\t@mv t for t in ts[m]\r\n\t\tif not _.isEqual @grid,original then @addTile() \r\n\t\t@updateState()\r\n\r\n\tdraw : ->\r\n\t\tfor cell,i in @grid\r\n\t\t\tx = 100 + i %% N * 200\r\n\t\t\ty = 100 + i // N * 200\r\n\t\t\tfill COLORS[cell]\r\n\t\t\trect x,y,180,180,4\r\n\t\t\tvalue = 2 ** cell\r\n\t\t\ttextSize SIZES[value.toString().length]\r\n\t\t\tfill 0\r\n\t\t\tif cell > 0 then text value,x,y+3\r\n\t\t\ttextSize 64\r\n\t\t\ttext score,100,850\r\n\t\t\ttext ['','You Win','Game Over'][state],600,850\r\n\r\nmake = (lst,d) ->\titem + d*i for item,k in lst for i in range N\r\n\r\nsetup = ->\r\n\ttest()\r\n\tcreateCanvas 801,801+100\r\n\ttextAlign CENTER,CENTER\r\n\trectMode CENTER\r\n\tboard = new Board()\r\n\tts = []\r\n\tts.push make [12,8,4,0], 1\r\n\tts.push make [0,1,2,3], N\r\n\tts.push make [0,4,8,12], 1 \r\n\tts.push make [3,2,1,0], N \r\n\tscore = 0\r\n\r\ndraw = ->\r\n\tbg 0.5\r\n\tboard.draw()\r\n\r\nkeyPressed = -> board.move [UP_ARROW, RIGHT_ARROW, DOWN_ARROW, LEFT_ARROW].indexOf keyCode\r\n"
  ]
}