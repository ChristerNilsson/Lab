{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "SIZES = [0,64,64,64,64,64,64,36,36,36,36,36]\r\nCOLORS = '0 FF0 F65 5C6 29C 96A FC0 F65 FCF 000 2FC A6B'.split ' '\r\n\r\nts = null\r\nboard = null\r\n\r\nmove = (lst)->\r\n\ti = lst.length-1\r\n\twhile i>=0\r\n\t\tif lst[i]==0 then lst.splice i,1 else i--\r\n\ti = lst.length-1\t\t\r\n\twhile i>0\r\n\t\tif lst[i] == lst[i-1] \r\n\t\t\tvalue = lst[i] + 1\r\n\t\t\tlst.splice i,1 \r\n\t\t\tlst[i-1] = value\t\r\n\t\t\ti--\r\n\t\ti--\r\n\tlst.unshift 0 for i in range 4 - lst.length\t\t\r\n\tlst\r\nassert [0,0,0,2], move [1,0,0,1]\r\nassert [0,0,2,1], move [0,2,0,1]\r\nassert [1,2,3,4], move [1,2,3,4]\r\nassert [0,1,3,1], move [1,2,2,1]\r\nassert [0,0,2,2], move [1,1,1,1]\r\nassert [0,0,2,2], move [0,2,1,1]\r\nassert [0,0,0,2], move [1,1,0,0]\r\nassert [0,0,0,2], move [0,1,1,0]\r\n\r\nclass Board\r\n\tconstructor : ->\r\n\t\t@grid = (0 for i in range 16)\r\n\t\t@grid[index]=1 for index in _.sample range(16),2\t\t\t\r\n\r\n\tmv : (indices) ->\r\n\t\tlst = move (@grid[index] for index in indices)\r\n\t\t@grid[index] = lst[i] for index,i in indices\r\n\r\n\taddTile : () ->\r\n\t\tcands = (index for tile,index in @grid when tile==0)\r\n\t\tif cands.length == 0 then return false\t\r\n\t\tindex = _.sample cands\r\n\t\t@grid[index] = 1\r\n\t\ttrue\r\n\t\t\t\r\n\tmove : (m) -> \r\n\t\toriginal = @grid.slice()\r\n\t\tif m not in [0,1,2,3] then return \r\n\t\t@mv t for t in ts[m]\r\n\t\tif not _.isEqual @grid,original then @addTile() \r\n\r\n\tdraw : ->\r\n\t\tfor cell,i in @grid\r\n\t\t\tx = 100 + 200*(i%%4)\r\n\t\t\ty = 100 + 200*(i//4)\r\n\t\t\tfill \"##{COLORS[cell]}\" \r\n\t\t\trect x,y,180,180,4\r\n\t\t\ttextSize SIZES[cell]\r\n\t\t\tfill 0\r\n\t\t\tif cell != 0 then text 2**cell,x,y+3\r\n\r\nmake = (lst,d) ->\titem+d*i for item,k in lst for i in range 4\r\n\r\nsetup = ->\r\n\tcreateCanvas 801,801\r\n\ttextAlign CENTER,CENTER\r\n\trectMode CENTER\r\n\tboard = new Board()\r\n\tts = []\r\n\tts.push make [12,8,4,0], 1\r\n\tts.push make [0,1,2,3], 4 \r\n\tts.push make [0,4,8,12], 1 \r\n\tts.push make [3,2,1,0], 4 \r\n\r\ndraw = ->\r\n\tbg 0.5\r\n\tboard.draw()\r\n\r\nkeyPressed = -> board.move [UP_ARROW, RIGHT_ARROW, DOWN_ARROW, LEFT_ARROW].indexOf keyCode\r\n"
  ]
}