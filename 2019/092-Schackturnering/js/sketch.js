// Generated by CoffeeScript 2.4.1
//assert = chai.assert.deepEqual
var PERSON, PERSONS, fetch, getPersons;

fetch = require('node-fetch');

//DOMParser = require 'dom-parser'
//parser = new DOMParser() # Initialize the DOM parser
PERSONS = 'https://member.schack.se/ShowTournamentServlet?id=7470';

PERSON = 'https://member.schack.se/ShowTournamentParticipantResultServlet?partid=';

fetch(PERSONS).then((response) => {
  return response.text(); // When the page is loaded convert it to text
}).then((html) => {
  var i, len, line, lines, number, p1, p2;
  lines = html.split('<td');
  lines = lines.filter((line) => {
    return line.includes('listrighttext');
  });
  lines = lines.filter((line) => {
    return line.includes("'7470'");
  });
  for (i = 0, len = lines.length; i < len; i++) {
    line = lines[i];
    // ('7470','532026')" class
    p1 = line.indexOf("'7470'") + 8;
    p2 = line.indexOf("')", p2);
    number = line.slice(p1, p2);
    numbers.push(number);
    console.log(number);
  }
  return getPersons(numbers);
}).catch((err) => {
  return console.log('Failed to fetch page: ', err);
});

getPersons = (numbers) => {
  var i, j, len, len1, name, number, persons, ref, results, year;
  console.log('getPersons');
  persons = [];
  ref = numbers.slice(0, 2);
  for (i = 0, len = ref.length; i < len; i++) {
    number = ref[i];
    console.log(number);
    fetch(PERSON + number).then((response) => {
      return response.text(); // When the page is loaded convert it to text
    }).then((html) => {
      var name, p1, p2, p3, year;
      
      // relative;">2011</td>
      p1 = html.indexOf(">Födelseår</td>") + 1;
      p2 = html.indexOf("relative", p1) + 1;
      p3 = html.indexOf("relative", p2) + 11;
      year = html.slice(p3, p3 + 4);
      // Turneringsresultat för Felix Olofsson<h4 class=
      p1 = html.indexOf("Turneringsresultat för ") + 23;
      p2 = html.indexOf("<h4 class=", p1);
      name = html.slice(p1, p2);
      return persons.push([year, name]);
    });
  }
  persons.sort();
  results = [];
  for (j = 0, len1 = persons.length; j < len1; j++) {
    [year, name] = persons[j];
    results.push(console.log(year, name));
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUEsSUFBQSxNQUFBLEVBQUEsT0FBQSxFQUFBLEtBQUEsRUFBQTs7QUFDQSxLQUFBLEdBQVEsT0FBQSxDQUFRLFlBQVIsRUFEUjs7OztBQUtBLE9BQUEsR0FBVzs7QUFFWCxNQUFBLEdBQVM7O0FBRVQsS0FBQSxDQUFNLE9BQU4sQ0FDQyxDQUFDLElBREYsQ0FDTyxDQUFDLFFBQUQsQ0FBQSxHQUFBO1NBQWMsUUFBUSxDQUFDLElBQVQsQ0FBQSxFQUFkO0FBQUEsQ0FEUCxDQUVDLENBQUMsSUFGRixDQUVPLENBQUMsSUFBRCxDQUFBLEdBQUE7QUFDTCxNQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxNQUFBLEVBQUEsRUFBQSxFQUFBO0VBQUEsS0FBQSxHQUFRLElBQUksQ0FBQyxLQUFMLENBQVcsS0FBWDtFQUNSLEtBQUEsR0FBUSxLQUFLLENBQUMsTUFBTixDQUFhLENBQUMsSUFBRCxDQUFBLEdBQUE7V0FBVSxJQUFJLENBQUMsUUFBTCxDQUFjLGVBQWQ7RUFBVixDQUFiO0VBQ1IsS0FBQSxHQUFRLEtBQUssQ0FBQyxNQUFOLENBQWEsQ0FBQyxJQUFELENBQUEsR0FBQTtXQUFVLElBQUksQ0FBQyxRQUFMLENBQWMsUUFBZDtFQUFWLENBQWI7RUFDUixLQUFBLHVDQUFBO29CQUFBOztJQUVDLEVBQUEsR0FBSyxJQUFJLENBQUMsT0FBTCxDQUFhLFFBQWIsQ0FBQSxHQUF5QjtJQUM5QixFQUFBLEdBQUssSUFBSSxDQUFDLE9BQUwsQ0FBYSxJQUFiLEVBQWtCLEVBQWxCO0lBQ0wsTUFBQSxHQUFTLElBQUksQ0FBQyxLQUFMLENBQVcsRUFBWCxFQUFjLEVBQWQ7SUFDVCxPQUFPLENBQUMsSUFBUixDQUFhLE1BQWI7SUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLE1BQVo7RUFORDtTQU9BLFVBQUEsQ0FBVyxPQUFYO0FBWEssQ0FGUCxDQWNDLENBQUMsS0FkRixDQWNRLENBQUMsR0FBRCxDQUFBLEdBQUE7U0FBUyxPQUFPLENBQUMsR0FBUixDQUFZLHdCQUFaLEVBQXNDLEdBQXRDO0FBQVQsQ0FkUjs7QUFnQkEsVUFBQSxHQUFhLENBQUMsT0FBRCxDQUFBLEdBQUE7QUFDWixNQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxFQUFBLE9BQUEsRUFBQSxHQUFBLEVBQUEsT0FBQSxFQUFBO0VBQUEsT0FBTyxDQUFDLEdBQVIsQ0FBWSxZQUFaO0VBQ0EsT0FBQSxHQUFVO0FBQ1Y7RUFBQSxLQUFBLHFDQUFBOztJQUNDLE9BQU8sQ0FBQyxHQUFSLENBQVksTUFBWjtJQUNBLEtBQUEsQ0FBTSxNQUFBLEdBQVMsTUFBZixDQUNDLENBQUMsSUFERixDQUNPLENBQUMsUUFBRCxDQUFBLEdBQUE7YUFBYyxRQUFRLENBQUMsSUFBVCxDQUFBLEVBQWQ7SUFBQSxDQURQLENBRUMsQ0FBQyxJQUZGLENBRU8sQ0FBQyxJQUFELENBQUEsR0FBQTtBQUVMLFVBQUEsSUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLElBQUE7OztNQUFBLEVBQUEsR0FBSyxJQUFJLENBQUMsT0FBTCxDQUFhLGlCQUFiLENBQUEsR0FBa0M7TUFDdkMsRUFBQSxHQUFLLElBQUksQ0FBQyxPQUFMLENBQWEsVUFBYixFQUF3QixFQUF4QixDQUFBLEdBQThCO01BQ25DLEVBQUEsR0FBSyxJQUFJLENBQUMsT0FBTCxDQUFhLFVBQWIsRUFBd0IsRUFBeEIsQ0FBQSxHQUE4QjtNQUNuQyxJQUFBLEdBQVEsSUFBSSxDQUFDLEtBQUwsQ0FBVyxFQUFYLEVBQWMsRUFBQSxHQUFHLENBQWpCLEVBSFI7O01BTUEsRUFBQSxHQUFLLElBQUksQ0FBQyxPQUFMLENBQWEseUJBQWIsQ0FBQSxHQUEwQztNQUMvQyxFQUFBLEdBQUssSUFBSSxDQUFDLE9BQUwsQ0FBYSxZQUFiLEVBQTBCLEVBQTFCO01BQ0wsSUFBQSxHQUFPLElBQUksQ0FBQyxLQUFMLENBQVcsRUFBWCxFQUFjLEVBQWQ7YUFDUCxPQUFPLENBQUMsSUFBUixDQUFhLENBQUMsSUFBRCxFQUFNLElBQU4sQ0FBYjtJQVhLLENBRlA7RUFGRDtFQWdCQSxPQUFPLENBQUMsSUFBUixDQUFBO0FBQ0E7RUFBQSxLQUFBLDJDQUFBO0lBQUksQ0FBQyxJQUFELEVBQU0sSUFBTjtpQkFDSCxPQUFPLENBQUMsR0FBUixDQUFZLElBQVosRUFBaUIsSUFBakI7RUFERCxDQUFBOztBQXBCWSIsInNvdXJjZXNDb250ZW50IjpbIiNhc3NlcnQgPSBjaGFpLmFzc2VydC5kZWVwRXF1YWxcclxuZmV0Y2ggPSByZXF1aXJlICdub2RlLWZldGNoJ1xyXG4jRE9NUGFyc2VyID0gcmVxdWlyZSAnZG9tLXBhcnNlcidcclxuI3BhcnNlciA9IG5ldyBET01QYXJzZXIoKSAjIEluaXRpYWxpemUgdGhlIERPTSBwYXJzZXJcclxuXHJcblBFUlNPTlMgID0gJ2h0dHBzOi8vbWVtYmVyLnNjaGFjay5zZS9TaG93VG91cm5hbWVudFNlcnZsZXQ/aWQ9NzQ3MCdcclxuXHJcblBFUlNPTiA9ICdodHRwczovL21lbWJlci5zY2hhY2suc2UvU2hvd1RvdXJuYW1lbnRQYXJ0aWNpcGFudFJlc3VsdFNlcnZsZXQ/cGFydGlkPSdcclxuXHJcbmZldGNoKFBFUlNPTlMpXHJcblx0LnRoZW4gKHJlc3BvbnNlKSA9PiByZXNwb25zZS50ZXh0KCkgIyBXaGVuIHRoZSBwYWdlIGlzIGxvYWRlZCBjb252ZXJ0IGl0IHRvIHRleHRcclxuXHQudGhlbiAoaHRtbCkgPT4gXHJcblx0XHRsaW5lcyA9IGh0bWwuc3BsaXQgJzx0ZCdcclxuXHRcdGxpbmVzID0gbGluZXMuZmlsdGVyIChsaW5lKSA9PiBsaW5lLmluY2x1ZGVzICdsaXN0cmlnaHR0ZXh0J1xyXG5cdFx0bGluZXMgPSBsaW5lcy5maWx0ZXIgKGxpbmUpID0+IGxpbmUuaW5jbHVkZXMgXCInNzQ3MCdcIlxyXG5cdFx0Zm9yIGxpbmUgaW4gbGluZXNcclxuXHRcdFx0IyAoJzc0NzAnLCc1MzIwMjYnKVwiIGNsYXNzXHJcblx0XHRcdHAxID0gbGluZS5pbmRleE9mKFwiJzc0NzAnXCIpICsgOFxyXG5cdFx0XHRwMiA9IGxpbmUuaW5kZXhPZihcIicpXCIscDIpXHJcblx0XHRcdG51bWJlciA9IGxpbmUuc2xpY2UgcDEscDJcclxuXHRcdFx0bnVtYmVycy5wdXNoIG51bWJlclxyXG5cdFx0XHRjb25zb2xlLmxvZyBudW1iZXJcclxuXHRcdGdldFBlcnNvbnMgbnVtYmVyc1xyXG5cdC5jYXRjaCAoZXJyKSA9PiBjb25zb2xlLmxvZygnRmFpbGVkIHRvIGZldGNoIHBhZ2U6ICcsIGVycilcclxuXHJcbmdldFBlcnNvbnMgPSAobnVtYmVycykgPT5cclxuXHRjb25zb2xlLmxvZyAnZ2V0UGVyc29ucydcclxuXHRwZXJzb25zID0gW11cclxuXHRmb3IgbnVtYmVyIGluIG51bWJlcnMuc2xpY2UgMCwyXHJcblx0XHRjb25zb2xlLmxvZyBudW1iZXJcclxuXHRcdGZldGNoKFBFUlNPTiArIG51bWJlcilcdFx0XHJcblx0XHRcdC50aGVuIChyZXNwb25zZSkgPT4gcmVzcG9uc2UudGV4dCgpICMgV2hlbiB0aGUgcGFnZSBpcyBsb2FkZWQgY29udmVydCBpdCB0byB0ZXh0XHJcblx0XHRcdC50aGVuIChodG1sKSA9PiBcclxuXHRcdFx0XHQjIHJlbGF0aXZlO1wiPjIwMTE8L3RkPlxyXG5cdFx0XHRcdHAxID0gaHRtbC5pbmRleE9mKFwiPkbDtmRlbHNlw6VyPC90ZD5cIikgKyAxXHJcblx0XHRcdFx0cDIgPSBodG1sLmluZGV4T2YoXCJyZWxhdGl2ZVwiLHAxKSArIDFcclxuXHRcdFx0XHRwMyA9IGh0bWwuaW5kZXhPZihcInJlbGF0aXZlXCIscDIpICsgMTFcclxuXHRcdFx0XHR5ZWFyID0gIGh0bWwuc2xpY2UgcDMscDMrNFxyXG5cclxuXHRcdFx0XHQjIFR1cm5lcmluZ3NyZXN1bHRhdCBmw7ZyIEZlbGl4IE9sb2Zzc29uPGg0IGNsYXNzPVxyXG5cdFx0XHRcdHAxID0gaHRtbC5pbmRleE9mKFwiVHVybmVyaW5nc3Jlc3VsdGF0IGbDtnIgXCIpICsgMjNcclxuXHRcdFx0XHRwMiA9IGh0bWwuaW5kZXhPZihcIjxoNCBjbGFzcz1cIixwMSlcclxuXHRcdFx0XHRuYW1lID0gaHRtbC5zbGljZSBwMSxwMlxyXG5cdFx0XHRcdHBlcnNvbnMucHVzaCBbeWVhcixuYW1lXVxyXG5cdHBlcnNvbnMuc29ydCgpXHJcblx0Zm9yIFt5ZWFyLG5hbWVdIGluIHBlcnNvbnNcclxuXHRcdGNvbnNvbGUubG9nIHllYXIsbmFtZSJdfQ==
//# sourceURL=c:\Lab\2019\092-Schackturnering\coffee\sketch.coffee