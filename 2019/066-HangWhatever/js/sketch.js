// Generated by CoffeeScript 2.3.2
var Hangman, PATH, WORDS, _, assert, chai, fs, hangman, range,
  indexOf = [].indexOf;

_ = require('lodash');

chai = require('chai');

fs = require('fs');

range = _.range;

assert = chai.assert.deepEqual;

WORDS = 'words.txt';

PATH = 'data.json';

Hangman = class Hangman {
  constructor() {
    var words;
    words = fs.readFileSync(WORDS, 'utf8').split('\r\n');
    this.secret = words[_.random(words.length)];
    this.guessed = this.secret.split('').map((word) => {
      return '_';
    });
    this.history = [];
  }

  show() {
    return this.guessed.join(' ');
  }

  guess(letter) {
    var i, j, len, ltr, ref, results;
    this.history.push(letter);
    ref = this.secret;
    results = [];
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      ltr = ref[i];
      if (ltr === letter) {
        results.push(this.guessed[i] = letter);
      } else {
        results.push(void 0);
      }
    }
    return results;
  }

  read() {
    return Object.assign(this, JSON.parse(fs.readFileSync(PATH, 'utf-8')));
  }

  write() {
    return fs.writeFileSync(PATH, JSON.stringify(this));
  }

};

hangman = new Hangman;

hangman.read();

if (process.argv.length === 2) {
  hangman = new Hangman;
} else {
  hangman.guess(process.argv[2]);
}

if (indexOf.call(hangman.guessed, '_') < 0) {
  console.log(hangman.history.join());
}

console.log(hangman.show());

hangman.write();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsT0FBQSxFQUFBLElBQUEsRUFBQSxLQUFBLEVBQUEsQ0FBQSxFQUFBLE1BQUEsRUFBQSxJQUFBLEVBQUEsRUFBQSxFQUFBLE9BQUEsRUFBQSxLQUFBO0VBQUE7O0FBQUEsQ0FBQSxHQUFJLE9BQUEsQ0FBUSxRQUFSOztBQUNKLElBQUEsR0FBTyxPQUFBLENBQVEsTUFBUjs7QUFDUCxFQUFBLEdBQUssT0FBQSxDQUFRLElBQVI7O0FBRUwsS0FBQSxHQUFRLENBQUMsQ0FBQzs7QUFDVixNQUFBLEdBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQzs7QUFFckIsS0FBQSxHQUFROztBQUNSLElBQUEsR0FBTzs7QUFFRCxVQUFOLE1BQUEsUUFBQTtFQUNDLFdBQWMsQ0FBQSxDQUFBO0FBQ2IsUUFBQTtJQUFBLEtBQUEsR0FBUSxFQUFFLENBQUMsWUFBSCxDQUFnQixLQUFoQixFQUF1QixNQUF2QixDQUE4QixDQUFDLEtBQS9CLENBQXFDLE1BQXJDO0lBQ1IsSUFBQyxDQUFBLE1BQUQsR0FBVSxLQUFNLENBQUEsQ0FBQyxDQUFDLE1BQUYsQ0FBUyxLQUFLLENBQUMsTUFBZixDQUFBO0lBQ2hCLElBQUMsQ0FBQSxPQUFELEdBQVcsSUFBQyxDQUFBLE1BQU0sQ0FBQyxLQUFSLENBQWMsRUFBZCxDQUFpQixDQUFDLEdBQWxCLENBQXNCLENBQUMsSUFBRCxDQUFBLEdBQUE7YUFBVTtJQUFWLENBQXRCO0lBQ1gsSUFBQyxDQUFBLE9BQUQsR0FBVztFQUpFOztFQU1kLElBQU8sQ0FBQSxDQUFBO1dBQUcsSUFBQyxDQUFBLE9BQU8sQ0FBQyxJQUFULENBQWMsR0FBZDtFQUFIOztFQUVQLEtBQVEsQ0FBQyxNQUFELENBQUE7QUFDUCxRQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUE7SUFBQSxJQUFDLENBQUEsT0FBTyxDQUFDLElBQVQsQ0FBYyxNQUFkO0FBQ0E7QUFBQTtJQUFBLEtBQUEsNkNBQUE7O01BQ0MsSUFBRyxHQUFBLEtBQU8sTUFBVjtxQkFBc0IsSUFBQyxDQUFBLE9BQVEsQ0FBQSxDQUFBLENBQVQsR0FBYyxRQUFwQztPQUFBLE1BQUE7NkJBQUE7O0lBREQsQ0FBQTs7RUFGTzs7RUFLUixJQUFPLENBQUEsQ0FBQTtXQUFHLE1BQU0sQ0FBQyxNQUFQLENBQWMsSUFBZCxFQUFpQixJQUFJLENBQUMsS0FBTCxDQUFXLEVBQUUsQ0FBQyxZQUFILENBQWdCLElBQWhCLEVBQXFCLE9BQXJCLENBQVgsQ0FBakI7RUFBSDs7RUFDUCxLQUFRLENBQUEsQ0FBQTtXQUFHLEVBQUUsQ0FBQyxhQUFILENBQWlCLElBQWpCLEVBQXNCLElBQUksQ0FBQyxTQUFMLENBQWUsSUFBZixDQUF0QjtFQUFIOztBQWZUOztBQWlCQSxPQUFBLEdBQVUsSUFBSTs7QUFDZCxPQUFPLENBQUMsSUFBUixDQUFBOztBQUVBLElBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFiLEtBQXVCLENBQTFCO0VBQ0MsT0FBQSxHQUFVLElBQUksUUFEZjtDQUFBLE1BQUE7RUFHQyxPQUFPLENBQUMsS0FBUixDQUFjLE9BQU8sQ0FBQyxJQUFLLENBQUEsQ0FBQSxDQUEzQixFQUhEOzs7QUFLQSxJQUFHLGFBQVcsT0FBTyxDQUFDLE9BQW5CLEVBQUEsR0FBQSxLQUFIO0VBQW1DLE9BQU8sQ0FBQyxHQUFSLENBQVksT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFoQixDQUFBLENBQVosRUFBbkM7OztBQUNBLE9BQU8sQ0FBQyxHQUFSLENBQVksT0FBTyxDQUFDLElBQVIsQ0FBQSxDQUFaOztBQUNBLE9BQU8sQ0FBQyxLQUFSLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJfID0gcmVxdWlyZSAnbG9kYXNoJ1xyXG5jaGFpID0gcmVxdWlyZSAnY2hhaSdcclxuZnMgPSByZXF1aXJlICdmcydcclxuXHJcbnJhbmdlID0gXy5yYW5nZVxyXG5hc3NlcnQgPSBjaGFpLmFzc2VydC5kZWVwRXF1YWxcclxuXHJcbldPUkRTID0gJ3dvcmRzLnR4dCdcclxuUEFUSCA9ICdkYXRhLmpzb24nXHJcblxyXG5jbGFzcyBIYW5nbWFuXHJcblx0Y29uc3RydWN0b3IgOiAtPlxyXG5cdFx0d29yZHMgPSBmcy5yZWFkRmlsZVN5bmMoV09SRFMsICd1dGY4Jykuc3BsaXQgJ1xcclxcbidcclxuXHRcdEBzZWNyZXQgPSB3b3Jkc1tfLnJhbmRvbSB3b3Jkcy5sZW5ndGhdXHJcblx0XHRAZ3Vlc3NlZCA9IEBzZWNyZXQuc3BsaXQoJycpLm1hcCAod29yZCkgPT4gJ18nXHJcblx0XHRAaGlzdG9yeSA9IFtdXHJcblxyXG5cdHNob3cgOiAtPiBAZ3Vlc3NlZC5qb2luICcgJ1xyXG5cclxuXHRndWVzcyA6IChsZXR0ZXIpIC0+XHJcblx0XHRAaGlzdG9yeS5wdXNoIGxldHRlclxyXG5cdFx0Zm9yIGx0cixpIGluIEBzZWNyZXQgXHJcblx0XHRcdGlmIGx0ciA9PSBsZXR0ZXIgdGhlbiBAZ3Vlc3NlZFtpXSA9IGxldHRlclxyXG5cclxuXHRyZWFkIDogLT4gT2JqZWN0LmFzc2lnbiBALCBKU09OLnBhcnNlIGZzLnJlYWRGaWxlU3luYyBQQVRILCd1dGYtOCdcclxuXHR3cml0ZSA6IC0+IGZzLndyaXRlRmlsZVN5bmMgUEFUSCxKU09OLnN0cmluZ2lmeSBAXHJcblxyXG5oYW5nbWFuID0gbmV3IEhhbmdtYW5cclxuaGFuZ21hbi5yZWFkKClcclxuXHJcbmlmIHByb2Nlc3MuYXJndi5sZW5ndGggPT0gMlxyXG5cdGhhbmdtYW4gPSBuZXcgSGFuZ21hblxyXG5lbHNlXHJcblx0aGFuZ21hbi5ndWVzcyBwcm9jZXNzLmFyZ3ZbMl1cclxuXHJcbmlmICdfJyBub3QgaW4gaGFuZ21hbi5ndWVzc2VkIHRoZW4gY29uc29sZS5sb2cgaGFuZ21hbi5oaXN0b3J5LmpvaW4oKVxyXG5jb25zb2xlLmxvZyBoYW5nbWFuLnNob3coKVxyXG5oYW5nbWFuLndyaXRlKCkiXX0=
//# sourceURL=c:\Lab\2019\066-HangWhatever\coffee\sketch.coffee