// Generated by CoffeeScript 2.3.2
var Hangman, PATH, WORDS, _, assert, chai, fs, hangman, range,
  indexOf = [].indexOf;

_ = require('lodash');

chai = require('chai');

fs = require('fs');

range = _.range;

assert = chai.assert.deepEqual;

WORDS = 'words.txt';

PATH = 'data.json';

Hangman = class Hangman {
  constructor() {
    var words;
    words = fs.readFileSync(WORDS, 'utf8').split('\r\n');
    this.secret = words[_.random(200)];
    this.guessed = this.secret.split('').map((word) => {
      return '_';
    });
    this.history = [];
  }

  show() {
    return this.guessed.join(' ');
  }

  guess(letter) {
    var i, j, len, ltr, ref;
    this.history.push(letter);
    ref = this.secret;
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      ltr = ref[i];
      if (ltr === letter) {
        this.guessed[i] = letter;
      }
    }
    return this.guessed;
  }

  read() {
    return Object.assign(this, JSON.parse(fs.readFileSync(PATH, 'utf-8')));
  }

  write() {
    return fs.writeFileSync(PATH, JSON.stringify(this));
  }

};

hangman = new Hangman;

hangman.read();

if (process.argv.length === 2) {
  hangman = new Hangman;
} else {
  hangman.guess(process.argv[2]);
}

if (indexOf.call(hangman.guessed, '_') < 0) {
  console.log(hangman.history.join());
}

console.log(hangman.show());

hangman.write();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsT0FBQSxFQUFBLElBQUEsRUFBQSxLQUFBLEVBQUEsQ0FBQSxFQUFBLE1BQUEsRUFBQSxJQUFBLEVBQUEsRUFBQSxFQUFBLE9BQUEsRUFBQSxLQUFBO0VBQUE7O0FBQUEsQ0FBQSxHQUFJLE9BQUEsQ0FBUSxRQUFSOztBQUNKLElBQUEsR0FBTyxPQUFBLENBQVEsTUFBUjs7QUFDUCxFQUFBLEdBQUssT0FBQSxDQUFRLElBQVI7O0FBRUwsS0FBQSxHQUFRLENBQUMsQ0FBQzs7QUFDVixNQUFBLEdBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQzs7QUFFckIsS0FBQSxHQUFROztBQUNSLElBQUEsR0FBTzs7QUFFRCxVQUFOLE1BQUEsUUFBQTtFQUNDLFdBQWMsQ0FBQSxDQUFBO0FBQ2IsUUFBQTtJQUFBLEtBQUEsR0FBUSxFQUFFLENBQUMsWUFBSCxDQUFnQixLQUFoQixFQUF1QixNQUF2QixDQUE4QixDQUFDLEtBQS9CLENBQXFDLE1BQXJDO0lBQ1IsSUFBQyxDQUFBLE1BQUQsR0FBVSxLQUFNLENBQUEsQ0FBQyxDQUFDLE1BQUYsQ0FBUyxHQUFULENBQUE7SUFDaEIsSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFDLENBQUEsTUFBTSxDQUFDLEtBQVIsQ0FBYyxFQUFkLENBQWlCLENBQUMsR0FBbEIsQ0FBc0IsQ0FBQyxJQUFELENBQUEsR0FBQTthQUFVO0lBQVYsQ0FBdEI7SUFDWCxJQUFDLENBQUEsT0FBRCxHQUFXO0VBSkU7O0VBTWQsSUFBTyxDQUFBLENBQUE7V0FBRyxJQUFDLENBQUEsT0FBTyxDQUFDLElBQVQsQ0FBYyxHQUFkO0VBQUg7O0VBRVAsS0FBUSxDQUFDLE1BQUQsQ0FBQTtBQUNQLFFBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBO0lBQUEsSUFBQyxDQUFBLE9BQU8sQ0FBQyxJQUFULENBQWMsTUFBZDtBQUNBO0lBQUEsS0FBQSw2Q0FBQTs7TUFDQyxJQUFHLEdBQUEsS0FBTyxNQUFWO1FBQXNCLElBQUMsQ0FBQSxPQUFRLENBQUEsQ0FBQSxDQUFULEdBQWMsT0FBcEM7O0lBREQ7V0FFQSxJQUFDLENBQUE7RUFKTTs7RUFNUixJQUFPLENBQUEsQ0FBQTtXQUFHLE1BQU0sQ0FBQyxNQUFQLENBQWMsSUFBZCxFQUFpQixJQUFJLENBQUMsS0FBTCxDQUFXLEVBQUUsQ0FBQyxZQUFILENBQWdCLElBQWhCLEVBQXFCLE9BQXJCLENBQVgsQ0FBakI7RUFBSDs7RUFDUCxLQUFRLENBQUEsQ0FBQTtXQUFHLEVBQUUsQ0FBQyxhQUFILENBQWlCLElBQWpCLEVBQXNCLElBQUksQ0FBQyxTQUFMLENBQWUsSUFBZixDQUF0QjtFQUFIOztBQWhCVDs7QUFrQkEsT0FBQSxHQUFVLElBQUk7O0FBQ2QsT0FBTyxDQUFDLElBQVIsQ0FBQTs7QUFFQSxJQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBYixLQUF1QixDQUExQjtFQUNDLE9BQUEsR0FBVSxJQUFJLFFBRGY7Q0FBQSxNQUFBO0VBR0MsT0FBTyxDQUFDLEtBQVIsQ0FBYyxPQUFPLENBQUMsSUFBSyxDQUFBLENBQUEsQ0FBM0IsRUFIRDs7O0FBS0EsSUFBRyxhQUFXLE9BQU8sQ0FBQyxPQUFuQixFQUFBLEdBQUEsS0FBSDtFQUFtQyxPQUFPLENBQUMsR0FBUixDQUFZLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBaEIsQ0FBQSxDQUFaLEVBQW5DOzs7QUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLE9BQU8sQ0FBQyxJQUFSLENBQUEsQ0FBWjs7QUFDQSxPQUFPLENBQUMsS0FBUixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiXyA9IHJlcXVpcmUgJ2xvZGFzaCdcclxuY2hhaSA9IHJlcXVpcmUgJ2NoYWknXHJcbmZzID0gcmVxdWlyZSAnZnMnXHJcblxyXG5yYW5nZSA9IF8ucmFuZ2VcclxuYXNzZXJ0ID0gY2hhaS5hc3NlcnQuZGVlcEVxdWFsXHJcblxyXG5XT1JEUyA9ICd3b3Jkcy50eHQnXHJcblBBVEggPSAnZGF0YS5qc29uJ1xyXG5cclxuY2xhc3MgSGFuZ21hblxyXG5cdGNvbnN0cnVjdG9yIDogLT5cclxuXHRcdHdvcmRzID0gZnMucmVhZEZpbGVTeW5jKFdPUkRTLCAndXRmOCcpLnNwbGl0ICdcXHJcXG4nXHJcblx0XHRAc2VjcmV0ID0gd29yZHNbXy5yYW5kb20gMjAwXVxyXG5cdFx0QGd1ZXNzZWQgPSBAc2VjcmV0LnNwbGl0KCcnKS5tYXAgKHdvcmQpID0+ICdfJ1xyXG5cdFx0QGhpc3RvcnkgPSBbXVxyXG5cclxuXHRzaG93IDogLT4gQGd1ZXNzZWQuam9pbiAnICdcclxuXHJcblx0Z3Vlc3MgOiAobGV0dGVyKSAtPlxyXG5cdFx0QGhpc3RvcnkucHVzaCBsZXR0ZXJcclxuXHRcdGZvciBsdHIsaSBpbiBAc2VjcmV0IFxyXG5cdFx0XHRpZiBsdHIgPT0gbGV0dGVyIHRoZW4gQGd1ZXNzZWRbaV0gPSBsZXR0ZXJcclxuXHRcdEBndWVzc2VkXHJcblxyXG5cdHJlYWQgOiAtPiBPYmplY3QuYXNzaWduIEAsIEpTT04ucGFyc2UgZnMucmVhZEZpbGVTeW5jIFBBVEgsJ3V0Zi04J1xyXG5cdHdyaXRlIDogLT4gZnMud3JpdGVGaWxlU3luYyBQQVRILEpTT04uc3RyaW5naWZ5IEBcclxuXHJcbmhhbmdtYW4gPSBuZXcgSGFuZ21hblxyXG5oYW5nbWFuLnJlYWQoKVxyXG5cclxuaWYgcHJvY2Vzcy5hcmd2Lmxlbmd0aCA9PSAyXHJcblx0aGFuZ21hbiA9IG5ldyBIYW5nbWFuXHJcbmVsc2VcclxuXHRoYW5nbWFuLmd1ZXNzIHByb2Nlc3MuYXJndlsyXVxyXG5cclxuaWYgJ18nIG5vdCBpbiBoYW5nbWFuLmd1ZXNzZWQgdGhlbiBjb25zb2xlLmxvZyBoYW5nbWFuLmhpc3Rvcnkuam9pbigpXHJcbmNvbnNvbGUubG9nIGhhbmdtYW4uc2hvdygpXHJcbmhhbmdtYW4ud3JpdGUoKSJdfQ==
//# sourceURL=c:\Lab\2019\066-HangWhatever\coffee\sketch.coffee