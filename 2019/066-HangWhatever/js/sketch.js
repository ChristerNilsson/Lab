// Generated by CoffeeScript 2.3.2
var Hangman, PATH, WORDS, _, assert, chai, fs, hangman, range,
  indexOf = [].indexOf;

_ = require('lodash');

chai = require('chai');

fs = require('fs');

range = _.range;

assert = chai.assert.deepEqual;

WORDS = 'words.txt';

PATH = 'data.json';

Hangman = class Hangman {
  constructor() {
    var words;
    words = fs.readFileSync(WORDS, 'utf8').split('\r\n');
    this.secret = words[_.random(200)];
    this.guessed = this.secret.split('').map((word) => {
      return '_';
    });
    this.history = [];
  }

  show() {
    return this.guessed.join(' ');
  }

  guess(letter) {
    var i, j, len, ltr, ref, results;
    this.history.push(letter);
    ref = this.secret;
    results = [];
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      ltr = ref[i];
      if (ltr === letter) {
        results.push(this.guessed[i] = letter);
      } else {
        results.push(void 0);
      }
    }
    return results;
  }

  read() {
    return Object.assign(this, JSON.parse(fs.readFileSync(PATH, 'utf-8')));
  }

  write() {
    return fs.writeFileSync(PATH, JSON.stringify(this));
  }

};

hangman = new Hangman;

hangman.read();

if (process.argv.length === 2) {
  hangman = new Hangman;
} else {
  hangman.guess(process.argv[2]);
}

if (indexOf.call(hangman.guessed, '_') < 0) {
  console.log(hangman.history.join());
}

console.log(hangman.show());

hangman.write();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsT0FBQSxFQUFBLElBQUEsRUFBQSxLQUFBLEVBQUEsQ0FBQSxFQUFBLE1BQUEsRUFBQSxJQUFBLEVBQUEsRUFBQSxFQUFBLE9BQUEsRUFBQSxLQUFBO0VBQUE7O0FBQUEsQ0FBQSxHQUFJLE9BQUEsQ0FBUSxRQUFSOztBQUNKLElBQUEsR0FBTyxPQUFBLENBQVEsTUFBUjs7QUFDUCxFQUFBLEdBQUssT0FBQSxDQUFRLElBQVI7O0FBRUwsS0FBQSxHQUFRLENBQUMsQ0FBQzs7QUFDVixNQUFBLEdBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQzs7QUFFckIsS0FBQSxHQUFROztBQUNSLElBQUEsR0FBTzs7QUFFRCxVQUFOLE1BQUEsUUFBQTtFQUNDLFdBQWMsQ0FBQSxDQUFBO0FBQ2IsUUFBQTtJQUFBLEtBQUEsR0FBUSxFQUFFLENBQUMsWUFBSCxDQUFnQixLQUFoQixFQUF1QixNQUF2QixDQUE4QixDQUFDLEtBQS9CLENBQXFDLE1BQXJDO0lBQ1IsSUFBQyxDQUFBLE1BQUQsR0FBVSxLQUFNLENBQUEsQ0FBQyxDQUFDLE1BQUYsQ0FBUyxHQUFULENBQUE7SUFDaEIsSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFDLENBQUEsTUFBTSxDQUFDLEtBQVIsQ0FBYyxFQUFkLENBQWlCLENBQUMsR0FBbEIsQ0FBc0IsQ0FBQyxJQUFELENBQUEsR0FBQTthQUFVO0lBQVYsQ0FBdEI7SUFDWCxJQUFDLENBQUEsT0FBRCxHQUFXO0VBSkU7O0VBTWQsSUFBTyxDQUFBLENBQUE7V0FBRyxJQUFDLENBQUEsT0FBTyxDQUFDLElBQVQsQ0FBYyxHQUFkO0VBQUg7O0VBRVAsS0FBUSxDQUFDLE1BQUQsQ0FBQTtBQUNQLFFBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQTtJQUFBLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBVCxDQUFjLE1BQWQ7QUFDQTtBQUFBO0lBQUEsS0FBQSw2Q0FBQTs7TUFDQyxJQUFHLEdBQUEsS0FBTyxNQUFWO3FCQUFzQixJQUFDLENBQUEsT0FBUSxDQUFBLENBQUEsQ0FBVCxHQUFjLFFBQXBDO09BQUEsTUFBQTs2QkFBQTs7SUFERCxDQUFBOztFQUZPOztFQUtSLElBQU8sQ0FBQSxDQUFBO1dBQUcsTUFBTSxDQUFDLE1BQVAsQ0FBYyxJQUFkLEVBQWlCLElBQUksQ0FBQyxLQUFMLENBQVcsRUFBRSxDQUFDLFlBQUgsQ0FBZ0IsSUFBaEIsRUFBcUIsT0FBckIsQ0FBWCxDQUFqQjtFQUFIOztFQUNQLEtBQVEsQ0FBQSxDQUFBO1dBQUcsRUFBRSxDQUFDLGFBQUgsQ0FBaUIsSUFBakIsRUFBc0IsSUFBSSxDQUFDLFNBQUwsQ0FBZSxJQUFmLENBQXRCO0VBQUg7O0FBZlQ7O0FBaUJBLE9BQUEsR0FBVSxJQUFJOztBQUNkLE9BQU8sQ0FBQyxJQUFSLENBQUE7O0FBRUEsSUFBRyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQWIsS0FBdUIsQ0FBMUI7RUFDQyxPQUFBLEdBQVUsSUFBSSxRQURmO0NBQUEsTUFBQTtFQUdDLE9BQU8sQ0FBQyxLQUFSLENBQWMsT0FBTyxDQUFDLElBQUssQ0FBQSxDQUFBLENBQTNCLEVBSEQ7OztBQUtBLElBQUcsYUFBVyxPQUFPLENBQUMsT0FBbkIsRUFBQSxHQUFBLEtBQUg7RUFBbUMsT0FBTyxDQUFDLEdBQVIsQ0FBWSxPQUFPLENBQUMsT0FBTyxDQUFDLElBQWhCLENBQUEsQ0FBWixFQUFuQzs7O0FBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSxPQUFPLENBQUMsSUFBUixDQUFBLENBQVo7O0FBQ0EsT0FBTyxDQUFDLEtBQVIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIl8gPSByZXF1aXJlICdsb2Rhc2gnXHJcbmNoYWkgPSByZXF1aXJlICdjaGFpJ1xyXG5mcyA9IHJlcXVpcmUgJ2ZzJ1xyXG5cclxucmFuZ2UgPSBfLnJhbmdlXHJcbmFzc2VydCA9IGNoYWkuYXNzZXJ0LmRlZXBFcXVhbFxyXG5cclxuV09SRFMgPSAnd29yZHMudHh0J1xyXG5QQVRIID0gJ2RhdGEuanNvbidcclxuXHJcbmNsYXNzIEhhbmdtYW5cclxuXHRjb25zdHJ1Y3RvciA6IC0+XHJcblx0XHR3b3JkcyA9IGZzLnJlYWRGaWxlU3luYyhXT1JEUywgJ3V0ZjgnKS5zcGxpdCAnXFxyXFxuJ1xyXG5cdFx0QHNlY3JldCA9IHdvcmRzW18ucmFuZG9tIDIwMF1cclxuXHRcdEBndWVzc2VkID0gQHNlY3JldC5zcGxpdCgnJykubWFwICh3b3JkKSA9PiAnXydcclxuXHRcdEBoaXN0b3J5ID0gW11cclxuXHJcblx0c2hvdyA6IC0+IEBndWVzc2VkLmpvaW4gJyAnXHJcblxyXG5cdGd1ZXNzIDogKGxldHRlcikgLT5cclxuXHRcdEBoaXN0b3J5LnB1c2ggbGV0dGVyXHJcblx0XHRmb3IgbHRyLGkgaW4gQHNlY3JldCBcclxuXHRcdFx0aWYgbHRyID09IGxldHRlciB0aGVuIEBndWVzc2VkW2ldID0gbGV0dGVyXHJcblxyXG5cdHJlYWQgOiAtPiBPYmplY3QuYXNzaWduIEAsIEpTT04ucGFyc2UgZnMucmVhZEZpbGVTeW5jIFBBVEgsJ3V0Zi04J1xyXG5cdHdyaXRlIDogLT4gZnMud3JpdGVGaWxlU3luYyBQQVRILEpTT04uc3RyaW5naWZ5IEBcclxuXHJcbmhhbmdtYW4gPSBuZXcgSGFuZ21hblxyXG5oYW5nbWFuLnJlYWQoKVxyXG5cclxuaWYgcHJvY2Vzcy5hcmd2Lmxlbmd0aCA9PSAyXHJcblx0aGFuZ21hbiA9IG5ldyBIYW5nbWFuXHJcbmVsc2VcclxuXHRoYW5nbWFuLmd1ZXNzIHByb2Nlc3MuYXJndlsyXVxyXG5cclxuaWYgJ18nIG5vdCBpbiBoYW5nbWFuLmd1ZXNzZWQgdGhlbiBjb25zb2xlLmxvZyBoYW5nbWFuLmhpc3Rvcnkuam9pbigpXHJcbmNvbnNvbGUubG9nIGhhbmdtYW4uc2hvdygpXHJcbmhhbmdtYW4ud3JpdGUoKSJdfQ==
//# sourceURL=c:\Lab\2019\066-HangWhatever\coffee\sketch.coffee