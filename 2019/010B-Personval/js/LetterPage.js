"use strict";

// Generated by CoffeeScript 2.3.2
var LetterButton, LetterPage;

LetterPage = class LetterPage extends Page {
  render() {
    return this.bg(0);
  }

  makeLetters(rlk, button, partikod, personer) {
    var N, h, i, key, letters, n, ref, results, title, w, words, x, y;
    N = 16;
    h = this.h / (N + 1);
    w = this.w / 2;
    this.selected = button;
    this.buttons = [];
    i = 0;
    words = function () {
      var j, len, results;
      results = [];
      for (j = 0, len = personer.length; j < len; j++) {
        key = personer[j];
        results.push(dbPersoner[rlk][key][PERSON_NAMN]);
      }
      return results;
    }();
    print(gruppera(words, N));
    ref = gruppera(words, N);
    results = [];
    for (letters in ref) {
      n = ref[letters];
      x = this.x + w * Math.floor(i / N);
      y = this.y + h * (1 + i % N);
      title = letters.length === 1 ? letters : `${letters[0]}-${_.last(letters)}`;
      ((letters, title) => {
        return this.addButton(new LetterButton(title, x, y, w - 2, h - 2, n, function () {
          this.page.selected = this;
          return pages.personer.clickLetterButton(rlk, this, partikod, letters, personer);
        }));
      })(letters, title);
      results.push(i++);
    }
    return results;
  }

};

LetterButton = class LetterButton extends Button {
  constructor(title, x, y, w, h, antal, click) {
    super(title, x, y, w, h, click);
    this.antal = antal;
    this.pageNo = -1;
    this.pages = 1 + Math.floor(this.antal / PERSONS_PER_PAGE);
    if (this.antal % PERSONS_PER_PAGE === 0) {
      this.pages--;
    }
  }

  draw() {
    fc(0.5);
    rect(this.x, this.y, this.w, this.h);
    textSize(0.8 * this.ts);
    textAlign(CENTER, CENTER);
    if (this.page.selected === this) {
      fc(1, 1, 0);
    } else {
      fc(1);
    }
    text(this.title, this.x + this.w / 2, this.y + this.h / 2);
    push();
    this.pageIndicator();
    return pop();
  }

  pageIndicator() {
    var dx, i, j, len, r, ref, results;
    if (this.pages <= 1) {
      return;
    }
    r = 0.003 * height;
    dx = (this.w - 2 * r * this.pages) / (this.pages + 1);
    ref = range(this.pages);
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      if (i === this.pageNo && this.page.selected === this) {
        fc(1);
      } else {
        fc(0);
      }
      results.push(circle(this.x - r + (i + 1) * (dx + 2 * r), this.y + 0.85 * this.h, r));
    }
    return results;
  }

};
//# sourceMappingURL=LetterPage.js.map
