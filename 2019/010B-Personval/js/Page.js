"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Generated by CoffeeScript 2.3.2
var Page;

Page = function () {
  function Page(x, y, w, h) {
    var cols = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;

    _classCallCheck(this, Page);

    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.cols = cols;
    this.selected = null; // anger vilken knapp man klickat p√•
    this.buttons = [];
    this.active = true;
  }

  _createClass(Page, [{
    key: "clear",
    value: function clear() {
      this.selected = null;
      return this.buttons = [];
    }
  }, {
    key: "addButton",
    value: function addButton(button) {
      button.page = this;
      return this.buttons.push(button);
    }
  }, {
    key: "render",
    value: function render() {}
  }, {
    key: "draw",
    value: function draw() {
      var button, i, len, ref, results;
      if (this.active) {
        this.render();
        ref = this.buttons;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          button = ref[i];
          results.push(button.draw());
        }
        return results;
      }
    }
  }, {
    key: "mousePressed",
    value: function mousePressed() {
      var button, i, len, ref;
      if (this.active) {
        ref = this.buttons;
        for (i = 0, len = ref.length; i < len; i++) {
          button = ref[i];
          if (button.inside(mouseX, mouseY)) {
            button.click();
            return true;
          }
        }
      }
      return false;
    }
  }]);

  return Page;
}();
//# sourceMappingURL=Page.js.map
