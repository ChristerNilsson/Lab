"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Generated by CoffeeScript 2.3.2
var PartiPage;

PartiPage = function (_Page) {
  _inherits(PartiPage, _Page);

  function PartiPage() {
    _classCallCheck(this, PartiPage);

    return _possibleConstructorReturn(this, (PartiPage.__proto__ || Object.getPrototypeOf(PartiPage)).apply(this, arguments));
  }

  _createClass(PartiPage, [{
    key: "render",
    value: function render() {
      var namn, rkl, s;
      if (this.selected !== null) {
        push();
        textAlign(LEFT, CENTER);
        textSize(0.4 * pages.personer.h / 17);
        rkl = pages.typ.selected.typ;
        namn = dbPartier[rkl][this.selected.partikod][1];
        s = namn + " (" + pages.personer.buttons.length + " av " + _.size(pages.personer.personer) + ")";
        text(s, pages.personer.x, pages.personer.y + pages.personer.h / 34);
        return pop();
      }
    }
  }, {
    key: "select",
    value: function select(rkl, partier) {
      var _this2 = this;

      var N, h, i, j, len, partikod, partikoder, results, w, x, y;
      N = 16;
      w = this.w / 2;
      h = this.h / (N + 1);
      partikoder = _.keys(partier);
      partikoder.sort(function (a, b) {
        return _.size(partier[b]) - _.size(partier[a]);
      });
      this.buttons = [];
      pages.partier.clear();
      pages.letters.clear();
      pages.personer.clear();
      results = [];
      for (i = j = 0, len = partikoder.length; j < len; i = ++j) {
        partikod = partikoder[i];
        x = this.x + w * Math.floor(i / N);
        y = this.y + h * (1 + i % N);
        results.push(function (partikod) {
          return _this2.addButton(new PartiButton(rkl, partikod, x, y, w - 2, h - 2, function () {
            this.page.selected = this;
            if (PERSONS_PER_PAGE < _.size(partier[partikod])) {
              pages.letters.makeLetters(rkl, this, partikod, partier[partikod]);
              pages.personer.buttons = [];
            } else {
              pages.letters.buttons = [];
              pages.personer.makePersons(rkl, this, partikod, partier[partikod]);
            }
            pages.typ.clickPartiButton(this);
            return pages.personer.personer = partier[partikod];
          }));
        }(partikod));
      }
      return results;
    }
  }]);

  return PartiPage;
}(Page);
//# sourceMappingURL=PartiPage.js.map
