'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Generated by CoffeeScript 2.3.2
var PartiButton, PartiPage;

PartiPage = function () {
  var N;

  var PartiPage = function (_Page) {
    _inherits(PartiPage, _Page);

    function PartiPage() {
      _classCallCheck(this, PartiPage);

      return _possibleConstructorReturn(this, (PartiPage.__proto__ || Object.getPrototypeOf(PartiPage)).apply(this, arguments));
    }

    _createClass(PartiPage, [{
      key: 'render',
      value: function render() {
        return this.bg(0);
      }
    }, {
      key: 'select',
      value: function select(rlk, partier) {
        var _this2 = this;

        var h, i, j, len, partikod, partikoder, results, w, x, y;
        w = this.w / 2;
        h = this.h / (N + 1);
        partikoder = _.keys(partier);
        partikoder.sort(function (a, b) {
          return _.size(partier[b]) - _.size(partier[a]);
        });
        this.buttons = [];
        pages.partier.clear();
        pages.letters.clear();
        pages.personer.clear();
        results = [];
        for (i = j = 0, len = partikoder.length; j < len; i = ++j) {
          partikod = partikoder[i];
          x = this.x + w * Math.floor(i / N);
          y = this.y + h * (1 + i % N);
          print(partikod);
          results.push(function (partikod) {
            return _this2.addButton(new PartiButton(rlk, partikod, x, y, w - 2, h - 2, function () {
              this.page.selected = this;
              if (PERSONS_PER_PAGE < _.size(partier[partikod])) {
                pages.letters.makeLetters(rlk, this, partikod, partier[partikod]);
                pages.personer.buttons = [];
              } else {
                pages.letters.buttons = [];
                pages.personer.makePersons(rlk, this, partikod, partier[partikod]);
              }
              pages.rlk.clickPartiButton(this);
              return pages.personer.personer = partier[partikod];
            }));
          }(partikod));
        }
        return results;
      }
    }]);

    return PartiPage;
  }(Page);

  ;

  N = 16;

  return PartiPage;
}.call(undefined);

PartiButton = function (_Button) {
  _inherits(PartiButton, _Button);

  function PartiButton(rlk1, partikod1, x, y, w, h) {
    var click = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : function () {};

    _classCallCheck(this, PartiButton);

    var _this3 = _possibleConstructorReturn(this, (PartiButton.__proto__ || Object.getPrototypeOf(PartiButton)).call(this, '', x, y, w, h, click));

    _this3.rlk = rlk1;
    _this3.partikod = partikod1;
    return _this3;
  }

  _createClass(PartiButton, [{
    key: 'draw',
    value: function draw() {
      var partinamn;
      fc(0.5);
      rect(this.x, this.y, this.w, this.h);
      textSize(this.ts);
      textAlign(CENTER, CENTER);
      if (this.page.selected === this) {
        fc(1, 1, 0);
      } else {
        fc(1);
      }
      partinamn = dbPartier[this.rlk][this.partikod][PARTI_FÃ–RKORTNING];
      if (partinamn === '') {
        partinamn = dbPartier[this.rlk][this.partikod][PARTI_BETECKNING];
      }
      return text(partinamn, this.x + this.w / 2, this.y + this.h / 2);
    }
  }]);

  return PartiButton;
}(Button);
//# sourceMappingURL=PartiPage.js.map
