// Generated by CoffeeScript 2.3.2
var MARKERS, MAX, Marker, Tile, createAllTiles, createPlayer0, createPlayer1, dice, draw, helper, mousePressed, p0, p1, player, setup, tiles;

MARKERS = 7;

MAX = {
  P: 1, // Promotion
  R: 1, // Replay
  I: 1, // Promoted Protection
  S: 4, // Stack 4 
  M: 4, // Mixed 4
  A: 1 // Attack
};

p0 = []; // Path of player 0

p1 = []; // Path of player 1

tiles = []; // Twenty tiles

player = 0; // 0 or 1

dice = 1; // 0..4 Probability [0,1,2,3,4] == [1,4,6,4,1]

Marker = class Marker {
  constructor(player1, promoted = false) { // promoted marker is indicated by five dots	
    this.player = player1;
    this.promoted = promoted;
  }

};

Tile = class Tile {
  constructor(x1, y1, markers = [], letter1 = ' ') {
    this.x = x1;
    this.y = y1;
    this.markers = markers;
    this.letter = letter1;
  }

  inside(mx, my) {
    var x, y;
    x = width / 2 - 100 + 100 * this.x;
    y = 200 + 100 * this.y;
    return (x - 50 < mx && mx < x + 50) && (y - 50 < my && my < y + 50) && this.markers.length !== 0;
  }

  click(target) {
    if (this.legal(target)) {
      return this.move(target);
    }
  }

  legal(target) {
    if (target.markers.length === 4 && MAX[target.letter] === 4) {
      return false;
    }
    return true;
  }

  move(target) {
    var enemy, marker;
    if (MAX[target.letter] === 1) {
      if (target.markers.length === 1) {
        if (target.markers[0].player === this.player) {
          return false; // throw enemy marker
        } else {
          enemy = target.markers.pop();
          enemy.promoted = false;
          tiles[20 + enemy.player].markers.push(enemy);
        }
      }
    }
    marker = this.markers.pop();
    target.markers.push(marker);
    if (target.letter !== 'R') {
      return player = 1 - player;
    }
  }

  draw() {
    var i, j, len, marker, ref, results, x, y;
    if (this.letter === ' ') {
      fc(0, 0, 0);
    }
    if (this.letter === 'P') {
      fc(1, 0, 0);
    }
    if (this.letter === 'R') {
      fc(1, 0, 1);
    }
    if (this.letter === 'I') {
      fc(0, 1, 0);
    }
    if (this.letter === 'S') {
      fc(1, 1, 0);
    }
    if (this.letter === 'M') {
      fc(0, 1, 1);
    }
    if (this.letter === 'A') {
      fc(1, 1, 1);
    }
    x = width / 2 - 100 + 100 * this.x;
    y = 200 + 100 * this.y;
    rect(x, y, 90, 90);
    fc(0);
    text(this.letter, x, y + 9);
    ref = this.markers;
    results = [];
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      marker = ref[i];
      if (marker.player === 0) {
        fc(1, 0, 0, 0.75);
      } else {
        fc(0.5, 0.5, 0.5, 0.75);
      }
      circle(x + 10 * (i % 2), -30 + y + 7 * (7 - i), 25);
      if (marker.promoted) {
        fc(1, 1, 0);
        results.push(circle(-20 + x + 7 * i, -20 + y + 7 * i, 10));
      } else {
        results.push(void 0);
      }
    }
    return results;
  }

};

createAllTiles = function() {
  var i, j, k, l, len, len1, len2, ref, ref1, ref2;
  ref = range(4);
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    tiles.push(new Tile(0, 3 - i)); // 0 1 2 3
  }
  ref1 = range(6);
  for (k = 0, len1 = ref1.length; k < len1; k++) {
    i = ref1[k];
    tiles.push(new Tile(1, i)); // 4 5 6 7 8 9
  }
  tiles.push(new Tile(1, 6)); // 10
  tiles.push(new Tile(0, 6)); // 11
  tiles.push(new Tile(0, 7)); // 12
  tiles.push(new Tile(1, 7)); // 13
  tiles.push(new Tile(2, 7)); // 14
  tiles.push(new Tile(2, 6)); // 15
  ref2 = range(4);
  for (l = 0, len2 = ref2.length; l < len2; l++) {
    i = ref2[l];
    tiles.push(new Tile(2, 3 - i)); // 16 17 18 19
  }
  tiles.push(new Tile(0, 4)); // 20 IN 0
  tiles.push(new Tile(2, 4)); // 21 IN 1
  tiles.push(new Tile(0, -1)); // 22 OUT 0
  return tiles.push(new Tile(2, -1)); // 23 OUT 1
};

createPlayer0 = function() {
  var i, j, len, ref, results;
  ref = [20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 10, 9, 8, 7, 6, 5, 4, 22];
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    results.push(p0.push(tiles[i]));
  }
  return results;
};

createPlayer1 = function() {
  var i, j, len, ref, results;
  ref = [21, 16, 17, 18, 19, 4, 5, 6, 7, 8, 9, 10, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 23];
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    results.push(p1.push(tiles[i]));
  }
  return results;
};

setup = function() {
  var i, j, k, len, len1, letter, ref, ref1, results;
  createCanvas(windowWidth, windowHeight);
  rectMode(CENTER);
  textAlign(CENTER, CENTER);
  textSize(100);
  createAllTiles();
  createPlayer0();
  createPlayer1();
  ref = 'SASRIAMRAMSRPAPRSASR';
  for (i = j = 0, len = ref.length; j < len; i = ++j) {
    letter = ref[i];
    tiles[i].letter = letter;
  }
  ref1 = range(MARKERS);
  results = [];
  for (k = 0, len1 = ref1.length; k < len1; k++) {
    i = ref1[k];
    tiles[20].markers.push(new Marker(0));
    results.push(tiles[21].markers.push(new Marker(1)));
  }
  return results;
};

draw = function() {
  var j, len, results, tile;
  bg(0);
  results = [];
  for (j = 0, len = tiles.length; j < len; j++) {
    tile = tiles[j];
    results.push(tile.draw());
  }
  return results;
};

helper = function(player) { // a,b anger index till player-vektorn
  var a, b, i, j, len, marker, p, tileA, tileB;
  a = null;
  for (i = j = 0, len = player.length; j < len; i = ++j) {
    p = player[i];
    if (p.inside(mouseX, mouseY)) {
      a = i;
      if (_.last(p.markers).promoted) {
        if (a >= 12) {
          break;
        }
      } else {
        break;
      }
    }
  }
  if (a === null) {
    return;
  }
  b = a + dice;
  tileA = player[a];
  if (tileA.markers.length === 0) {
    return;
  }
  if (a === 0) {
    tileB = player[b];
    return tileA.click(tileB);
  } else {
    marker = _.last(tileA.markers);
    tileB = player[b];
    if (a >= 12) {
      marker.promoted = true;
    }
    if (b < player.length) {
      return tileA.click(tileB);
    }
  }
};

mousePressed = function() {
  if (player === 0) {
    return helper(p0);
  } else {
    return helper(p1);
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\Lab\2019\057-RoyalGameOfUr\coffee\sketch.coffee