{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": ";;;AAAA,IAAA,OAAA,GAAA,QAAA;;AAAA,QAAQ;;AACR,IAAI,AADJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,SAAS,gBAAC,AAAD;SAAS,AAAI,IAAA,IAAI,OAAO,AAAG,IAAC,AAAX,AAAJ,AAAb;;;AACT,QAAQ,iBACP;MAAA,GAAA,MAAA,GAAA,OAAA,GAAA,GAAA,MAAA,KAAA,OAAA,MAAA,KAAA,KAAA,MAAA,OAAA;AAAA,UAAQ,AAAI,KAAC,AAAL;AACR,UAAQ,AACR;;AAAA,OAAA,kCAAA;;AACC,YAAQ,AAAI,KAAC,AAAL,MAAW,AAAX,GAAc,IAAE,AAAhB;AACR,WAAO,AAAK,KAAA,IAAE,AAAF;AACZ,QAAG,SAAS,AAAZ;AAAuB,AAAM,YAAA,AAAM,OAAC,AAAb,KAAkB,AAAlB,AAAvB;AAAA,WAAA;AAAmD,AAAM,YAAA,AAAN,SAAe,CAAC,AAAD,AAAlE;AAHD;AAFA;;AAQA,OAAA,SAAA;AACC,QAAG,AAAM,MAAA,AAAM,OAAC,AAAb,WAAqB,AAAxB,GAA+B;AAA/B;;AACA,QAAI,AAAC,EAAC,AAAF,KAAO,AAAM,MAAA,AAAb;AACJ,QAAG,AAAC,EAAC,AAAF,WAAU,AAAb;AAAoB,AAAM,YAAA,AAAN,SAAa,AAAjC;AAHD;;AAKA,QAAM,AAAN;AAEA,SAAO,AAAC,EAAC,AAAF,KAAO,AAAP;AACP,UAAQ,IAAI,OAAO,AAAI,KAAC,AAAZ,AAAJ;AACR,UAAQ,AAAK,KAAA;AACb,QAAM,CAAC,AAAD;AACN,OAAS,oFAAT;AACC,QAAG,EAAA,SAAa,AAAb,AAAH,QAA2B;AAA3B;;AACA,WAAO,OAAO,AAAM,MAAA,AAAb;AACP,AAAG,QAAC,AAAJ,KAAS,AAAT;AACA,YAAQ,AAAK,MAAC,AAAN,MAAY,AAAZ,GAAc,AAAd,KAAmB,AAJ5B;;AAKA,QAAM,AAAG,IAAC,AAAJ,KAAS,AAAT,AAAN;SACA,MAAM,AAAI,KAAC,AAAL,QAAW,AAAjB,AA1BO",
  "sourcesContent": [
    "CHARS = 200000\r\nN = 4\r\n\r\n# choose = (hash) ->\r\n# \tkeys = _.keys hash\r\n# \tvalues = _.values hash\r\n# \tif keys.length == 1 then return keys[0]\r\n# \tsum = 0\r\n# \tsum += value for value in values\r\n\t\t\r\n# \tr = int random sum\r\n# \tsum = 0\r\n# \tfor value,i in values \r\n# \t\tsum += value\r\n# \t\tif r < sum then return keys[i]\r\n# \t_.last keys\r\n# setup = ->\r\n# #\tprint choose {adam:1,bertil:1,cesar:10}\r\n\r\n# \tstart = Date.now()\r\n# \tmodel = {}\r\n# \tfor i in range data.length - N\r\n# \t\tstate = data.slice i, i+N \r\n# \t\tnext = data[i+N]\r\n# \t\tif model[state] == undefined\r\n# \t\t\tmodel[state] = {}\r\n# \t\tif model[state][next] == undefined\t\r\n# \t\t\tmodel[state][next] = 0\r\n# \t\tmodel[state][next]++\r\n\r\n# \tkeys = _.keys model\r\n# \tindex = int random keys.length\r\n# \tstate = keys[index]\r\n# \tout = [state]\r\n# \tfor i in [0..CHARS]\r\n# \t\tif state not of model then break\r\n# \t\tchar = choose model[state]\r\n# \t\tout.push char\r\n# \t\tstate = state.slice(1,N) + char\r\n# \tprint out.join ''\r\n# \tprint Date.now()-start \r\n\r\nchoose = (arr) -> arr[int random arr.length]\r\nsetup = ->\r\n\tstart = Date.now()\r\n\tmodel = {}\r\n\tfor i in range data.length - N\r\n\t\tstate = data.slice i, i+N \r\n\t\tnext = data[i+N]\r\n\t\tif state of model then model[state].push next else model[state] = [next]\r\n\r\n\t# reducera listor med lika element\r\n\tfor state of model\r\n\t\tif model[state].length==1 then continue\r\n\t\ta = _.uniq model[state]\r\n\t\tif a.length==1 then model[state]=a\r\n\r\n\tprint model\r\n\r\n\tkeys = _.keys model\r\n\tindex = int random keys.length\r\n\tstate = keys[index]\r\n\tout = [state]\r\n\tfor i in [0..CHARS]\r\n\t\tif state not of model then break\r\n\t\tchar = choose model[state]\r\n\t\tout.push char\r\n\t\tstate = state.slice(1,N) + char\r\n\tprint out.join ''\r\n\tprint Date.now()-start "
  ]
}