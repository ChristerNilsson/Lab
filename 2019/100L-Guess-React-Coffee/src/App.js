// Generated by CoffeeScript 2.4.1

import React from 'react';

import ReactDOM from 'react-dom';

import Game from './game.js';

import _ from 'lodash';

var App, crap, div, input, stack,
  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };
stack = [[]];

crap = function(type, props = {}, arr = [], f = () => {}) {
  var children;
  stack.push([]);
  f();
  children = stack.pop();
  _.last(stack).push(React.createElement(type, props, ...arr, ...children));
  return _.last(stack);
};

div = (props, arr, f) => {
  return crap('div', props, arr, f);
};

input = (props, arr, f) => {
  return crap('input', props, arr, f);
};

App = class App extends React.Component {
  constructor(props) {
    super(props);
    this.render = this.render.bind(this);
    this.handleKeyUp = this.handleKeyUp.bind(this);
    this.state = {
      game: new Game(2)
    };
  }

  render() {
    boundMethodCheck(this, App);
    stack = [[]];
    return div({}, [], () => {
      div({}, [this.state.game.low, '-', this.state.game.high]);
      return input({
        onKeyUp: this.handleKeyUp
      });
    });
  }

  handleKeyUp(evt) {
    boundMethodCheck(this, App);
    if (evt.key !== 'Enter') {
      return;
    }
    if (evt.target.value === '') {
      this.state.game.init(2);
    } else {
      this.state.game.action(evt.target.value);
    }
    evt.target.value = '';
    return this.setState((state) => {
      return {
        game: state.game
      };
    });
  }

};

ReactDOM.render(<App />, document.getElementById("root"));

export default App;

