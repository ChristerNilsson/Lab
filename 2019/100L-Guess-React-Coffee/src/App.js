// Generated by CoffeeScript 2.4.1
// import React from 'react'
// import ReactDOM from 'react-dom'
// import Game from './game.js'
var crap, createElement, div, input, render, stack;

stack = [];

createElement = function(type, props, children) {
  return JSON.stringify({type, props, children});
};

crap = function(type, props = {}, children = [], f = null) {
  var child;
  stack.push(type);
  if (f) {
    child = f();
    if (child) {
      parent.push(child);
    }
  }
  stack.pop();
  return createElement(type, props, children);
};

div = (props, children, f) => {
  return crap('div', props, children, f);
};

input = (props, children, f) => {
  return crap('input', props, children, f);
};

render = () => {
  return div({
    a: 11
  }, [12], () => {
    div();
    return input();
  });
};

render();

// class App extends React.Component 
// 	constructor : (props={}) ->
// 		super props
// 		this.state = {game: new Game 2 }
// 		console.log this.state
// 		this.handleKeyUp = this.handleKeyUp.bind this

// 	render : =>
// 		x = div {}, [], =>
// 			div {}, [1,'-',3], =>
// 			input {onKeyUp : this.handleKeyUp}, [], =>
// 		console.log x
// 		x

// 	handleKeyUp : (evt) =>
// 		if evt.key != 'Enter' then return
// 		if evt.target.value == '' then this.state.game.init 2
// 		else this.state.game.action evt.target.value
// 		evt.target.value = ''
// 		this.setState((state) => {game: state.game})

// ReactDOM.render(<App />, document.getElementById("root"))

// export default App

//# sourceMappingURL=App.js.map
