// Generated by CoffeeScript 2.4.1
var App, Game, React, ReactDOM, div, input,
  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

React = require('react');

ReactDOM = require('react-dom');

({div, input} = require('react-dom-factories'));

Game = require('./game.js');

App = class App extends React.Component {
  constructor(props) {
    super(props);
    // render : =>
    // 	div style: {fontSize: 100+'px'} ,
    // 		div {}, @state.game.low, '-', @state.game.high
    // 		div {}, "#{@state.game.low}-#{@state.game.high}"
    // 		input 
    // 			style: 
    // 				fontSize: 100+'px'
    // 			onKeyUp: @handleKeyUp
    this.render = this.render.bind(this);
    // render : =>
    // 	<div style={fontSize:100+'px'}> 
    // 		<div>{@state.game.low}-{@state.game.high}</div>
    // 		<input style={fontSize:100+'px'} onKeyUp={@handleKeyUp}></input>
    // 	</div>
    this.handleKeyUp = this.handleKeyUp.bind(this);
    this.state = {
      game: new Game(2)
    };
  }

  render() {
    boundMethodCheck(this, App);
    return div({
      style: {
        fontSize: 100 + 'px'
      }
    }, div({}, this.state.game.low, '-', this.state.game.high), input({
      style: {
        fontSize: 100 + 'px'
      },
      onKeyUp: this.handleKeyUp
    }));
  }

  handleKeyUp(evt) {
    boundMethodCheck(this, App);
    if (evt.key !== 'Enter') {
      return;
    }
    if (evt.target.value === '') {
      this.state.game.init(2);
    } else {
      this.state.game.action(evt.target.value);
    }
    evt.target.value = '';
    return this.setState((state) => {
      return {
        game: state.game
      };
    });
  }

};

ReactDOM.render(<App />, document.getElementById("root"));

export default App;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXEFwcC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxLQUFBLEVBQUEsUUFBQSxFQUFBLEdBQUEsRUFBQSxLQUFBO0VBQUE7O0FBQUEsS0FBQSxHQUFRLE9BQUEsQ0FBUSxPQUFSOztBQUNSLFFBQUEsR0FBVyxPQUFBLENBQVEsV0FBUjs7QUFDWCxDQUFBLENBQUMsR0FBRCxFQUFLLEtBQUwsQ0FBQSxHQUFjLE9BQUEsQ0FBUSxxQkFBUixDQUFkOztBQUNBLElBQUEsR0FBTyxPQUFBLENBQVEsV0FBUjs7QUFFRCxNQUFOLE1BQUEsSUFBQSxRQUFrQixLQUFLLENBQUMsVUFBeEI7RUFDQyxXQUFjLENBQUMsS0FBRCxDQUFBOzs7Ozs7Ozs7O1FBY2QsQ0FBQSxhQUFBLENBQUE7Ozs7OztRQVdBLENBQUEsa0JBQUEsQ0FBQTtJQXZCQyxJQUFDLENBQUEsS0FBRCxHQUNDO01BQUEsSUFBQSxFQUFNLElBQUksSUFBSixDQUFTLENBQVQ7SUFBTjtFQUhZOztFQWNkLE1BQVMsQ0FBQSxDQUFBOzJCQWZKO1dBZ0JKLEdBQUEsQ0FBSTtNQUFBLEtBQUEsRUFBTztRQUFDLFFBQUEsRUFBVSxHQUFBLEdBQUk7TUFBZjtJQUFQLENBQUosRUFDQyxHQUFBLENBQUksQ0FBQSxDQUFKLEVBQVEsSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBcEIsRUFBeUIsR0FBekIsRUFBOEIsSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBMUMsQ0FERCxFQUVDLEtBQUEsQ0FBTTtNQUFBLEtBQUEsRUFBTztRQUFDLFFBQUEsRUFBVSxHQUFBLEdBQUk7TUFBZixDQUFQO01BQTZCLE9BQUEsRUFBUyxJQUFDLENBQUE7SUFBdkMsQ0FBTixDQUZEO0VBRFE7O0VBV1QsV0FBYyxDQUFDLEdBQUQsQ0FBQTsyQkExQlQ7SUEyQkosSUFBRyxHQUFHLENBQUMsR0FBSixLQUFXLE9BQWQ7QUFBMkIsYUFBM0I7O0lBQ0EsSUFBRyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQVgsS0FBb0IsRUFBdkI7TUFBK0IsSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBWixDQUFpQixDQUFqQixFQUEvQjtLQUFBLE1BQUE7TUFDSyxJQUFDLENBQUEsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFaLENBQW1CLEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBOUIsRUFETDs7SUFFQSxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQVgsR0FBbUI7V0FDbkIsSUFBQyxDQUFBLFFBQUQsQ0FBVSxDQUFDLEtBQUQsQ0FBQSxHQUFBO2FBQVk7UUFBQyxJQUFBLEVBQU0sS0FBSyxDQUFDO01BQWI7SUFBWixDQUFWO0VBTGE7O0FBMUJmOztBQWlDQSxRQUFRLENBQUMsTUFBVCxDQUFpQixDQUFBLEdBQUEsR0FBakIsRUFBd0IsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsTUFBeEIsQ0FBeEI7O0FBRUEsT0FBQSxRQUFlIiwic291cmNlc0NvbnRlbnQiOlsiUmVhY3QgPSByZXF1aXJlICdyZWFjdCdcblJlYWN0RE9NID0gcmVxdWlyZSAncmVhY3QtZG9tJ1xue2RpdixpbnB1dH0gPSByZXF1aXJlICdyZWFjdC1kb20tZmFjdG9yaWVzJ1xuR2FtZSA9IHJlcXVpcmUgJy4vZ2FtZS5qcydcblxuY2xhc3MgQXBwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IFxuXHRjb25zdHJ1Y3RvciA6IChwcm9wcykgLT5cblx0XHRzdXBlciBwcm9wc1xuXHRcdEBzdGF0ZSA9XG5cdFx0XHRnYW1lOiBuZXcgR2FtZSAyXG5cblx0IyByZW5kZXIgOiA9PlxuXHQjIFx0ZGl2IHN0eWxlOiB7Zm9udFNpemU6IDEwMCsncHgnfSAsXG5cdCMgXHRcdGRpdiB7fSwgQHN0YXRlLmdhbWUubG93LCAnLScsIEBzdGF0ZS5nYW1lLmhpZ2hcblx0IyBcdFx0ZGl2IHt9LCBcIiN7QHN0YXRlLmdhbWUubG93fS0je0BzdGF0ZS5nYW1lLmhpZ2h9XCJcblx0IyBcdFx0aW5wdXQgXG5cdCMgXHRcdFx0c3R5bGU6IFxuXHQjIFx0XHRcdFx0Zm9udFNpemU6IDEwMCsncHgnXG5cdCMgXHRcdFx0b25LZXlVcDogQGhhbmRsZUtleVVwXG5cblx0cmVuZGVyIDogPT5cblx0XHRkaXYgc3R5bGU6IHtmb250U2l6ZTogMTAwKydweCd9ICxcblx0XHRcdGRpdiB7fSwgQHN0YXRlLmdhbWUubG93LCAnLScsIEBzdGF0ZS5nYW1lLmhpZ2hcblx0XHRcdGlucHV0IHN0eWxlOiB7Zm9udFNpemU6IDEwMCsncHgnfSwgb25LZXlVcDogQGhhbmRsZUtleVVwXG5cblx0IyByZW5kZXIgOiA9PlxuXHQjIFx0PGRpdiBzdHlsZT17Zm9udFNpemU6MTAwKydweCd9PiBcblx0IyBcdFx0PGRpdj57QHN0YXRlLmdhbWUubG93fS17QHN0YXRlLmdhbWUuaGlnaH08L2Rpdj5cblx0IyBcdFx0PGlucHV0IHN0eWxlPXtmb250U2l6ZToxMDArJ3B4J30gb25LZXlVcD17QGhhbmRsZUtleVVwfT48L2lucHV0PlxuXHQjIFx0PC9kaXY+XG5cblx0aGFuZGxlS2V5VXAgOiAoZXZ0KSA9PlxuXHRcdGlmIGV2dC5rZXkgIT0gJ0VudGVyJyB0aGVuIHJldHVyblxuXHRcdGlmIGV2dC50YXJnZXQudmFsdWUgPT0gJycgdGhlbiBAc3RhdGUuZ2FtZS5pbml0IDJcblx0XHRlbHNlIEBzdGF0ZS5nYW1lLmFjdGlvbiBldnQudGFyZ2V0LnZhbHVlXG5cdFx0ZXZ0LnRhcmdldC52YWx1ZSA9ICcnXG5cdFx0QHNldFN0YXRlKChzdGF0ZSkgPT4gKHtnYW1lOiBzdGF0ZS5nYW1lfSkpXG5cdFxuUmVhY3RET00ucmVuZGVyKDxBcHAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb290XCIpKVxuXG5leHBvcnQgZGVmYXVsdCBBcHBcbiJdfQ==
//# sourceURL=c:\Lab\2019\100M-Guess-React-Coffee\coffee\App.coffee