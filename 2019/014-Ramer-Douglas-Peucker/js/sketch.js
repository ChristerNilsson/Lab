// Generated by CoffeeScript 2.3.2
var current, draw, fastKey, info, keyPressed, keyReleased, setup, show;

current = 0;

fastKey = 0;

setup = function() {
  var newpoints;
  createCanvas(windowWidth - 20, windowHeight - 20);
  newpoints = simplify(points, 0.39);
  return textSize(30);
};

show = function(p) {
  return point(2.5 * (300 + p.x), 2.5 * (200 + p.y));
};

info = function(title, x, y, r, g, b, sw) {
  noStroke();
  fill(255);
  text(title, x + 20, y);
  stroke(r, g, b);
  strokeWeight(sw);
  return point(x, y - 10);
};

draw = function() {
  var i, j, k, l, len, len1, len2, len3, level, m, p, pi, qi, ref, ref1, ri;
  background(0);
  noFill();
  [pi, qi, ri, level] = chrono[current];
  info('current end points', 300, 800, 255, 0, 0, 10);
  show(points[pi]);
  show(points[ri]);
  info('most distant point', 300, 900, 255, 255, 0, 10);
  show(points[qi]);
  info('found points', 300, 950, 0, 255, 0, 7);
  ref = range(current);
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    [pi, qi, ri, level] = chrono[i];
    show(points[qi]);
  }
  info(`simplified ${chrono.length} points`, 300, 1000, 0, 255, 0, 3);
  for (k = 0, len1 = chrono.length; k < len1; k++) {
    [pi, qi, ri, level] = chrono[k];
    show(points[qi]);
  }
  info(`original ${points.length} points`, 300, 750, 255, 255, 255, 1);
  for (l = 0, len2 = points.length; l < len2; l++) {
    p = points[l];
    show(p);
  }
  info('current line', 300, 850, 255, 0, 0, 1);
  [pi, qi, ri, level] = chrono[current];
  ref1 = range(pi, ri);
  for (m = 0, len3 = ref1.length; m < len3; m++) {
    i = ref1[m];
    show(points[i]);
  }
  noStroke();
  text('Ramer-Douglas-Peucker', 50, 100);
  text(`${current} current`, 1400 - 7, 700);
  text('Up = Fast Forward', 1400, 800);
  text('Left = Prev', 1300, 850);
  text('Right = Next', 1500, 850);
  text('Down = Fast Backward', 1400, 900);
  text(`${chrono[current][3]} recursion level`, 1400 - 7, 1000);
  if (fastKey === DOWN_ARROW) {
    current--;
  }
  if (fastKey === UP_ARROW) {
    current++;
  }
  return current = constrain(current, 0, chrono.length - 1);
};

keyPressed = function() {
  if (keyCode === RIGHT_ARROW) {
    current++;
  }
  if (keyCode === LEFT_ARROW) {
    current--;
  }
  current = constrain(current, 0, chrono.length - 1);
  return fastKey = keyCode;
};

keyReleased = function() {
  return fastKey = 0;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsT0FBQSxFQUFBLElBQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLFVBQUEsRUFBQSxXQUFBLEVBQUEsS0FBQSxFQUFBOztBQUFBLE9BQUEsR0FBUTs7QUFDUixPQUFBLEdBQVE7O0FBRVIsS0FBQSxHQUFRLFFBQUEsQ0FBQSxDQUFBO0FBQ1AsTUFBQTtFQUFBLFlBQUEsQ0FBYSxXQUFBLEdBQVksRUFBekIsRUFBNkIsWUFBQSxHQUFhLEVBQTFDO0VBQ0EsU0FBQSxHQUFZLFFBQUEsQ0FBUyxNQUFULEVBQWdCLElBQWhCO1NBQ1osUUFBQSxDQUFTLEVBQVQ7QUFITzs7QUFLUixJQUFBLEdBQU8sUUFBQSxDQUFDLENBQUQsQ0FBQTtTQUFPLEtBQUEsQ0FBTSxHQUFBLEdBQUksQ0FBQyxHQUFBLEdBQUksQ0FBQyxDQUFDLENBQVAsQ0FBVixFQUFvQixHQUFBLEdBQUksQ0FBQyxHQUFBLEdBQUksQ0FBQyxDQUFDLENBQVAsQ0FBeEI7QUFBUDs7QUFFUCxJQUFBLEdBQU8sUUFBQSxDQUFDLEtBQUQsRUFBTyxDQUFQLEVBQVMsQ0FBVCxFQUFXLENBQVgsRUFBYSxDQUFiLEVBQWUsQ0FBZixFQUFpQixFQUFqQixDQUFBO0VBQ04sUUFBQSxDQUFBO0VBQ0EsSUFBQSxDQUFLLEdBQUw7RUFDQSxJQUFBLENBQUssS0FBTCxFQUFXLENBQUEsR0FBRSxFQUFiLEVBQWdCLENBQWhCO0VBQ0EsTUFBQSxDQUFPLENBQVAsRUFBUyxDQUFULEVBQVcsQ0FBWDtFQUNBLFlBQUEsQ0FBYSxFQUFiO1NBQ0EsS0FBQSxDQUFNLENBQU4sRUFBUSxDQUFBLEdBQUUsRUFBVjtBQU5NOztBQVFQLElBQUEsR0FBTyxRQUFBLENBQUEsQ0FBQTtBQUNOLE1BQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FB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QUE2QyxJQUFBLEdBQUssQ0FBbEQsRUFBb0QsSUFBcEQ7RUFFQSxJQUFHLE9BQUEsS0FBVyxVQUFkO0lBQThCLE9BQUEsR0FBOUI7O0VBQ0EsSUFBRyxPQUFBLEtBQVcsUUFBZDtJQUE0QixPQUFBLEdBQTVCOztTQUNBLE9BQUEsR0FBVSxTQUFBLENBQVUsT0FBVixFQUFrQixDQUFsQixFQUFvQixNQUFNLENBQUMsTUFBUCxHQUFjLENBQWxDO0FBckNKOztBQXVDUCxVQUFBLEdBQWEsUUFBQSxDQUFBLENBQUE7RUFDWixJQUFHLE9BQUEsS0FBVyxXQUFkO0lBQStCLE9BQUEsR0FBL0I7O0VBQ0EsSUFBRyxPQUFBLEtBQVcsVUFBZDtJQUE4QixPQUFBLEdBQTlCOztFQUNBLE9BQUEsR0FBVSxTQUFBLENBQVUsT0FBVixFQUFrQixDQUFsQixFQUFvQixNQUFNLENBQUMsTUFBUCxHQUFjLENBQWxDO1NBQ1YsT0FBQSxHQUFVO0FBSkU7O0FBTWIsV0FBQSxHQUFjLFFBQUEsQ0FBQSxDQUFBO1NBQUcsT0FBQSxHQUFVO0FBQWIiLCJzb3VyY2VzQ29udGVudCI6WyJjdXJyZW50PTBcbmZhc3RLZXk9MFxuXG5zZXR1cCA9ICgpIC0+XG5cdGNyZWF0ZUNhbnZhcyB3aW5kb3dXaWR0aC0yMCwgd2luZG93SGVpZ2h0LTIwXG5cdG5ld3BvaW50cyA9IHNpbXBsaWZ5IHBvaW50cywwLjM5XHRcblx0dGV4dFNpemUgMzBcblxuc2hvdyA9IChwKSAtPiBwb2ludCAyLjUqKDMwMCtwLngpLDIuNSooMjAwK3AueSlcblxuaW5mbyA9ICh0aXRsZSx4LHkscixnLGIsc3cpIC0+XG5cdG5vU3Ryb2tlKClcblx0ZmlsbCAyNTVcblx0dGV4dCB0aXRsZSx4KzIwLHlcblx0c3Ryb2tlIHIsZyxiXG5cdHN0cm9rZVdlaWdodCBzd1xuXHRwb2ludCB4LHktMTBcblxuZHJhdyA9IC0+XG5cdGJhY2tncm91bmQgMFxuXHRub0ZpbGwoKVxuXG5cdFtwaSxxaSxyaSxsZXZlbF0gPSBjaHJvbm9bY3VycmVudF1cblx0aW5mbyAnY3VycmVudCBlbmQgcG9pbnRzJywzMDAsODAwLDI1NSwwLDAsMTBcblx0c2hvdyBwb2ludHNbcGldXG5cdHNob3cgcG9pbnRzW3JpXVxuXHRpbmZvICdtb3N0IGRpc3RhbnQgcG9pbnQnLDMwMCw5MDAsMjU1LDI1NSwwLDEwXG5cdHNob3cgcG9pbnRzW3FpXVxuXG5cdGluZm8gJ2ZvdW5kIHBvaW50cycsMzAwLDk1MCwwLDI1NSwwLDdcblx0Zm9yIGkgaW4gcmFuZ2UgY3VycmVudFxuXHRcdFtwaSxxaSxyaSxsZXZlbF0gPSBjaHJvbm9baV1cblx0XHRzaG93IHBvaW50c1txaV1cblxuXHRpbmZvIFwic2ltcGxpZmllZCAje2Nocm9uby5sZW5ndGh9IHBvaW50c1wiLDMwMCwxMDAwLDAsMjU1LDAsM1xuXHRzaG93IHBvaW50c1txaV0gZm9yIFtwaSxxaSxyaSxsZXZlbF0gaW4gY2hyb25vXG5cblx0aW5mbyBcIm9yaWdpbmFsICN7cG9pbnRzLmxlbmd0aH0gcG9pbnRzXCIsMzAwLDc1MCwyNTUsMjU1LDI1NSwxXG5cdHNob3cgcCBmb3IgcCBpbiBwb2ludHMgXG5cblx0aW5mbyAnY3VycmVudCBsaW5lJywzMDAsODUwLDI1NSwwLDAsMVxuXHRbcGkscWkscmksbGV2ZWxdID0gY2hyb25vW2N1cnJlbnRdXG5cdHNob3cgcG9pbnRzW2ldIGZvciBpIGluIHJhbmdlIHBpLHJpXG5cblx0bm9TdHJva2UoKVxuXHR0ZXh0ICdSYW1lci1Eb3VnbGFzLVBldWNrZXInLDUwLDEwMFx0XG5cdHRleHQgXCIje2N1cnJlbnR9IGN1cnJlbnRcIiwxNDAwLTcsNzAwXHRcblx0dGV4dCAnVXAgPSBGYXN0IEZvcndhcmQnLDE0MDAsODAwXG5cdHRleHQgJ0xlZnQgPSBQcmV2JywxMzAwLDg1MFxuXHR0ZXh0ICdSaWdodCA9IE5leHQnLDE1MDAsODUwXG5cdHRleHQgJ0Rvd24gPSBGYXN0IEJhY2t3YXJkJywxNDAwLDkwMFxuXHR0ZXh0IFwiI3tjaHJvbm9bY3VycmVudF1bM119IHJlY3Vyc2lvbiBsZXZlbFwiLDE0MDAtNywxMDAwXG5cblx0aWYgZmFzdEtleSA9PSBET1dOX0FSUk9XIHRoZW4gY3VycmVudC0tXG5cdGlmIGZhc3RLZXkgPT0gVVBfQVJST1cgdGhlbiBjdXJyZW50Kytcblx0Y3VycmVudCA9IGNvbnN0cmFpbiBjdXJyZW50LDAsY2hyb25vLmxlbmd0aC0xXG5cbmtleVByZXNzZWQgPSAtPiBcblx0aWYga2V5Q29kZSA9PSBSSUdIVF9BUlJPVyB0aGVuIGN1cnJlbnQrK1xuXHRpZiBrZXlDb2RlID09IExFRlRfQVJST1cgdGhlbiBjdXJyZW50LS1cblx0Y3VycmVudCA9IGNvbnN0cmFpbiBjdXJyZW50LDAsY2hyb25vLmxlbmd0aC0xXG5cdGZhc3RLZXkgPSBrZXlDb2RlIFxuXG5rZXlSZWxlYXNlZCA9IC0+IGZhc3RLZXkgPSAwXG4iXX0=
//# sourceURL=C:\Lab\2019\014-Ramer-Douglas-Peucker\coffee\sketch.coffee