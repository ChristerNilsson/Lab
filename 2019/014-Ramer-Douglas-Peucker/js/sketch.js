// Generated by CoffeeScript 2.3.2
var current, draw, fastKey, info, keyPressed, keyReleased, myround, p1, p2, setup, show, treshold;

current = 0;

fastKey = 0;

p1 = null;

p2 = null;

treshold = 0.385;

setup = function() {
  var newpoints, p, xs, ys;
  //createCanvas 1500,1000 
  createCanvas(windowWidth - 20, windowHeight - 20);
  xs = (function() {
    var j, len, results;
    results = [];
    for (j = 0, len = points.length; j < len; j++) {
      p = points[j];
      results.push(p.x);
    }
    return results;
  })();
  ys = (function() {
    var j, len, results;
    results = [];
    for (j = 0, len = points.length; j < len; j++) {
      p = points[j];
      results.push(p.y);
    }
    return results;
  })();
  p1 = {
    x: min(xs),
    y: min(ys)
  };
  p2 = {
    x: max(xs),
    y: max(ys)
  };
  newpoints = simplify(points, treshold);
  return print(chrono);
};

show = function(p) {
  var factor, xfactor, yfactor;
  xfactor = 1500 / (p2.x - p1.x);
  yfactor = 1000 / (p2.y - p1.y);
  factor = 0.9 * min(xfactor, yfactor);
  return point(factor * (-1.1 * p1.x + p.x), factor * (-1.1 * p1.y + p.y));
};

info = function(title, x, y, r, g, b, sw) {
  noStroke();
  fill(255);
  text(title, x + 20, y);
  stroke(r, g, b);
  strokeWeight(sw);
  return point(x, y - 10);
};

myround = function(x, n) {
  return round(x * 10 ** n) / 10 ** n;
};

draw = function() {
  var i, j, k, l, len, len1, len2, len3, level, m, p, pi, qi, ref, ref1, ri, x1, x2;
  scale(height / 1000);
  background(0);
  noFill();
  x1 = 75;
  textSize(32);
  [pi, qi, ri, level] = chrono[current];
  info('current end points', x1, 750, 255, 0, 0, 12);
  show(points[pi]);
  show(points[ri]);
  info('most distant point', x1, 850, 255, 255, 0, 12);
  show(points[qi]);
  info('found points', x1, 900, 0, 255, 0, 7);
  show(points[0]);
  ref = range(current + 1);
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    [pi, qi, ri, level] = chrono[i];
    show(points[qi]);
  }
  info(`simplified ${chrono.length} points`, x1, 950, 0, 255, 0, 3);
  for (k = 0, len1 = chrono.length; k < len1; k++) {
    [pi, qi, ri, level] = chrono[k];
    show(points[qi]);
  }
  info(`original ${points.length} points`, x1, 700, 255, 255, 255, 1);
  for (l = 0, len2 = points.length; l < len2; l++) {
    p = points[l];
    show(p);
  }
  info('current line', x1, 800, 255, 0, 0, 1);
  [pi, qi, ri, level] = chrono[current];
  ref1 = range(pi, ri);
  for (m = 0, len3 = ref1.length; m < len3; m++) {
    i = ref1[m];
    show(points[i]);
  }
  noStroke();
  x2 = 1150;
  text('Ramer-Douglas-Peucker', 0.9 * x2, 100);
  text(`current: ${current}`, x2, 600);
  text(`distance: ${myround(chrono[current][4], 2)}`, x2, 650);
  text(`treshold: ${treshold}`, x2, 700);
  text('up = fast forward', x2, 750);
  text('left = prev    right = next', x2, 800);
  text('down = fast backward', x2, 850);
  text(`recursion level: ${chrono[current][3]}`, x2, 900);
  if (fastKey === DOWN_ARROW) {
    current--;
  }
  if (fastKey === UP_ARROW) {
    current++;
  }
  return current = constrain(current, 0, chrono.length - 1);
};

keyPressed = function() {
  if (keyCode === RIGHT_ARROW) {
    current++;
  }
  if (keyCode === LEFT_ARROW) {
    current--;
  }
  current = constrain(current, 0, chrono.length - 1);
  return fastKey = keyCode;
};

keyReleased = function() {
  return fastKey = 0;
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2019\014-Ramer-Douglas-Peucker\coffee\sketch.coffee