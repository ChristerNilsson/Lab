{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\t \nimport testReducer from './testReducer.js'\n\nconst stack = []\n\nconst op = (state,value) => {\n\tconst hist = [...state.hist, state.a]\n\treturn {...state, a:value, hist}\n}\n\nconst reducers = {\n\tADD: (state) => op(state,state.a+2),\n\tMUL: (state) => op(state,state.a*2),\n\tDIV: (state) => op(state,state.a/2),\n\tNEW: (state) => ({b:stack.pop(), a:stack.pop(), hist:[]}),\n\tUNDO: (state) => {\n\t\tconst hist = state.hist.slice()\n\t\tconst a = hist.pop()\n\t\tconst b = state.b\n\t\treturn {a,b,hist}\n\t}\n}\n\nlet script = `\n{\"a\":18,\"b\":17,\"hist\":[]} # initial state\n\t@a 18 ==                # assert @a deeply equals 18\n\t@b 17                   # implicit == assertion\n\tADD @a 20               # based on line 1\n\tMUL @a 36 @hist [18]    # also based on line 1\n\tDIV @ {\"a\":9,\"b\":17,\"hist\":[18]} # @ is the state\n\t3 4 NEW @a 3 @b 4 @hist [] # NEW takes two parameters\n{\"a\":17,\"b\":1,\"hist\":[]}  # another initial state\n\tMUL ADD DIV @ {\"a\":18,\"b\":1,\"hist\":[17,34,36]}\n\t\tUNDO @ {\"a\":36,\"b\":1,\"hist\":[17,34]} # based on 9\n\t\t\tUNDO @ {\"a\":34,\"b\":1,\"hist\":[17]}  # based on 10\n\t\t\t\tUNDO @ {\"a\":17,\"b\":1,\"hist\":[99]}\n\t# a solution from 17 to 1 in eleven steps\n\tMUL ADD DIV ADD DIV ADD DIV ADD DIV DIV DIV @a @b\n`\nconst editor = CodeMirror(document.body, {\n\tlineNumbers: true, \n\ttabSize:2,\n\tindentWithTabs: true,\n\ttheme : 'dracula'\n}); \neditor.setSize(1000,600)\neditor.setValue(script.trim())\neditor.on(\"change\", () => {\n\tviewer.setValue(reducer.run(editor.getValue()).join('\\n'))\n})\n\nconst viewer = CodeMirror(document.body, {\n\treadOnly:true,\n\ttabSize:2,\n});\nviewer.setSize(1000,400)\n\nconst reducer = testReducer(reducers, stack) \nviewer.setValue(reducer.run(editor.getValue()).join('\\n'))\n\n</script> \n\n<style>\ndiv {\n\tfloat: left; \n\twidth: 100%;  \n}\nli {\n\tfont-family: monospace\n}\n</style>\n\n<div style='position:absolute; left:1050px; top:10px; width:40%'>\n\t<h2>Reducer Based Testing</h2>\n\t<div>This is a compact format for testing <a href='https://redux.js.org/basics/reducers'>Reducers</a> and an alternative to:</div>\n\t<div>&nbsp;</div>\n\t<ul>\n\t\t<li>test('adds 1 + 2 to equal 3', () => {'{'}</li>\n  \t<li>&nbsp;&nbsp;expect(sum(1, 2)).toBe(3);</li>\n\t\t<li>{'}'});</li>\n\t</ul>\n\t<div>&nbsp;</div>\n\t<div>Reducer: State + Action => State</div>\n\t<div>&nbsp;</div>\n\t<div>Each line contains zero or more actions</div>\n\t<div>Each line contains zero or more <a href='https://en.wikipedia.org/wiki/Assertion_(software_development)'>assertions</a></div>\n\t<div>&nbsp;</div>\n\t<div>Lines with no indentation contains initial states</div>\n\t<div>Indented lines are based on previous states</div>\n\t<div>Alternative actions have the same indentation</div>\n\t<div>&nbsp;</div>\n\t<div><a href='https://en.wikipedia.org/wiki/JSON'>JSON</a> is used to describe states</div>\n\t<div><a href='https://en.wikipedia.org/wiki/Reverse_Polish_notation'>RPN</a> is used for actions and getters</div>\n\t<div>&nbsp;</div>\n\t<div>Implicit assertion uses ==</div>\n\t<div>== deeply compares top two stack elements</div>\n\t<div>Implicit assertions repeats until the stack is empty</div>\n\t<div>Alternative assertions might be defined</div>\n\t<div>Actions may consume parameters</div>\n\t<div>&nbsp;</div>\n\n\tActions:\n\t<ul>\n \t\t<li>ADD : a = a + 2</li>\n\t\t<li>MUL : a = a * 2</li>\n\t\t<li>DIV : a = a / 2</li>\n\t\t<li>NEW</li>\n\t\t<li>UNDO</li>\n\t</ul>\n\t\n\tGetters: \n\t<ul>\n\t\t<li>@ : The State</li>\n\t\t<li>@a : The number to be changed</li>\n\t\t<li>@b : Target number</li>\n\t\t<li>@hist : List for Undo</li>\n\t</ul>\n\t<div>&nbsp;</div>\n\tKnown bugs:\n\t<ul>\n\t\t<li>Spaces are not allowed in expressions</li>\n\t\t<li>Tabs must be used for indentation</li>\n\t</ul>\n</div>\n\n<div style='position:absolute; left:10px; top:1015px; width:80%'>\n\t<div>Chess example (<a href='https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation'>Forsythâ€“Edwards Notation</a>)</div>\n\t<ul>\n\t\t<li>{'{'}{'\"board\"'}:{'\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\"'}{'}'}</li>\n\t\t<li>&nbsp;&nbsp;e2e4 MOVE @board rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR</li>\n\t\t<li>&nbsp;&nbsp;&nbsp;&nbsp;e7e5 MOVE @board rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR</li>\n\t</ul>\n</div>\n\n"
  ],
  "names": [],
  "mappings": "AA+DA,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,AACZ,CAAC,AACD,EAAE,eAAC,CAAC,AACH,WAAW,CAAE,SAAS;AACvB,CAAC"
}