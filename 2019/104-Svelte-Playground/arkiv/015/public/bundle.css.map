{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\t \n\timport testReducer from './testReducer.js'\n\n\tconst stack = []\n\n\tconst op = (state,value) => {\n\t\tconst hist = [...state.hist, state.a]\n\t\treturn {...state, a:value, hist}\n\t}\n\n\tconst reducers = {\n\t\tADD: (state) => op(state,state.a+2),\n\t\tMUL: (state) => op(state,state.a*2),\n\t\tDIV: (state) => op(state,state.a/2),\n\t\tNEW: (state) => ({b:stack.pop(), a:stack.pop(), hist:[]}),\n\t\tUNDO: (state) => {\n\t\t\tconst hist = state.hist.slice()\n\t\t\tconst a = hist.pop()\n\t\t\tconst b = state.b\n\t\t\treturn {a,b,hist}\n\t\t}\n\t}\n\n\tlet script = `\n{\"a\":18,\"b\":17,\"hist\":[]}\n\tADD STATE {\"a\":20,\"b\":17,\"hist\":[18]}\n\tMUL STATE {\"a\":36,\"b\":17,\"hist\":[18]}\n\tDIV STATE {\"a\":9,\"b\":17,\"hist\":[18]}\n\t17 1 NEW A 17 B 1 HIST []\n{\"a\":17,\"b\":1,\"hist\":[]}\n\tMUL ADD DIV STATE {\"a\":18,\"b\":1,\"hist\":[17,34,36]}\n\t\tUNDO STATE {\"a\":36,\"b\":1,\"hist\":[17,34]}\n\t\t\tUNDO STATE {\"a\":34,\"b\":1,\"hist\":[17]}\n\t\t\t\tUNDO STATE {\"a\":17,\"b\":1,\"hist\":[99]}\n\tMUL ADD DIV ADD DIV ADD DIV ADD DIV DIV DIV A 1\n`\n\tlet temp = ''\n\t\n\tconst editor = CodeMirror(document.body, {\n\t\tlineNumbers: true, \n\t\ttabSize:2,\n\t\ttheme : 'dracula'\n\t}); \n\teditor.setSize(1000,600)\n\teditor.setValue(script.trim())\n\teditor.on(\"change\", () => {\n\t\tviewer.setValue(reducer.run(editor.getValue()).join('\\n'))\n\t})\n\n\tconst viewer = CodeMirror(document.body, {\n\t\treadOnly:true,\n\t\ttabSize:2,\n\t});\n\tviewer.setSize(1000,200)\n\n\tconst reducer = testReducer(reducers, stack) \n\tviewer.setValue(reducer.run(editor.getValue()).join('\\n'))\n\t\n</script> \n\n<style>\ndiv {\n\tfloat: left; \n\twidth: 100%;  \n}\n</style>\n\n<div style='position:absolute; left:1050px; top:10px;'>\n\t<h2>Action State Tree Testing</h2>\n\t<div>This is a compact format for making tests</div>\n\t<div>Each line contains zero or more actions</div>\n\t<div>Each line contains zero or more tests</div>\n\t<div>&nbsp;</div>\n\t<div>Lines are based on less indented lines</div>\n\t<div>Alternative actions have the same indentation</div>\n\t<div>Lines with no indentation contains initial states.</div>\n\t<div>&nbsp;</div>\n\t<div>JSON is used to describe states</div>\n\t<div>RPN is used for actions and getters</div>\n\t<div>&nbsp;</div>\n\n\tActions:\n\t<ul>\n \t\t<li>ADD : a = a + 2</li>\n\t\t<li>MUL : a = a * 2</li>\n\t\t<li>DIV : a = a / 2</li>\n\t\t<li>NEW</li>\n\t\t<li>UNDO</li>\n\t</ul>\n\t\n\tGetters: \n\t<ul>\n\t\t<li>STATE : The State</li>\n\t\t<li>A : The number to be changed</li>\n\t\t<li>B : Target number</li>\n\t\t<li>HIST : List for Undo</li>\n\t</ul>\n\t<div>Assertions are done by taking two items </div>\n\t<div>from the stack at a time and comparing deeply.</div>\n\t<div>&nbsp;</div>\n\tLine 5 contains three assertions:\n\t<ul>\n\t\t<li>A == 17</li>\n\t\t<li>B == 1</li>\n\t\t<li>HIST == []</li>\n\t</ul>\n\t<div>Actions may consume parameters. E.g. NEW</div>\n\t<div>&nbsp;</div>\n\tKnown quirks:\n\t<ul>\n\t\t<li>Spaces are not allowed in expressions</li>\n\t\t<li>Very sensitive to editing</li>\n\t</ul>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA6DA,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,AACZ,CAAC"
}