var app=function(){"use strict";function t(){}function e(t){return t()}function n(){return Object.create(null)}function i(t){t.forEach(e)}function r(t){return"function"==typeof t}function o(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function s(t,e){t.appendChild(e)}function a(t,e,n){t.insertBefore(e,n||null)}function l(t){t.parentNode.removeChild(t)}function u(t){return document.createElement(t)}function c(t){return document.createTextNode(t)}function d(){return c(" ")}function p(t,e,n){null==n?t.removeAttribute(e):t.setAttribute(e,n)}function h(t,e,n,i){t.style.setProperty(e,n,i?"important":"")}let f;function b(t){f=t}const m=[],g=[],$=[],x=[],v=Promise.resolve();let y=!1;function D(t){$.push(t)}function N(){const t=new Set;do{for(;m.length;){const t=m.shift();b(t),P(t.$$)}for(;g.length;)g.pop()();for(let e=0;e<$.length;e+=1){const n=$[e];t.has(n)||(n(),t.add(n))}$.length=0}while(m.length);for(;x.length;)x.pop()();y=!1}function P(t){t.fragment&&(t.update(t.dirty),i(t.before_update),t.fragment.p(t.dirty,t.ctx),t.dirty=null,t.after_update.forEach(D))}const w=new Set;let k;function C(t,e){t&&t.i&&(w.delete(t),t.i(e))}function O(t,n,o){const{fragment:s,on_mount:a,on_destroy:l,after_update:u}=t.$$;s.m(n,o),D(()=>{const n=a.map(e).filter(r);l?l.push(...n):i(n),t.$$.on_mount=[]}),u.forEach(D)}function A(t,e){t.$$.fragment&&(i(t.$$.on_destroy),t.$$.fragment.d(e),t.$$.on_destroy=t.$$.fragment=null,t.$$.ctx={})}function _(t,e){t.$$.dirty||(m.push(t),y||(y=!0,v.then(N)),t.$$.dirty=n()),t.$$.dirty[e]=!0}function M(e,r,o,s,a,l){const u=f;b(e);const c=r.props||{},d=e.$$={fragment:null,ctx:null,props:l,update:t,not_equal:a,bound:n(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(u?u.$$.context:[]),callbacks:n(),dirty:null};let p=!1;var h;d.ctx=o?o(e,c,(t,n,i=n)=>(d.ctx&&a(d.ctx[t],d.ctx[t]=i)&&(d.bound[t]&&d.bound[t](i),p&&_(e,t)),n)):c,d.update(),p=!0,i(d.before_update),d.fragment=s(d.ctx),r.target&&(r.hydrate?d.fragment.l((h=r.target,Array.from(h.childNodes))):d.fragment.c(),r.intro&&C(e.$$.fragment),O(e,r.target,r.anchor),N()),b(u)}class E{$destroy(){A(this,1),this.$destroy=t}$on(t,e){const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}$set(){}}const S=chai.assert.deepEqual,V=(t,e)=>{let n=[],i=[];const r=(t,r)=>{const a=s(t);if(t=t.trim(),0===a)return n=[JSON.parse(t)];e.length=0;let l=n[a-1];for(const e of t.split(" "))l=o(e,l,r);for(n[a]=l;e.length>=2;)o("==",l,r);1!==e.length||i.push(`Orphan in line ${r+1}`)},o=(n,r,o)=>{if("@"===n)return e.push(r),r;const s=n.slice(1);if(Object.keys(r).includes(s))return e.push(r[s]),r;if(Object.keys(t).includes(n))return t[n](r);if("=="===n){let t,n;try{t=e.pop(),n=e.pop(),S(t,n)}catch(e){i.push("Assert failure in line "+(o+1)),i.push("  Actual "+JSON.stringify(n)),i.push("  Expect "+JSON.stringify(t))}return r}try{if(""==n)return r;e.push(JSON.parse(n))}catch(t){i.push("JSON.parse failure in line "+(o+1)+" "+n),i.push("\t"+n)}return r},s=t=>{let e=0;for(let n=0;n<t.length;n++){if("\t"!==t[n])return e;e++}return e};return{run:t=>{const e=t.split("\n");i=[];for(let t=0;t<e.length;t++){let n=e[t];const o=n.lastIndexOf("#");o>=0&&(n=n.slice(0,o));try{0!=n.trim().length&&r(n,t)}catch(t){i.push(t);break}}return i}}};function T(e){var n,i,r,o,f,b,m,g,$,x,v,y,D,N,P,w,k,C,O,A,_,M,E,S,V,T,L,I,R,U,j,B,H,q,J,z,W,K,Q,F,G,X,Y,Z,tt,et,nt,it,rt,ot,st,at,lt,ut,ct,dt,pt,ht,ft,bt,mt,gt,$t,xt;return{c(){n=u("div"),(i=u("h2")).textContent="Reducer Based Testing",r=d(),(o=u("div")).innerHTML='This is a compact format for testing <a href="https://redux.js.org/basics/reducers">Reducers</a> and an alternative to:',f=d(),b=u("pre"),m=c("test('adds 1 + 2 to equal 3', () => "),g=c("{"),$=c("\r\n  expect(sum(1, 2)).toBe(3);\r\n"),x=c("}"),v=c(");"),y=d(),(D=u("div")).textContent="Reducer: State + Action => State",N=d(),(P=u("div")).textContent=" ",w=d(),(k=u("div")).textContent="Each line contains zero or more actions",C=d(),(O=u("div")).innerHTML='Each line contains zero or more <a href="https://en.wikipedia.org/wiki/Assertion_(software_development)">assertions</a>',A=d(),(_=u("div")).textContent=" ",M=d(),(E=u("div")).textContent="Lines with no indentation contains initial states",S=d(),(V=u("div")).textContent="Indented lines are based on previous states",T=d(),(L=u("div")).textContent="Alternative actions have the same indentation",I=d(),(R=u("div")).textContent=" ",U=d(),(j=u("div")).innerHTML='<a href="https://en.wikipedia.org/wiki/JSON">JSON</a> is used to describe states',B=d(),(H=u("div")).innerHTML='<a href="https://en.wikipedia.org/wiki/Reverse_Polish_notation">RPN</a> is used for actions and getters',q=d(),(J=u("div")).textContent=" ",z=d(),(W=u("div")).textContent="Implicit assertion uses ==",K=d(),(Q=u("div")).textContent="== deeply compares top two stack elements",F=d(),(G=u("div")).textContent="Implicit assertions repeats until the stack is empty",X=d(),(Y=u("div")).textContent="Alternative assertions might be defined",Z=d(),(tt=u("div")).textContent="Actions may consume parameters",et=d(),(nt=u("div")).textContent=" ",it=c("\r\n\r\n\tActions:\r\n\t"),(rt=u("ul")).innerHTML="<li>ADD : a = a + 2</li> <li>MUL : a = a * 2</li> <li>DIV : a = a / 2</li> <li>NEW</li> <li>UNDO</li>",ot=c("\r\n\t\r\n\tGetters: \r\n\t"),(st=u("ul")).innerHTML="<li>@ : The State</li> <li>@a : The number to be changed</li> <li>@b : Target number</li> <li>@hist : List for Undo</li>",at=d(),(lt=u("div")).textContent=" ",ut=c("\r\n\tKnown bugs:\r\n\t"),(ct=u("ul")).innerHTML="<li>Spaces are not allowed in expressions</li> <li>Tabs must be used for indentation</li>",dt=d(),pt=u("div"),(ht=u("div")).innerHTML='Chess example (<a href="https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation">Forsyth–Edwards Notation</a>)',ft=d(),bt=u("pre"),mt=c("{"),gt=c('"board":"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR"'),$t=c("}"),xt=c("\r\n  e2e4 MOVE @board rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR\r\n    e7e5 MOVE @board rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR"),h(b,"width","450px"),p(b,"class","svelte-jkhedh"),h(n,"position","absolute"),h(n,"left","1050px"),h(n,"top","10px"),h(n,"width","40%"),h(bt,"width","1000px"),p(bt,"class","svelte-jkhedh"),h(pt,"position","absolute"),h(pt,"left","10px"),h(pt,"top","965px"),h(pt,"width","80%")},m(t,e){a(t,n,e),s(n,i),s(n,r),s(n,o),s(n,f),s(n,b),s(b,m),s(b,g),s(b,$),s(b,x),s(b,v),s(n,y),s(n,D),s(n,N),s(n,P),s(n,w),s(n,k),s(n,C),s(n,O),s(n,A),s(n,_),s(n,M),s(n,E),s(n,S),s(n,V),s(n,T),s(n,L),s(n,I),s(n,R),s(n,U),s(n,j),s(n,B),s(n,H),s(n,q),s(n,J),s(n,z),s(n,W),s(n,K),s(n,Q),s(n,F),s(n,G),s(n,X),s(n,Y),s(n,Z),s(n,tt),s(n,et),s(n,nt),s(n,it),s(n,rt),s(n,ot),s(n,st),s(n,at),s(n,lt),s(n,ut),s(n,ct),a(t,dt,e),a(t,pt,e),s(pt,ht),s(pt,ft),s(pt,bt),s(bt,mt),s(bt,gt),s(bt,$t),s(bt,xt)},p:t,i:t,o:t,d(t){t&&(l(n),l(dt),l(pt))}}}class L extends E{constructor(t){super(),M(this,t,null,T,o,[])}}function I(e){var n,i=new L({});return{c(){i.$$.fragment.c()},m(t,e){O(i,t,e),n=!0},p:t,i(t){n||(C(i.$$.fragment,t),n=!0)},o(t){!function(t,e,n,i){if(t&&t.o){if(w.has(t))return;w.add(t),k.c.push(()=>{w.delete(t),i&&(n&&t.d(1),i())}),t.o(e)}}(i.$$.fragment,t),n=!1},d(t){A(i,t)}}}function R(t){const e=[],n=(t,e)=>{const n=[...t.hist,t.a];return{...t,a:e,hist:n}},i={ADD:t=>n(t,t.a+2),MUL:t=>n(t,2*t.a),DIV:t=>n(t,t.a/2),NEW:t=>({b:e.pop(),a:e.pop(),hist:[]}),UNDO:t=>{const e=t.hist.slice();return{a:e.pop(),b:t.b,hist:e}}};let r='\n{"a":18,"b":17,"hist":[]} # initial state\n\t@a 18 ==                # assert @a deeply equals 18\n\t@b 17                   # implicit == assertion\n\tADD @a 20               # based on line 1\n\tMUL @a 36 @hist [18]    # also based on line 1\n\tDIV @ {"a":9,"b":17,"hist":[18]} # @ is the state\n\t3 4 NEW @a 3 @b 4 @hist [] # NEW takes two parameters\n{"a":17,"b":1,"hist":[]}  # another initial state\n\tMUL ADD DIV @ {"a":18,"b":1,"hist":[17,34,36]}\n\t\tUNDO @ {"a":36,"b":1,"hist":[17,34]} # based on 9\n\t\t\tUNDO @ {"a":34,"b":1,"hist":[17]}  # based on 10\n\t\t\t\tUNDO @ {"a":17,"b":1,"hist":[]}\n\t# a solution from 17 to 1 in eleven steps\n\tMUL ADD DIV ADD DIV ADD DIV ADD DIV DIV DIV @a @b\n';const o=CodeMirror(document.body,{lineNumbers:!0,tabSize:2,indentWithTabs:!0,theme:"dracula"});o.setSize(1e3,600),o.setValue(r.trim()),o.on("change",()=>{s.setValue(a.run(o.getValue()).join("\n"))});const s=CodeMirror(document.body,{readOnly:!0,tabSize:2});s.setSize(1e3,300);const a=V(i,e);return s.setValue(a.run(o.getValue()).join("\n")),{}}return new class extends E{constructor(t){super(),M(this,t,R,I,o,[])}}({target:document.body,props:{}})}();
//# sourceMappingURL=bundle.js.map
