// Generated by CoffeeScript 1.11.1
var aSlider, bSlider, boys, cSlider, calc, dSlider, drawtext, eSlider, girls, makerow, makerow_nr, mothers, religious, secular, setup, spaces, stat, statistics, total, xdraw;

aSlider = null;

bSlider = null;

cSlider = null;

dSlider = null;

eSlider = null;

stat = null;

girls = [];

boys = [];

mothers = [];

total = [];

setup = function() {
  var button2, info, s, x;
  createCanvas(1000, 2300);
  textSize(15);
  x = 230;
  aSlider = createSlider(9, 39, 15);
  aSlider.position(x, 20);
  bSlider = createSlider(1, 4, 2);
  bSlider.position(x, 50);
  cSlider = createSlider(0, 8, 6);
  cSlider.position(x, 80);
  dSlider = createSlider(1, 5, 2);
  dSlider.position(x, 110);
  eSlider = createSlider(0, 10, 8);
  eSlider.position(x, 140);
  aSlider.changed(function() {
    return xdraw();
  });
  bSlider.changed(function() {
    return xdraw();
  });
  cSlider.changed(function() {
    return xdraw();
  });
  dSlider.changed(function() {
    return xdraw();
  });
  eSlider.changed(function() {
    return xdraw();
  });
  button2 = createButton('Secular');
  button2.position(120, 195);
  button2.mousePressed(secular);
  button2 = createButton('Religious');
  button2.position(220, 195);
  button2.mousePressed(religious);
  s = 'This is a calculation of the number of offsprings a single man can produce in a century<br>';
  s += 'The man is born in the year 2000<br>';
  s += 'The same policy is used for every marriage<br>';
  s += 'The spouse is always fetched from outside the country<br>';
  info = createP(s);
  info.position(410, 5);
  stat = createP('stat');
  stat.position(0, 220);
  return secular();
};

makerow = function(a, b, c, d, e) {
  var s;
  s = '';
  s += '<td>' + a + '</td>';
  s += '<td>' + b + '</td>';
  s += '<td>' + c + '</td>';
  s += '<td>' + d + '</td>';
  s += '<td>' + e + '</td>';
  return '<tr>' + s + '</tr>';
};

spaces = function(n) {
  var i, j, k, len, ref, res, s;
  s = '' + n;
  res = '';
  ref = range(s.length);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    j = s.length - i - 1;
    res = s[j] + res;
    if (i % 3 === 2 && j !== 0) {
      res = ',' + res;
    }
  }
  return res;
};

makerow_nr = function(a, b, c, d, e) {
  b = b === 0 ? '' : spaces(b);
  c = c === 0 ? '' : spaces(c);
  d = d === 0 ? '' : spaces(d);
  e = e === 0 ? '' : spaces(e);
  return makerow(a, b, c, d, e);
};

statistics = (function(_this) {
  return function() {
    var a, b, c, d, e, i, k, len, ref, s;
    s = makerow('Year', 'Boys', 'Girls', 'Mothers', 'Total');
    ref = range(99, -1, -1);
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      a = 2000 + i;
      b = boys[i];
      c = girls[i];
      d = mothers[i];
      e = total[i];
      s = s + makerow_nr(a, b, c, d, e);
    }
    return stat.html('<table>' + s + '</table>');
  };
})(this);

secular = function() {
  aSlider.value(30);
  bSlider.value(1);
  cSlider.value(2);
  dSlider.value(2);
  return xdraw();
};

religious = function() {
  aSlider.value(15);
  bSlider.value(2);
  cSlider.value(3);
  dSlider.value(2);
  eSlider.value(7);
  return xdraw();
};

calc = function(a, b, c, d, e) {
  var MARRIAGE, N, count, g, i, k, l, len, len1, len2, m, ref, ref1, ref2, results, y, year;
  MARRIAGE = a;
  N = 100 + MARRIAGE;
  girls = [];
  boys = [];
  mothers = [];
  total = [];
  randomSeed(99);
  ref = range(N + MARRIAGE + 30);
  for (k = 0, len = ref.length; k < len; k++) {
    year = ref[k];
    boys[year] = 0;
    girls[year] = 0;
    mothers[year] = 0;
    total[year] = 0;
  }
  boys[0] = 1;
  total[0] = 1;
  ref1 = range(N);
  results = [];
  for (l = 0, len1 = ref1.length; l < len1; l++) {
    year = ref1[l];
    if ((0 < year && year < 100)) {
      total[year] = total[year - 1] + boys[year] + girls[year] + mothers[year];
    }
    ref2 = range(b);
    for (m = 0, len2 = ref2.length; m < len2; m++) {
      i = ref2[m];
      y = year + MARRIAGE + i * e;
      if (y <= N) {
        mothers[y] += boys[year];
      }
    }
    mothers[year + MARRIAGE] += girls[year];
    count = mothers[year];
    results.push((function() {
      var len3, o, ref3, results1;
      ref3 = range(c);
      results1 = [];
      for (o = 0, len3 = ref3.length; o < len3; o++) {
        i = ref3[o];
        if (count % 2 === 1) {
          g = (count - 1) / 2 + round(random(0, 1));
        } else {
          g = count / 2;
        }
        girls[year + d * i + 1] += g;
        results1.push(boys[year + d * i + 1] += count - g);
      }
      return results1;
    })());
  }
  return results;
};

drawtext = function(txt, value, x, y) {
  text(txt, 5, y);
  return text(value, x, y);
};

xdraw = function() {
  var a, b, c, d, e, x;
  a = aSlider.value();
  b = bSlider.value();
  c = cSlider.value();
  d = dSlider.value();
  e = eSlider.value();
  calc(a, b, c, d, e);
  background(255);
  x = 380;
  drawtext("Marriage age: (9-39) ", a, x, 35);
  drawtext("Wives per husband: (1-4) ", b, x, 65);
  drawtext("Children per wife: (0-8) ", c, x, 95);
  drawtext("Years between births: (1-5) ", d, x, 125);
  drawtext("Years between marriages: (0-10)", e, x, 155);
  return statistics();
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\Lab\2016\023-demografi-p5\coffee\sketch.coffee