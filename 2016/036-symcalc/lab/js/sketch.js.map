{
  "version": 3,
  "file": "sketch.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\sketch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "xmin=0\r\nxmax=0\r\nymin=0\r\nymax=0\r\n\r\nxmin0=0\r\nxmax0=0\r\nymin0=0\r\nymax0=0\r\n\r\nmymouse=0\r\ndecimals=0 # för axlarnas lablar\r\n\r\nx0=0 # startpunkt för lablar och rutnät\r\ny0=0\r\n\r\ndelta=0\r\n\r\nxgap = 5\r\nygap = 5\r\n\r\n# översätt till pixlar\r\npixelX = (x) -> map x,xmin,xmax,0,width\r\npixelY = (y) -> map y,ymax,ymin,0,height\r\npixelR = (r) -> map r,0,xmax-xmin,0,width \r\n\r\n# utvidga xmin,ymin och xmax,ymax\r\nminmax = (x,y) ->\r\n\txmin = min xmin,x\r\n\txmax = max xmax,x\r\n\tymin = min ymin,y\r\n\tymax = max ymax,y\r\n\r\n# utvidga xmin,xmax, ymin,ymax\r\ninit_xmin_xmax_ymin_ymax = -> \r\n\tfor key,value of data \r\n\t\tt = key[0]\r\n\t\tif t == 'p' \r\n\t\t\tminmax value.x,value.y\r\n\t\telse if t == 'c'\r\n\t\t\tr = abs value.radius\r\n\t\t\tminmax value.x-r,value.y-r\r\n\t\t\tminmax value.x+r,value.y+r\r\n\t\telse if t == 'l'\r\n\t\t\tminmax value.x1,value.y1\r\n\t\t\tminmax value.x2,value.y2\r\n\t\telse if t == 't'\r\n\t\t\tminmax value.x1,value.y1\r\n\t\t\tminmax value.x2,value.y2\r\n\t\t\tminmax value.x3,value.y3\r\n\r\n\t# utvidga xmin,xmax, ymin,ymax med 10%\r\n\t# och se se till att rutnätet blir kvadratiskt\r\n\tdx = xmax - xmin\r\n\tdy = ymax - ymin\r\n\td = 1.1 * max dx,dy\r\n\tif d == 0 then d=1\r\n\tcx = 0.5 * (xmin + xmax)\r\n\tcy = 0.5 * (ymin + ymax)\r\n\td = d/2\r\n\txmin = cx - d\r\n\txmax = cx + d\r\n\tymin = cy - d\r\n\tymax = cy + d\r\n\r\nsetup = ->\r\n\tcreateCanvas 800,800\r\n\ttextSize 20\r\n\tmymouse = new p5.Vector 0,0\r\n\tinit_xmin_xmax_ymin_ymax()\r\n\tmydraw()\r\n\r\n# rita cirkel och label\r\ncirkel = (label,o) -> \r\n\tx = pixelX o.x\r\n\ty = pixelY o.y\r\n\tr = pixelR o.radius\r\n\tstrokeWeight 1 \r\n\tstroke 255,0,0 \r\n\tnoFill() \r\n\tellipse x,y,2*r,2*r\r\n\tnoStroke()\r\n\tfill 255,0,0 \r\n\ttextAlign LEFT,BOTTOM \r\n\ttext label, x, y\r\n\r\n# rita triangel och label\r\ntriangel = (label,o) -> \r\n\tx1 = pixelX o.x1\r\n\ty1 = pixelY o.y1\r\n\tx2 = pixelX o.x2\r\n\ty2 = pixelY o.y2\r\n\tx3 = pixelX o.x3\r\n\ty3 = pixelY o.y3\r\n\tstrokeWeight 2\r\n\tstroke 255\r\n\tnoFill()\r\n\ttriangle x1,y1,x2,y2,x3,y3\r\n\tnoStroke()\r\n\tfill 255\r\n\ttextAlign RIGHT,TOP\r\n\ttext label, (x1+x2+x3)/3, (y1+y2+y3)/3\r\n\r\n# rita punkt och label\r\npunkt = (label,o) ->\r\n\tx = pixelX o.x\r\n\ty = pixelY o.y\r\n\tstrokeWeight 4\r\n\tstroke 0,255,0\r\n\tnoFill()\r\n\tpoint x,y\r\n\tnoStroke()\r\n\tfill 0,255,0\r\n\ttextAlign RIGHT,TOP\r\n\ttext label, x, y\r\n\r\n# rita linje och label\r\nlinje = (label,o) -> # YELLOW\r\n\tx1 = pixelX o.x1\r\n\ty1 = pixelY o.y1\r\n\tx2 = pixelX o.x2\r\n\ty2 = pixelY o.y2\r\n\tdx = 10 * (x2-x1)\r\n\tdy = 10 * (y2-y1)\r\n\tstrokeWeight 2 \r\n\tstroke 255,255,0 \r\n\tline x1-dx, y1-dy, x1+dx, y1+dy\r\n\tnoStroke()\r\n\tfill 255,255,0 \r\n\ttextAlign RIGHT,BOTTOM \r\n\ttext label, (x1+x2)/2, (y1+y2)/2\r\n\r\ndrawLineX = (x1,y1,x2,y2,thick) ->\r\n\tif pixelX(x1) < xgap then return\r\n\tif pixelX(x1) > width-xgap then return\r\n\tstrokeWeight if thick then 3 else 1\r\n\tstroke 0 # BLACK\r\n\tline pixelX(x1),pixelY(y1)-ygap, pixelX(x2),pixelY(y2)+ygap\r\n\r\ndrawLineY = (x1,y1,x2,y2,thick) ->\r\n\tif pixelY(y1) < ygap then return\r\n\tif pixelY(y1) > height-ygap then return\r\n\tstrokeWeight if thick then 3 else 1\r\n\tstroke 0 # BLACK\r\n\tline pixelX(x1)+xgap,pixelY(y1), pixelX(x2)-xgap,pixelY(y2)\r\n\r\ndrawLabel = (label,x,y,alignHor,alignVer) ->\r\n\tnoStroke()\r\n\tfill 0 # BLACK\r\n\ttextAlign alignHor, alignVer\r\n\ttext label, x, y  \r\n\r\nnormalisera = (x) ->\r\n\tq = floor Math.log10 x\r\n\t[x/10**q, q]\r\n\r\n# Visa cirka fem-tio gridlines\r\ncalcDelta = (c,d) ->\r\n\t[e,q] = normalisera d # 1 <= e < 10, q = ... -2,-1,0,1,2,3 ...\r\n\tdekad = 10 ** q\r\n\tp = 0.2\r\n\tif e >= 1.6 then p = 0.5\r\n\tif e >= 4 then p = 1.0\r\n\tif e >= 4 then adj = 1 else adj = 0\r\n\tdelta = p * dekad\r\n\tdecimals = 1-q-adj\r\n\tif decimals < 0 then decimals = 0\r\n\tdelta * round c/delta\r\n\r\n# Beräkna rutnätets startpunkt och rutstorlek\r\n# decide delta and where to print axis and labels.\r\ncalcGrid = ->\r\n\tx0 = calcDelta (xmin+xmax)/2,xmax-xmin\r\n\twhile x0 > xmin \r\n\t\tx0 -= delta\r\n\tx0 += delta\r\n\r\n\ty0 = calcDelta (ymin+ymax)/2,ymax-ymin\r\n\twhile y0 > ymin \r\n\t\ty0 -= delta\r\n\ty0 += delta\r\n\r\n# rita rutnät och axlar\r\ndrawGrid = ->\r\n\txgap = 20 + 12*decimals\r\n\tygap = 25 \r\n\tfor x in _.range x0,xmax,delta # riktiga värden\r\n\t\tthick = -delta/2 < x < delta/2 \r\n\t\tdrawLineX x,ymin, x,ymax, thick\r\n\t\tlabel = x.toFixed decimals\r\n\t\tdrawLabel label, pixelX(x),height, CENTER, BOTTOM\r\n\t\tdrawLabel label, pixelX(x),0,      CENTER, TOP\r\n\r\n\tfor y in _.range y0,ymax,delta\r\n\t\tthick =  -delta/2 < y < delta/2\r\n\t\tdrawLineY xmin,y, xmax,y, thick\r\n\t\tlabel = y.toFixed decimals\r\n\t\tdrawLabel label, 3,      pixelY(y), LEFT, CENTER\r\n\t\tdrawLabel label, width-3,pixelY(y), RIGHT, CENTER\r\n\r\ndrawObjects = ->\r\n\tfor name,o of data\r\n\t\tif name[0] == 'l' then linje name,o\r\n\t\tif name[0] == 't' then triangel name,o\r\n\t\tif name[0] == 'c' then cirkel name,o\r\n\tfor name,o of data\r\n\t\tif name[0] == 'p' then punkt name,o\r\n\r\nmydraw = ->\r\n\tbackground 128\r\n\tcalcGrid()\r\n\tdrawGrid()\r\n\tdrawObjects()\r\n\r\n# zooma in och ut\r\nmouseWheel = (event) ->\r\n\tx = map winMouseX,0,width,xmin,xmax\r\n\ty = map winMouseY,height,0,ymin,ymax\r\n\tfactor = 1 + event.delta*0.001\r\n\txmin = x - (x-xmin) * factor\r\n\txmax = x - (x-xmax) * factor\r\n\tymin = y - (y-ymin) * factor\r\n\tymax = y - (y-ymax) * factor\r\n\tmydraw()\r\n\r\n# memorera musen\r\nmousePressed = (event) ->\r\n\tmymouse.set winMouseX, winMouseY\r\n\txmin0 = xmin\r\n\txmax0 = xmax\r\n\tymin0 = ymin\r\n\tymax0 = ymax\r\n\r\n# flytta fönstret\r\nmouseDragged = (event) ->\r\n\tdx = map mymouse.x - winMouseX,0,width,0,xmax0-xmin0\r\n\tdy = map mymouse.y - winMouseY,0,height,0,ymax0-ymin0\r\n\txmin = xmin0 + dx\r\n\txmax = xmax0 + dx\r\n\tymin = ymin0 - dy\r\n\tymax = ymax0 - dy\r\n\tmydraw()\r\n"
  ]
}